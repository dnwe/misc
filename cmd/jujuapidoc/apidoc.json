{
	"Facades": [
		{
			"Doc": "ActionAPI implements the client API for interacting with Actions\n",
			"Methods": [
				{
					"Doc": "Actions takes a list of ActionTags, and returns the full Action for\neach ID.\n",
					"Name": "Actions",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ActionResults"
					}
				},
				{
					"Doc": "ApplicationsCharmsActions returns a slice of charm Actions for a slice of\nservices.\n",
					"Name": "ApplicationsCharmsActions",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ApplicationsCharmActionsResults"
					}
				},
				{
					"Doc": "Cancel attempts to cancel enqueued Actions from running.\n",
					"Name": "Cancel",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ActionResults"
					}
				},
				{
					"Doc": "Enqueue takes a list of Actions and queues them up to be executed by\nthe designated ActionReceiver, returning the params.Action for each\nenqueued Action, or an error if there was a problem enqueueing the\nAction.\n",
					"Name": "Enqueue",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Actions"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ActionResults"
					}
				},
				{
					"Doc": "FindActionTagsByPrefix takes a list of string prefixes and finds\ncorresponding ActionTags that match that prefix.\n",
					"Name": "FindActionTagsByPrefix",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#FindTags"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#FindTagsResults"
					}
				},
				{
					"Name": "FindActionsByNames",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#FindActionsByNames"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ActionsByNames"
					}
				},
				{
					"Doc": "ListAll takes a list of Entities representing ActionReceivers and\nreturns all of the Actions that have been enqueued or run by each of\nthose Entities.\n",
					"Name": "ListAll",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ActionsByReceivers"
					}
				},
				{
					"Doc": "ListCompleted takes a list of Entities representing ActionReceivers\nand returns all of the Actions that have been run on each of those\nEntities.\n",
					"Name": "ListCompleted",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ActionsByReceivers"
					}
				},
				{
					"Doc": "ListPending takes a list of Entities representing ActionReceivers\nand returns all of the Actions that are enqueued for each of those\nEntities.\n",
					"Name": "ListPending",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ActionsByReceivers"
					}
				},
				{
					"Doc": "ListRunning takes a list of Entities representing ActionReceivers and\nreturns all of the Actions that have are running on each of those\nEntities.\n",
					"Name": "ListRunning",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ActionsByReceivers"
					}
				},
				{
					"Doc": "Run the commands specified on the machines identified through the\nlist of machines, units and services.\n",
					"Name": "Run",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#RunParams"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ActionResults"
					}
				},
				{
					"Doc": "RunOnAllMachines attempts to run the specified command on all the machines.\n",
					"Name": "RunOnAllMachines",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#RunParams"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ActionResults"
					}
				}
			],
			"Name": "Action",
			"Version": 2
		},
		{
			"Doc": "AgentAPIV2 implements the version 2 of the API provided to an agent.\n",
			"Methods": [
				{
					"Doc": "ClearReboot will clear the reboot flag on provided machines, if it exists.\n",
					"Name": "ClearReboot",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				},
				{
					"Doc": "ControllerConfig returns the controller's configuration.\n",
					"Name": "ControllerConfig",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ControllerConfigResult"
					}
				},
				{
					"Name": "GetEntities",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#AgentGetEntitiesResults"
					}
				},
				{
					"Name": "IsMaster",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#IsMasterResult"
					}
				},
				{
					"Doc": "ModelConfig returns the current environment's configuration.\n",
					"Name": "ModelConfig",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ModelConfigResult"
					}
				},
				{
					"Doc": "SetPasswords sets the given password for each supplied entity, if possible.\n",
					"Name": "SetPasswords",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#EntityPasswords"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				},
				{
					"Name": "StateServingInfo",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#StateServingInfo"
					}
				},
				{
					"Doc": "WatchForModelConfigChanges returns a NotifyWatcher that observes\nchanges to the environment configuration.\nNote that although the NotifyWatchResult contains an Error field,\nit's not used because we are only returning a single watcher,\nso we use the regular error return.\n",
					"Name": "WatchForModelConfigChanges",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#NotifyWatchResult"
					}
				}
			],
			"Name": "Agent",
			"Version": 2
		},
		{
			"Doc": "AgentToolsAPI implements the API used by the machine model worker.\n",
			"Methods": [
				{
					"Doc": "UpdateToolsAvailable invokes a lookup and further update in environ\nfor new patches of the current tool versions.\n",
					"Name": "UpdateToolsAvailable"
				}
			],
			"Name": "AgentTools",
			"Version": 1
		},
		{
			"Doc": "SrvAllWatcher defines the API methods on a state.Multiwatcher.\nwhich watches any changes to the state. Each client has its own\ncurrent set of watchers, stored in resources. It is used by both\nthe AllWatcher and AllModelWatcher facades.\n",
			"Methods": [
				{
					"Name": "Next",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#AllWatcherNextResults"
					}
				},
				{
					"Name": "Stop"
				}
			],
			"Name": "AllModelWatcher",
			"Version": 2
		},
		{
			"Doc": "SrvAllWatcher defines the API methods on a state.Multiwatcher.\nwhich watches any changes to the state. Each client has its own\ncurrent set of watchers, stored in resources. It is used by both\nthe AllWatcher and AllModelWatcher facades.\n",
			"Methods": [
				{
					"Name": "Next",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#AllWatcherNextResults"
					}
				},
				{
					"Name": "Stop"
				}
			],
			"Name": "AllWatcher",
			"Version": 1
		},
		{
			"Doc": "API implements the service interface and is the concrete\nimplementation of the api end point.\n",
			"Methods": [
				{
					"Doc": "Get returns annotations for given entities.\nIf annotations cannot be retrieved for a given entity, an error is returned.\nEach entity is treated independently and, hence, will fail or succeed independently.\n",
					"Name": "Get",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#AnnotationsGetResults"
					}
				},
				{
					"Doc": "Set stores annotations for given entities\n",
					"Name": "Set",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#AnnotationsSet"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				}
			],
			"Name": "Annotations",
			"Version": 2
		},
		{
			"Doc": "API implements the application interface and is the concrete\nimplementation of the api end point.\n",
			"Methods": [
				{
					"Doc": "AddRelation adds a relation between the specified endpoints and returns the relation info.\n",
					"Name": "AddRelation",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#AddRelation"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#AddRelationResults"
					}
				},
				{
					"Doc": "AddUnits adds a given number of units to an application.\n",
					"Name": "AddUnits",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#AddApplicationUnits"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#AddApplicationUnitsResults"
					}
				},
				{
					"Doc": "CharmRelations implements the server side of Application.CharmRelations.\n",
					"Name": "CharmRelations",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#ApplicationCharmRelations"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ApplicationCharmRelationsResults"
					}
				},
				{
					"Doc": "Deploy fetches the charms from the charm store and deploys them\nusing the specified placement directives.\n",
					"Name": "Deploy",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#ApplicationsDeploy"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				},
				{
					"Doc": "Destroy destroys a given application.\n",
					"Name": "Destroy",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#ApplicationDestroy"
					}
				},
				{
					"Doc": "DestroyRelation removes the relation between the specified endpoints.\n",
					"Name": "DestroyRelation",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#DestroyRelation"
					}
				},
				{
					"Doc": "DestroyUnits removes a given set of application units.\n",
					"Name": "DestroyUnits",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#DestroyApplicationUnits"
					}
				},
				{
					"Doc": "Expose changes the juju-managed firewall to expose any ports that\nwere also explicitly marked by units as open.\n",
					"Name": "Expose",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#ApplicationExpose"
					}
				},
				{
					"Doc": "Get returns the configuration for a service.\n",
					"Name": "Get",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#ApplicationGet"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ApplicationGetResults"
					}
				},
				{
					"Doc": "GetCharmURL returns the charm URL the given application is\nrunning at present.\n",
					"Name": "GetCharmURL",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#ApplicationGet"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#StringResult"
					}
				},
				{
					"Doc": "GetConstraints returns the constraints for a given application.\n",
					"Name": "GetConstraints",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#GetApplicationConstraints"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#GetConstraintsResults"
					}
				},
				{
					"Doc": "Set implements the server side of Application.Set.\nIt does not unset values that are set to an empty string.\nUnset should be used for that.\n",
					"Name": "Set",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#ApplicationSet"
					}
				},
				{
					"Doc": "SetCharm sets the charm for a given for the application.\n",
					"Name": "SetCharm",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#ApplicationSetCharm"
					}
				},
				{
					"Doc": "SetConstraints sets the constraints for a given application.\n",
					"Name": "SetConstraints",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#SetConstraints"
					}
				},
				{
					"Doc": "SetMetricCredentials sets credentials on the application.\n",
					"Name": "SetMetricCredentials",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#ApplicationMetricCredentials"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				},
				{
					"Doc": "Unexpose changes the juju-managed firewall to unexpose any ports that\nwere also explicitly marked by units as open.\n",
					"Name": "Unexpose",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#ApplicationUnexpose"
					}
				},
				{
					"Doc": "Unset implements the server side of Client.Unset.\n",
					"Name": "Unset",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#ApplicationUnset"
					}
				},
				{
					"Doc": "Update updates the application attributes, including charm URL,\nminimum number of units, settings and constraints.\nAll parameters in params.ApplicationUpdate except the application name are optional.\n",
					"Name": "Update",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#ApplicationUpdate"
					}
				}
			],
			"Name": "Application",
			"Version": 1
		},
		{
			"Doc": "Facade allows model-manager clients to watch and rescale services.\n",
			"Methods": [
				{
					"Doc": "Rescale causes any supplied services to be scaled up to their\nminimum size.\n",
					"Name": "Rescale",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				},
				{
					"Doc": "Watch returns a watcher that sends the names of services whose\nunit count may be below their configured minimum.\n",
					"Name": "Watch",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#StringsWatchResult"
					}
				}
			],
			"Name": "ApplicationScaler",
			"Version": 1
		},
		{
			"Doc": "API serves backup-specific API methods.\n",
			"Methods": [
				{
					"Doc": "Create is the API method that requests juju to create a new backup\nof its state.  It returns the metadata for that backup.\n",
					"Name": "Create",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#BackupsCreateArgs"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#BackupsMetadataResult"
					}
				},
				{
					"Doc": "FinishRestore implements the server side of Backups.FinishRestore.\n",
					"Name": "FinishRestore"
				},
				{
					"Doc": "Info provides the implementation of the API method.\n",
					"Name": "Info",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#BackupsInfoArgs"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#BackupsMetadataResult"
					}
				},
				{
					"Doc": "List provides the implementation of the API method.\n",
					"Name": "List",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#BackupsListArgs"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#BackupsListResult"
					}
				},
				{
					"Doc": "PrepareRestore implements the server side of Backups.PrepareRestore.\n",
					"Name": "PrepareRestore"
				},
				{
					"Name": "Remove",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#BackupsRemoveArgs"
					}
				},
				{
					"Doc": "Restore implements the server side of Backups.Restore.\n",
					"Name": "Restore",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#RestoreArgs"
					}
				}
			],
			"Name": "Backups",
			"Version": 1
		},
		{
			"Doc": "API implements Block interface and is the concrete\nimplementation of the api end point.\n",
			"Methods": [
				{
					"Doc": "List implements Block.List().\n",
					"Name": "List",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#BlockResults"
					}
				},
				{
					"Doc": "SwitchBlockOff implements Block.SwitchBlockOff().\n",
					"Name": "SwitchBlockOff",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#BlockSwitchParams"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResult"
					}
				},
				{
					"Doc": "SwitchBlockOn implements Block.SwitchBlockOn().\n",
					"Name": "SwitchBlockOn",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#BlockSwitchParams"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResult"
					}
				}
			],
			"Name": "Block",
			"Version": 2
		},
		{
			"Doc": "CharmRevisionUpdaterAPI implements the CharmRevisionUpdater interface and is the concrete\nimplementation of the api end point.\n",
			"Methods": [
				{
					"Doc": "UpdateLatestRevisions retrieves the latest revision information from the charm store for all deployed charms\nand records this information in state.\n",
					"Name": "UpdateLatestRevisions",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResult"
					}
				}
			],
			"Name": "CharmRevisionUpdater",
			"Version": 2
		},
		{
			"Doc": "API implements the charms interface and is the concrete\nimplementation of the api end point.\n",
			"Methods": [
				{
					"Doc": "CharmInfo returns information about the requested charm.\nNOTE: thumper 2016-06-29, this is not a bulk call and probably should be.\n",
					"Name": "CharmInfo",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#CharmURL"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#CharmInfo"
					}
				},
				{
					"Doc": "IsMetered returns whether or not the charm is metered.\n",
					"Name": "IsMetered",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#CharmURL"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#IsMeteredResult"
					}
				},
				{
					"Doc": "List returns a list of charm URLs currently in the state.\nIf supplied parameter contains any names, the result will be filtered\nto return only the charms with supplied names.\n",
					"Name": "List",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#CharmsList"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#CharmsListResult"
					}
				}
			],
			"Name": "Charms",
			"Version": 2
		},
		{
			"Doc": "CleanerAPI implements the API used by the cleaner worker.\n",
			"Methods": [
				{
					"Doc": "Cleanup triggers a state cleanup\n",
					"Name": "Cleanup"
				},
				{
					"Doc": "WatchChanges watches for cleanups to be perfomed in state\n",
					"Name": "WatchCleanups",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#NotifyWatchResult"
					}
				}
			],
			"Name": "Cleaner",
			"Version": 2
		},
		{
			"Doc": "Client serves client-specific API methods.\n",
			"Methods": [
				{
					"Doc": "APIHostPorts returns the API host/port addresses stored in state.\n",
					"Name": "APIHostPorts",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#APIHostPortsResult"
					}
				},
				{
					"Doc": "AbortCurrentUpgrade aborts and archives the current upgrade\nsynchronisation record, if any.\n",
					"Name": "AbortCurrentUpgrade"
				},
				{
					"Name": "AddCharm",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#AddCharm"
					}
				},
				{
					"Doc": "AddCharmWithAuthorization adds the given charm URL (which must include revision) to\nthe model, if it does not exist yet. Local charms are not\nsupported, only charm store URLs. See also AddLocalCharm().\n\nThe authorization macaroon, args.CharmStoreMacaroon, may be\nomitted, in which case this call is equivalent to AddCharm.\n",
					"Name": "AddCharmWithAuthorization",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#AddCharmWithAuthorization"
					}
				},
				{
					"Doc": "AddMachines adds new machines with the supplied parameters.\n",
					"Name": "AddMachines",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#AddMachines"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#AddMachinesResults"
					}
				},
				{
					"Doc": "AddMachinesV2 adds new machines with the supplied parameters.\n",
					"Name": "AddMachinesV2",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#AddMachines"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#AddMachinesResults"
					}
				},
				{
					"Doc": "AgentVersion returns the current version that the API server is running.\n",
					"Name": "AgentVersion",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#AgentVersionResult"
					}
				},
				{
					"Doc": "DestroyMachines removes a given set of machines.\n",
					"Name": "DestroyMachines",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#DestroyMachines"
					}
				},
				{
					"Doc": "FindTools returns a List containing all tools matching the given parameters.\n",
					"Name": "FindTools",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#FindToolsParams"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#FindToolsResult"
					}
				},
				{
					"Doc": "FullStatus gives the information needed for juju status over the api\n",
					"Name": "FullStatus",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#StatusParams"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#FullStatus"
					}
				},
				{
					"Doc": "GetBundleChanges returns the list of changes required to deploy the given\nbundle data. The changes are sorted by requirements, so that they can be\napplied in order.\n",
					"Name": "GetBundleChanges",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#GetBundleChangesParams"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#GetBundleChangesResults"
					}
				},
				{
					"Doc": "GetModelConstraints returns the constraints for the model.\n",
					"Name": "GetModelConstraints",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#GetConstraintsResults"
					}
				},
				{
					"Doc": "InjectMachines injects a machine into state with provisioned status.\n",
					"Name": "InjectMachines",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#AddMachines"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#AddMachinesResults"
					}
				},
				{
					"Doc": "ModelGet implements the server-side part of the\nget-model-config CLI command.\n",
					"Name": "ModelGet",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ModelConfigResults"
					}
				},
				{
					"Doc": "ModelInfo returns information about the current model (default\nseries and type).\n",
					"Name": "ModelInfo",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ModelInfo"
					}
				},
				{
					"Doc": "ModelSet implements the server-side part of the\nset-model-config CLI command.\n",
					"Name": "ModelSet",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#ModelSet"
					}
				},
				{
					"Doc": "ModelUnset implements the server-side part of the\nset-model-config CLI command.\n",
					"Name": "ModelUnset",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#ModelUnset"
					}
				},
				{
					"Doc": "ModelUserInfo returns information on all users in the model.\n",
					"Name": "ModelUserInfo",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ModelUserInfoResults"
					}
				},
				{
					"Doc": "PrivateAddress implements the server side of Client.PrivateAddress.\n",
					"Name": "PrivateAddress",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#PrivateAddress"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#PrivateAddressResults"
					}
				},
				{
					"Doc": "ProvisioningScript returns a shell script that, when run,\nprovisions a machine agent on the machine executing the script.\n",
					"Name": "ProvisioningScript",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#ProvisioningScriptParams"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ProvisioningScriptResult"
					}
				},
				{
					"Doc": "PublicAddress implements the server side of Client.PublicAddress.\n",
					"Name": "PublicAddress",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#PublicAddress"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#PublicAddressResults"
					}
				},
				{
					"Doc": "ResolveCharm resolves the best available charm URLs with series, for charm\nlocations without a series specified.\n",
					"Name": "ResolveCharms",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#ResolveCharms"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ResolveCharmResults"
					}
				},
				{
					"Doc": "Resolved implements the server side of Client.Resolved.\n",
					"Name": "Resolved",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Resolved"
					}
				},
				{
					"Doc": "RetryProvisioning marks a provisioning error as transient on the machines.\n",
					"Name": "RetryProvisioning",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				},
				{
					"Doc": "SetModelAgentVersion sets the model agent version.\n",
					"Name": "SetModelAgentVersion",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#SetModelAgentVersion"
					}
				},
				{
					"Doc": "SetModelConstraints sets the constraints for the model.\n",
					"Name": "SetModelConstraints",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#SetConstraints"
					}
				},
				{
					"Doc": "StatusHistory returns a slice of past statuses for several entities.\n",
					"Name": "StatusHistory",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#StatusHistoryRequests"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#StatusHistoryResults"
					}
				},
				{
					"Name": "WatchAll",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#AllWatcherId"
					}
				}
			],
			"Name": "Client",
			"Version": 1
		},
		{
			"Doc": "CloudAPI implements the model manager interface and is\nthe concrete implementation of the api end point.\n",
			"Methods": [
				{
					"Doc": "Cloud returns the cloud definitions for the specified clouds.\n",
					"Name": "Cloud",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#CloudResults"
					}
				},
				{
					"Doc": "CloudDefaults returns the cloud defaults for a set of users.\n",
					"Name": "CloudDefaults",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#CloudDefaultsResults"
					}
				},
				{
					"Doc": "Credentials returns the cloud credentials for a set of users.\n",
					"Name": "Credentials",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#UserClouds"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#CloudCredentialsResults"
					}
				},
				{
					"Doc": "UpdateCredentials updates the cloud credentials for a set of users.\n",
					"Name": "UpdateCredentials",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#UsersCloudCredentials"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				}
			],
			"Name": "Cloud",
			"Version": 1
		},
		{
			"Doc": "ControllerAPI implements the environment manager interface and is\nthe concrete implementation of the api end point.\n",
			"Methods": [
				{
					"Doc": "AllModels allows controller administrators to get the list of all the\nenvironments in the controller.\n",
					"Name": "AllModels",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#UserModelList"
					}
				},
				{
					"Doc": "ControllerConfig returns the controller's configuration.\n",
					"Name": "ControllerConfig",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ControllerConfigResult"
					}
				},
				{
					"Doc": "DestroyController will attempt to destroy the controller. If the args\nspecify the removal of blocks or the destruction of the models, this\nmethod will attempt to do so.\n\nIf the controller has any non-Dead hosted models, then an error with\nthe code params.CodeHasHostedModels will be transmitted, regardless of\nthe value of the DestroyModels parameter. This is to inform the client\nthat it should wait for hosted models to be completely cleaned up\nbefore proceeding.\n",
					"Name": "DestroyController",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#DestroyControllerArgs"
					}
				},
				{
					"Doc": "InitiateModelMigration attempts to begin the migration of one or\nmore models to other controllers.\n",
					"Name": "InitiateModelMigration",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#InitiateModelMigrationArgs"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#InitiateModelMigrationResults"
					}
				},
				{
					"Doc": "ListBlockedModels returns a list of all environments on the controller\nwhich have a block in place.  The resulting slice is sorted by environment\nname, then owner. Callers must be controller administrators to retrieve the\nlist.\n",
					"Name": "ListBlockedModels",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ModelBlockInfoList"
					}
				},
				{
					"Doc": "ModelConfig returns the environment config for the controller\nenvironment.  For information on the current environment, use\nclient.ModelGet\n",
					"Name": "ModelConfig",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ModelConfigResults"
					}
				},
				{
					"Doc": "ModelStatus returns a summary of the environment.\n",
					"Name": "ModelStatus",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ModelStatusResults"
					}
				},
				{
					"Doc": "RemoveBlocks removes all the blocks in the controller.\n",
					"Name": "RemoveBlocks",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#RemoveBlocksArgs"
					}
				},
				{
					"Doc": "WatchAllModels starts watching events for all models in the\ncontroller. The returned AllWatcherId should be used with Next on the\nAllModelWatcher endpoint to receive deltas.\n",
					"Name": "WatchAllModels",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#AllWatcherId"
					}
				}
			],
			"Name": "Controller",
			"Version": 3
		},
		{
			"Doc": "DeployerAPI provides access to the Deployer API facade.\n",
			"Methods": [
				{
					"Doc": "APIAddresses returns the list of addresses used to connect to the API.\n",
					"Name": "APIAddresses",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#StringsResult"
					}
				},
				{
					"Doc": "APIHostPorts returns the API server addresses.\n",
					"Name": "APIHostPorts",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#APIHostPortsResult"
					}
				},
				{
					"Doc": "CACert returns the certificate used to validate the state connection.\n",
					"Name": "CACert",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#BytesResult"
					}
				},
				{
					"Doc": "ConnectionInfo returns all the address information that the\ndeployer task needs in one call.\n",
					"Name": "ConnectionInfo",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#DeployerConnectionValues"
					}
				},
				{
					"Doc": "Life returns the life status of every supplied entity, where available.\n",
					"Name": "Life",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#LifeResults"
					}
				},
				{
					"Doc": "ModelUUID returns the model UUID to connect to the environment\nthat the current connection is for.\n",
					"Name": "ModelUUID",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#StringResult"
					}
				},
				{
					"Doc": "Remove removes every given entity from state, calling EnsureDead\nfirst, then Remove. It will fail if the entity is not present.\n",
					"Name": "Remove",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				},
				{
					"Doc": "SetPasswords sets the given password for each supplied entity, if possible.\n",
					"Name": "SetPasswords",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#EntityPasswords"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				},
				{
					"Doc": "StateAddresses returns the list of addresses used to connect to the state.\n",
					"Name": "StateAddresses",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#StringsResult"
					}
				},
				{
					"Doc": "WatchAPIHostPorts watches the API server addresses.\n",
					"Name": "WatchAPIHostPorts",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#NotifyWatchResult"
					}
				},
				{
					"Doc": "WatchUnits starts a StringsWatcher to watch all units belonging to\nto any entity (machine or service) passed in args.\n",
					"Name": "WatchUnits",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#StringsWatchResults"
					}
				}
			],
			"Name": "Deployer",
			"Version": 1
		},
		{
			"Doc": "DiscoverSpacesAPI implements the API used by the discoverspaces worker.\n",
			"Methods": [
				{
					"Doc": "AddSubnets is defined on the API interface.\n",
					"Name": "AddSubnets",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#AddSubnetsParams"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				},
				{
					"Doc": "CreateSpaces creates a new Juju network space, associating the\nspecified subnets with it (optional; can be empty).\n",
					"Name": "CreateSpaces",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#CreateSpacesParams"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				},
				{
					"Doc": "ListSpaces lists all the available spaces and their associated subnets.\n",
					"Name": "ListSpaces",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#DiscoverSpacesResults"
					}
				},
				{
					"Doc": "ListSubnets lists all the available subnets or only those matching\nall given optional filters.\n",
					"Name": "ListSubnets",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#SubnetsFilters"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ListSubnetsResults"
					}
				},
				{
					"Doc": "ModelConfig returns the current model's configuration.\n",
					"Name": "ModelConfig",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ModelConfigResult"
					}
				}
			],
			"Name": "DiscoverSpaces",
			"Version": 2
		},
		{
			"Doc": "DiskManagerAPI provides access to the DiskManager API facade.\n",
			"Methods": [
				{
					"Name": "SetMachineBlockDevices",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#SetMachineBlockDevices"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				}
			],
			"Name": "DiskManager",
			"Version": 2
		},
		{
			"Doc": "srvEntitiesWatcher defines the API for methods on a state.StringsWatcher.\nEach client has its own current set of watchers, stored in resources.\nsrvEntitiesWatcher notifies about changes for all entities of a given kind,\nsending the changes as a list of strings, which could be transformed\nfrom state entity ids to their corresponding entity tags.\n",
			"Methods": [
				{
					"Doc": "Next returns when a change has occured to an entity of the\ncollection being watched since the most recent call to Next\nor the Watch call that created the srvEntitiesWatcher.\n",
					"Name": "Next",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#EntitiesWatchResult"
					}
				},
				{
					"Doc": "Stop stops the watcher.\n",
					"Name": "Stop"
				}
			],
			"Name": "EntityWatcher",
			"Version": 2
		},
		{
			"Doc": "srvMachineStorageIdsWatcher defines the API wrapping a state.StringsWatcher\nwatching machine/storage attachments. This watcher notifies about storage\nentities (volumes/filesystems) being attached to and detached from machines.\n\nTODO(axw) state needs a new watcher, this is a bt of a hack. State watchers\ncould do with some deduplication of logic, and I don't want to add to that\nspaghetti right now.\n",
			"Methods": [
				{
					"Doc": "Next returns when a change has occured to an entity of the\ncollection being watched since the most recent call to Next\nor the Watch call that created the srvMachineStorageIdsWatcher.\n",
					"Name": "Next",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#MachineStorageIdsWatchResult"
					}
				},
				{
					"Doc": "Stop stops the watcher.\n",
					"Name": "Stop"
				}
			],
			"Name": "FilesystemAttachmentsWatcher",
			"Version": 2
		},
		{
			"Doc": "FirewallerAPI provides access to the Firewaller API facade.\n",
			"Methods": [
				{
					"Doc": "GetAssignedMachine returns the assigned machine tag (if any) for\neach given unit.\n",
					"Name": "GetAssignedMachine",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#StringResults"
					}
				},
				{
					"Doc": "GetExposed returns the exposed flag value for each given service.\n",
					"Name": "GetExposed",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#BoolResults"
					}
				},
				{
					"Doc": "GetMachineActiveSubnets returns the tags of the all subnets that each machine\n(in args) has open ports on.\n",
					"Name": "GetMachineActiveSubnets",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#StringsResults"
					}
				},
				{
					"Doc": "GetMachinePorts returns the port ranges opened on a machine for the specified\nsubnet as a map mapping port ranges to the tags of the units that opened\nthem.\n",
					"Name": "GetMachinePorts",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#MachinePortsParams"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#MachinePortsResults"
					}
				},
				{
					"Doc": "InstanceId returns the provider specific instance id for each given\nmachine or an CodeNotProvisioned error, if not set.\n",
					"Name": "InstanceId",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#StringResults"
					}
				},
				{
					"Doc": "Life returns the life status of every supplied entity, where available.\n",
					"Name": "Life",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#LifeResults"
					}
				},
				{
					"Doc": "ModelConfig returns the current environment's configuration.\n",
					"Name": "ModelConfig",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ModelConfigResult"
					}
				},
				{
					"Doc": "Watch starts an NotifyWatcher for each given entity.\n",
					"Name": "Watch",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#NotifyWatchResults"
					}
				},
				{
					"Doc": "WatchForModelConfigChanges returns a NotifyWatcher that observes\nchanges to the environment configuration.\nNote that although the NotifyWatchResult contains an Error field,\nit's not used because we are only returning a single watcher,\nso we use the regular error return.\n",
					"Name": "WatchForModelConfigChanges",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#NotifyWatchResult"
					}
				},
				{
					"Doc": "WatchModelMachines returns a StringsWatcher that notifies of\nchanges to the life cycles of the top level machines in the current\nmodel.\n",
					"Name": "WatchModelMachines",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#StringsWatchResult"
					}
				},
				{
					"Doc": "WatchOpenedPorts returns a new StringsWatcher for each given\nenvironment tag.\n",
					"Name": "WatchOpenedPorts",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#StringsWatchResults"
					}
				},
				{
					"Doc": "WatchUnits starts a StringsWatcher to watch all units belonging to\nto any entity (machine or service) passed in args.\n",
					"Name": "WatchUnits",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#StringsWatchResults"
					}
				}
			],
			"Name": "Firewaller",
			"Version": 3
		},
		{
			"Doc": "HighAvailabilityAPI implements the HighAvailability interface and is the concrete\nimplementation of the api end point.\n",
			"Methods": [
				{
					"Name": "EnableHA",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#ControllersSpecs"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ControllersChangeResults"
					}
				},
				{
					"Doc": "ResumeHAReplicationAfterUpgrade will add the upgraded members of HA\ncluster to the upgraded master.\n",
					"Name": "ResumeHAReplicationAfterUpgrade",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#ResumeReplicationParams"
					}
				},
				{
					"Doc": "StopHAReplicationForUpgrade will prompt the HA cluster to enter upgrade\nmongo mode.\n",
					"Name": "StopHAReplicationForUpgrade",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#UpgradeMongoParams"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#MongoUpgradeResults"
					}
				}
			],
			"Name": "HighAvailability",
			"Version": 2
		},
		{
			"Doc": "Facade implements the API required by the hostkeyreporter worker.\n",
			"Methods": [
				{
					"Doc": "ReportKeys sets the SSH host keys for one or more entities.\n",
					"Name": "ReportKeys",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#SSHHostKeySet"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				}
			],
			"Name": "HostKeyReporter",
			"Version": 1
		},
		{
			"Doc": "ImageManagerAPI implements the ImageManager interface and is the concrete\nimplementation of the api end point.\n",
			"Methods": [
				{
					"Doc": "DeleteImages deletes the images matching the specified filter.\n",
					"Name": "DeleteImages",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#ImageFilterParams"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				},
				{
					"Doc": "ListImages returns images matching the specified filter.\n",
					"Name": "ListImages",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#ImageFilterParams"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ListImageResult"
					}
				}
			],
			"Name": "ImageManager",
			"Version": 2
		},
		{
			"Doc": "API is the concrete implementation of the api end point\nfor loud image metadata manipulations.\n",
			"Methods": [
				{
					"Doc": "Delete deletes cloud image metadata for given image ids.\nIt supports bulk calls.\n",
					"Name": "Delete",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#MetadataImageIds"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				},
				{
					"Doc": "List returns all found cloud image metadata that satisfy\ngiven filter.\nReturned list contains metadata ordered by priority.\n",
					"Name": "List",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#ImageMetadataFilter"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ListCloudImageMetadataResult"
					}
				},
				{
					"Doc": "Save stores given cloud image metadata.\nIt supports bulk calls.\n",
					"Name": "Save",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#MetadataSaveParams"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				},
				{
					"Doc": "UpdateFromPublishedImages retrieves currently published image metadata and\nupdates stored ones accordingly.\n",
					"Name": "UpdateFromPublishedImages"
				}
			],
			"Name": "ImageMetadata",
			"Version": 2
		},
		{
			"Doc": "InstancePollerAPI provides access to the InstancePoller API facade.\n",
			"Methods": [
				{
					"Doc": "AreManuallyProvisioned returns whether each given entity is\nmanually provisioned or not. Only machine tags are accepted.\n",
					"Name": "AreManuallyProvisioned",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#BoolResults"
					}
				},
				{
					"Doc": "InstanceId returns the provider specific instance id for each given\nmachine or an CodeNotProvisioned error, if not set.\n",
					"Name": "InstanceId",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#StringResults"
					}
				},
				{
					"Doc": "InstanceStatus returns the instance status for each given entity.\nOnly machine tags are accepted.\n",
					"Name": "InstanceStatus",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#StatusResults"
					}
				},
				{
					"Doc": "Life returns the life status of every supplied entity, where available.\n",
					"Name": "Life",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#LifeResults"
					}
				},
				{
					"Doc": "ModelConfig returns the current environment's configuration.\n",
					"Name": "ModelConfig",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ModelConfigResult"
					}
				},
				{
					"Doc": "ProviderAddresses returns the list of all known provider addresses\nfor each given entity. Only machine tags are accepted.\n",
					"Name": "ProviderAddresses",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#MachineAddressesResults"
					}
				},
				{
					"Doc": "SetInstanceStatus updates the instance status for each given\nentity. Only machine tags are accepted.\n",
					"Name": "SetInstanceStatus",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#SetStatus"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				},
				{
					"Doc": "SetProviderAddresses updates the list of known provider addresses\nfor each given entity. Only machine tags are accepted.\n",
					"Name": "SetProviderAddresses",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#SetMachinesAddresses"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				},
				{
					"Doc": "Status returns the status of each given entity.\n",
					"Name": "Status",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#StatusResults"
					}
				},
				{
					"Doc": "WatchForModelConfigChanges returns a NotifyWatcher that observes\nchanges to the environment configuration.\nNote that although the NotifyWatchResult contains an Error field,\nit's not used because we are only returning a single watcher,\nso we use the regular error return.\n",
					"Name": "WatchForModelConfigChanges",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#NotifyWatchResult"
					}
				},
				{
					"Doc": "WatchModelMachines returns a StringsWatcher that notifies of\nchanges to the life cycles of the top level machines in the current\nmodel.\n",
					"Name": "WatchModelMachines",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#StringsWatchResult"
					}
				}
			],
			"Name": "InstancePoller",
			"Version": 3
		},
		{
			"Doc": "KeyManagerAPI implements the KeyUpdater interface and is the concrete\nimplementation of the api end point.\n",
			"Methods": [
				{
					"Doc": "AddKeys adds new authorised ssh keys for the specified user.\n",
					"Name": "AddKeys",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#ModifyUserSSHKeys"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				},
				{
					"Doc": "DeleteKeys deletes the authorised ssh keys for the specified user.\n",
					"Name": "DeleteKeys",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#ModifyUserSSHKeys"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				},
				{
					"Doc": "ImportKeys imports new authorised ssh keys from the specified key ids for the specified user.\n",
					"Name": "ImportKeys",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#ModifyUserSSHKeys"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				},
				{
					"Doc": "ListKeys returns the authorised ssh keys for the specified users.\n",
					"Name": "ListKeys",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#ListSSHKeys"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#StringsResults"
					}
				}
			],
			"Name": "KeyManager",
			"Version": 1
		},
		{
			"Doc": "KeyUpdaterAPI implements the KeyUpdater interface and is the concrete\nimplementation of the api end point.\n",
			"Methods": [
				{
					"Doc": "AuthorisedKeys reports the authorised ssh keys for the specified machines.\nThe current implementation relies on global authorised keys being stored in the environment config.\nThis will change as new user management and authorisation functionality is added.\n",
					"Name": "AuthorisedKeys",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#StringsResults"
					}
				},
				{
					"Doc": "WatchAuthorisedKeys starts a watcher to track changes to the authorised ssh keys\nfor the specified machines.\nThe current implementation relies on global authorised keys being stored in the environment config.\nThis will change as new user management and authorisation functionality is added.\n",
					"Name": "WatchAuthorisedKeys",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#NotifyWatchResults"
					}
				}
			],
			"Name": "KeyUpdater",
			"Version": 1
		},
		{
			"Doc": "LeadershipService implements a variant of leadership.Claimer for consumption\nover the API.\n",
			"Methods": [
				{
					"Doc": "BlockUntilLeadershipReleased blocks the caller until leadership is\nreleased for the given service.\n",
					"Name": "BlockUntilLeadershipReleased",
					"Param": {
						"Name": "gopkg.in/juju/names.v2#ApplicationTag"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResult"
					}
				},
				{
					"Doc": "ClaimLeadership makes a leadership claim with the given parameters.\n",
					"Name": "ClaimLeadership",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#ClaimLeadershipBulkParams"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ClaimLeadershipBulkResults"
					}
				}
			],
			"Name": "LeadershipService",
			"Version": 2
		},
		{
			"Methods": [
				{
					"Doc": "Life returns the life status of every supplied entity, where available.\n",
					"Name": "Life",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#LifeResults"
					}
				},
				{
					"Doc": "Watch starts an NotifyWatcher for each given entity.\n",
					"Name": "Watch",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#NotifyWatchResults"
					}
				}
			],
			"Name": "LifeFlag",
			"Version": 1
		},
		{
			"Doc": "LogForwardingAPI is the concrete implementation of the api end point.\n",
			"Methods": [
				{
					"Doc": "GetLastSent is a bulk call that gets the log forwarding \"last sent\"\nrecord ID for each requested target.\n",
					"Name": "GetLastSent",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#LogForwardingGetLastSentParams"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#LogForwardingGetLastSentResults"
					}
				},
				{
					"Doc": "SetLastSent is a bulk call that sets the log forwarding \"last sent\"\nrecord ID for each requested target.\n",
					"Name": "SetLastSent",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#LogForwardingSetLastSentParams"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				}
			],
			"Name": "LogForwarding",
			"Version": 1
		},
		{
			"Doc": "LoggerAPI implements the Logger interface and is the concrete\nimplementation of the api end point.\n",
			"Methods": [
				{
					"Doc": "LoggingConfig reports the logging configuration for the agents specified.\n",
					"Name": "LoggingConfig",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#StringResults"
					}
				},
				{
					"Doc": "WatchLoggingConfig starts a watcher to track changes to the logging config\nfor the agents specified..  Unfortunately the current infrastruture makes\nwatching parts of the config non-trivial, so currently any change to the\nconfig will cause the watcher to notify the client.\n",
					"Name": "WatchLoggingConfig",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#NotifyWatchResults"
					}
				}
			],
			"Name": "Logger",
			"Version": 1
		},
		{
			"Doc": "Facade implements the machineactions interface and is the concrete\nimplementation of the api end point.\n",
			"Methods": [
				{
					"Doc": "Actions returns the Actions by Tags passed and ensures that the machine asking\nfor them is the machine that has the actions\n",
					"Name": "Actions",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ActionResults"
					}
				},
				{
					"Doc": "BeginActions marks the actions represented by the passed in Tags as running.\n",
					"Name": "BeginActions",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				},
				{
					"Doc": "FinishActions saves the result of a completed Action\n",
					"Name": "FinishActions",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#ActionExecutionResults"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				},
				{
					"Doc": "RunningActions lists the actions running for the entities passed in.\nIf we end up needing more than ListRunning at some point we could follow/abstract\nwhat's done in the client actions package.\n",
					"Name": "RunningActions",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ActionsByReceivers"
					}
				},
				{
					"Doc": "WatchActionNotifications returns a StringsWatcher for observing\nincoming action calls to a machine.\n",
					"Name": "WatchActionNotifications",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#StringsWatchResults"
					}
				}
			],
			"Name": "MachineActions",
			"Version": 1
		},
		{
			"Doc": "MachineManagerAPI provides access to the MachineManager API facade.\n",
			"Methods": [
				{
					"Doc": "AddMachines adds new machines with the supplied parameters.\n",
					"Name": "AddMachines",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#AddMachines"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#AddMachinesResults"
					}
				}
			],
			"Name": "MachineManager",
			"Version": 2
		},
		{
			"Doc": "MachinerAPI implements the API used by the machiner worker.\n",
			"Methods": [
				{
					"Doc": "APIAddresses returns the list of addresses used to connect to the API.\n",
					"Name": "APIAddresses",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#StringsResult"
					}
				},
				{
					"Doc": "APIHostPorts returns the API server addresses.\n",
					"Name": "APIHostPorts",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#APIHostPortsResult"
					}
				},
				{
					"Doc": "CACert returns the certificate used to validate the state connection.\n",
					"Name": "CACert",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#BytesResult"
					}
				},
				{
					"Doc": "EnsureDead calls EnsureDead on each given entity from state. It\nwill fail if the entity is not present. If it's Alive, nothing will\nhappen (see state/EnsureDead() for units or machines).\n",
					"Name": "EnsureDead",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				},
				{
					"Doc": "Jobs returns the jobs assigned to the given entities.\n",
					"Name": "Jobs",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#JobsResults"
					}
				},
				{
					"Doc": "Life returns the life status of every supplied entity, where available.\n",
					"Name": "Life",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#LifeResults"
					}
				},
				{
					"Doc": "ModelUUID returns the model UUID to connect to the environment\nthat the current connection is for.\n",
					"Name": "ModelUUID",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#StringResult"
					}
				},
				{
					"Name": "SetMachineAddresses",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#SetMachinesAddresses"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				},
				{
					"Name": "SetObservedNetworkConfig",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#SetMachineNetworkConfig"
					}
				},
				{
					"Name": "SetProviderNetworkConfig",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				},
				{
					"Doc": "SetStatus sets the status of each given entity.\n",
					"Name": "SetStatus",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#SetStatus"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				},
				{
					"Doc": "UpdateStatus updates the status data of each given entity.\nTODO(fwereade): WTF. This method exists *only* for the convenience of the\n*client* API -- and is itself completely broken -- but we still expose it\nin every facade with a StatusSetter? FFS.\n",
					"Name": "UpdateStatus",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#SetStatus"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				},
				{
					"Doc": "Watch starts an NotifyWatcher for each given entity.\n",
					"Name": "Watch",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#NotifyWatchResults"
					}
				},
				{
					"Doc": "WatchAPIHostPorts watches the API server addresses.\n",
					"Name": "WatchAPIHostPorts",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#NotifyWatchResult"
					}
				}
			],
			"Name": "Machiner",
			"Version": 1
		},
		{
			"Doc": "MeterStatusAPI implements the MeterStatus interface and is the concrete implementation\nof the API endpoint.\n",
			"Methods": [
				{
					"Doc": "GetMeterStatus returns meter status information for each unit.\n",
					"Name": "GetMeterStatus",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#MeterStatusResults"
					}
				},
				{
					"Doc": "WatchMeterStatus returns a NotifyWatcher for observing changes\nto each unit's meter status.\n",
					"Name": "WatchMeterStatus",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#NotifyWatchResults"
					}
				}
			],
			"Name": "MeterStatus",
			"Version": 1
		},
		{
			"Doc": "MetricsAdderAPI implements the metrics adder interface and is the concrete\nimplementation of the API end point.\n",
			"Methods": [
				{
					"Doc": "AddMetricBatches implements the MetricsAdder interface.\n",
					"Name": "AddMetricBatches",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#MetricBatchParams"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				}
			],
			"Name": "MetricsAdder",
			"Version": 2
		},
		{
			"Doc": "MetricsDebugAPI implements the metricsdebug interface and is the concrete\nimplementation of the api end point.\n",
			"Methods": [
				{
					"Doc": "GetMetrics returns all metrics stored by the state server.\n",
					"Name": "GetMetrics",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#MetricResults"
					}
				},
				{
					"Doc": "SetMeterStatus sets meter statuses for entities.\n",
					"Name": "SetMeterStatus",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#MeterStatusParams"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				}
			],
			"Name": "MetricsDebug",
			"Version": 2
		},
		{
			"Doc": "MetricsManagerAPI implements the metrics manager interface and is the concrete\nimplementation of the api end point.\n",
			"Methods": [
				{
					"Doc": "CleanupOldMetrics removes old metrics from the collection.\nThe single arg params is expected to contain and environment uuid.\nEven though the call will delete all metrics across environments\nit serves to validate that the connection has access to at least one environment.\n",
					"Name": "CleanupOldMetrics",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				},
				{
					"Doc": "SendMetrics will send any unsent metrics onto the metric collection service.\n",
					"Name": "SendMetrics",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				}
			],
			"Name": "MetricsManager",
			"Version": 1
		},
		{
			"Doc": "Facade lets clients watch and get models' migration phases.\n",
			"Methods": [
				{
					"Doc": "Phase returns the current migration phase or an error for every\nsupplied entity.\n",
					"Name": "Phase",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#PhaseResults"
					}
				},
				{
					"Doc": "Watch returns an id for use with the NotifyWatcher facade, or an\nerror, for every supplied entity.\n",
					"Name": "Watch",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#NotifyWatchResults"
					}
				}
			],
			"Name": "MigrationFlag",
			"Version": 1
		},
		{
			"Doc": "API implements the API required for the model migration\nmaster worker.\n",
			"Methods": [
				{
					"Doc": "Export serializes the model associated with the API connection.\n",
					"Name": "Export",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#SerializedModel"
					}
				},
				{
					"Doc": "GetMigrationStatus returns the details and progress of the latest\nmodel migration.\n",
					"Name": "GetMigrationStatus",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#MasterMigrationStatus"
					}
				},
				{
					"Doc": "GetMinionReports returns details of the reports made by migration\nminions to the controller for the current migration phase.\n",
					"Name": "GetMinionReports",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#MinionReports"
					}
				},
				{
					"Doc": "Reap removes all documents for the model associated with the API\nconnection.\n",
					"Name": "Reap"
				},
				{
					"Doc": "SetPhase sets the phase of the active model migration. The provided\nphase must be a valid phase value, for example QUIESCE\" or\n\"ABORT\". See the core/migration package for the complete list.\n",
					"Name": "SetPhase",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#SetMigrationPhaseArgs"
					}
				},
				{
					"Doc": "Watch starts watching for an active migration for the model\nassociated with the API connection. The returned id should be used\nwith the NotifyWatcher facade to receive events.\n",
					"Name": "Watch",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#NotifyWatchResult"
					}
				},
				{
					"Doc": "WatchMinionReports sets up a watcher which reports when a report\nfor a migration minion has arrived.\n",
					"Name": "WatchMinionReports",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#NotifyWatchResult"
					}
				}
			],
			"Name": "MigrationMaster",
			"Version": 1
		},
		{
			"Doc": "API implements the API required for the model migration\nmaster worker.\n",
			"Methods": [
				{
					"Doc": "Report allows a migration minion to submit whether it succeeded or\nfailed for a specific migration phase.\n",
					"Name": "Report",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#MinionReport"
					}
				},
				{
					"Doc": "Watch starts watching for status updates for a migration attempt\nfor the model. It will report when a migration starts and when its\nstatus changes (including when it finishes). An initial event will\nbe fired if there has ever been a migration attempt for the model.\n\nThe MigrationStatusWatcher facade must be used to receive events\nfrom the watcher.\n",
					"Name": "Watch",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#NotifyWatchResult"
					}
				}
			],
			"Name": "MigrationMinion",
			"Version": 1
		},
		{
			"Methods": [
				{
					"Doc": "Next returns when the status for a model migration for the\nassociated model changes. The current details for the active\nmigration are returned.\n",
					"Name": "Next",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#MigrationStatus"
					}
				},
				{
					"Doc": "Stop stops the watcher.\n",
					"Name": "Stop"
				}
			],
			"Name": "MigrationStatusWatcher",
			"Version": 1
		},
		{
			"Doc": "API implements the API required for the model migration\nmaster worker when communicating with the target controller.\n",
			"Methods": [
				{
					"Doc": "Abort removes the specified model from the database. It is an error to\nattempt to Abort a model that has a migration mode other than importing.\n",
					"Name": "Abort",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#ModelArgs"
					}
				},
				{
					"Doc": "Activate sets the migration mode of the model to \"active\". It is an error to\nattempt to Abort a model that has a migration mode other than importing.\n",
					"Name": "Activate",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#ModelArgs"
					}
				},
				{
					"Doc": "Import takes a serialized Juju model, deserializes it, and\nrecreates it in the receiving controller.\n",
					"Name": "Import",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#SerializedModel"
					}
				}
			],
			"Name": "MigrationTarget",
			"Version": 1
		},
		{
			"Doc": "ModelConfigAPI is the endpoint which implements the model config facade.\n",
			"Methods": [
				{
					"Doc": "ModelGet implements the server-side part of the\nget-model-config CLI command.\n",
					"Name": "ModelGet",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ModelConfigResults"
					}
				},
				{
					"Doc": "ModelSet implements the server-side part of the\nset-model-config CLI command.\n",
					"Name": "ModelSet",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#ModelSet"
					}
				},
				{
					"Doc": "ModelUnset implements the server-side part of the\nset-model-config CLI command.\n",
					"Name": "ModelUnset",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#ModelUnset"
					}
				}
			],
			"Name": "ModelConfig",
			"Version": 1
		},
		{
			"Doc": "ModelManagerAPI implements the model manager interface and is\nthe concrete implementation of the api end point.\n",
			"Methods": [
				{
					"Doc": "CreateModel creates a new model using the account and\nmodel config specified in the args.\n",
					"Name": "CreateModel",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#ModelCreateArgs"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ModelInfo"
					}
				},
				{
					"Doc": "DestroyModel will try to destroy the current model.\nIf there is a block on destruction, this method will return an error.\n",
					"Name": "DestroyModel"
				},
				{
					"Doc": "DumpModels will export the models into the database agnostic\nrepresentation. The user needs to either be a controller admin, or have\nadmin privileges on the model itself.\n",
					"Name": "DumpModels",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#MapResults"
					}
				},
				{
					"Doc": "ListModels returns the models that the specified user\nhas access to in the current server.  Only that controller owner\ncan list models for any user (at this stage).  Other users\ncan only ask about their own models.\n",
					"Name": "ListModels",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entity"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#UserModelList"
					}
				},
				{
					"Doc": "ModelInfo returns information about the specified models.\n",
					"Name": "ModelInfo",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ModelInfoResults"
					}
				},
				{
					"Doc": "ModifyModelAccess changes the model access granted to users.\n",
					"Name": "ModifyModelAccess",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#ModifyModelAccessRequest"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				}
			],
			"Name": "ModelManager",
			"Version": 2
		},
		{
			"Doc": "srvNotifyWatcher defines the API access to methods on a state.NotifyWatcher.\nEach client has its own current set of watchers, stored in resources.\n",
			"Methods": [
				{
					"Doc": "Next returns when a change has occurred to the\nentity being watched since the most recent call to Next\nor the Watch call that created the NotifyWatcher.\n",
					"Name": "Next"
				},
				{
					"Doc": "Stop stops the watcher.\n",
					"Name": "Stop"
				}
			],
			"Name": "NotifyWatcher",
			"Version": 1
		},
		{
			"Doc": "pinger describes a resource that can be pinged and stopped.\n",
			"Methods": [
				{
					"Name": "Ping"
				},
				{
					"Name": "Stop"
				}
			],
			"Name": "Pinger",
			"Version": 1
		},
		{
			"Doc": "ProvisionerAPI provides access to the Provisioner API facade.\n",
			"Methods": [
				{
					"Doc": "APIAddresses returns the list of addresses used to connect to the API.\n",
					"Name": "APIAddresses",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#StringsResult"
					}
				},
				{
					"Doc": "APIHostPorts returns the API server addresses.\n",
					"Name": "APIHostPorts",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#APIHostPortsResult"
					}
				},
				{
					"Doc": "CACert returns the certificate used to validate the state connection.\n",
					"Name": "CACert",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#BytesResult"
					}
				},
				{
					"Doc": "Constraints returns the constraints for each given machine entity.\n",
					"Name": "Constraints",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ConstraintsResults"
					}
				},
				{
					"Doc": "ContainerConfig returns information from the environment config that is\nneeded for container cloud-init.\n",
					"Name": "ContainerConfig",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ContainerConfig"
					}
				},
				{
					"Doc": "ContainerManagerConfig returns information from the environment config that is\nneeded for configuring the container manager.\n",
					"Name": "ContainerManagerConfig",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#ContainerManagerConfigParams"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ContainerManagerConfig"
					}
				},
				{
					"Doc": "ControllerConfig returns the controller's configuration.\n",
					"Name": "ControllerConfig",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ControllerConfigResult"
					}
				},
				{
					"Doc": "DistributionGroup returns, for each given machine entity,\na slice of instance.Ids that belong to the same distribution\ngroup as that machine. This information may be used to\ndistribute instances for high availability.\n",
					"Name": "DistributionGroup",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#DistributionGroupResults"
					}
				},
				{
					"Doc": "EnsureDead calls EnsureDead on each given entity from state. It\nwill fail if the entity is not present. If it's Alive, nothing will\nhappen (see state/EnsureDead() for units or machines).\n",
					"Name": "EnsureDead",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				},
				{
					"Doc": "FindTools returns a List containing all tools matching the given parameters.\n",
					"Name": "FindTools",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#FindToolsParams"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#FindToolsResult"
					}
				},
				{
					"Doc": "GetContainerInterfaceInfo returns information to configure networking for a\ncontainer. It accepts container tags as arguments.\n",
					"Name": "GetContainerInterfaceInfo",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#MachineNetworkConfigResults"
					}
				},
				{
					"Doc": "InstanceId returns the provider specific instance id for each given\nmachine or an CodeNotProvisioned error, if not set.\n",
					"Name": "InstanceId",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#StringResults"
					}
				},
				{
					"Doc": "InstanceStatus returns the instance status for each given entity.\nOnly machine tags are accepted.\n",
					"Name": "InstanceStatus",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#StatusResults"
					}
				},
				{
					"Doc": "Life returns the life status of every supplied entity, where available.\n",
					"Name": "Life",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#LifeResults"
					}
				},
				{
					"Doc": "MachinesWithTransientErrors returns status data for machines with provisioning\nerrors which are transient.\n",
					"Name": "MachinesWithTransientErrors",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#StatusResults"
					}
				},
				{
					"Doc": "ModelConfig returns the current environment's configuration.\n",
					"Name": "ModelConfig",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ModelConfigResult"
					}
				},
				{
					"Doc": "ModelUUID returns the model UUID to connect to the environment\nthat the current connection is for.\n",
					"Name": "ModelUUID",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#StringResult"
					}
				},
				{
					"Doc": "PrepareContainerInterfaceInfo allocates an address and returns information to\nconfigure networking for a container. It accepts container tags as arguments.\n",
					"Name": "PrepareContainerInterfaceInfo",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#MachineNetworkConfigResults"
					}
				},
				{
					"Doc": "ProvisioningInfo returns the provisioning information for each given machine entity.\n",
					"Name": "ProvisioningInfo",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ProvisioningInfoResults"
					}
				},
				{
					"Doc": "ReleaseContainerAddresses finds addresses allocated to a container and marks\nthem as Dead, to be released and removed. It accepts container tags as\narguments.\n",
					"Name": "ReleaseContainerAddresses",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				},
				{
					"Doc": "Remove removes every given entity from state, calling EnsureDead\nfirst, then Remove. It will fail if the entity is not present.\n",
					"Name": "Remove",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				},
				{
					"Doc": "Series returns the deployed series for each given machine entity.\n",
					"Name": "Series",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#StringResults"
					}
				},
				{
					"Doc": "SetInstanceInfo sets the provider specific machine id, nonce,\nmetadata and network info for each given machine. Once set, the\ninstance id cannot be changed.\n",
					"Name": "SetInstanceInfo",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#InstancesInfo"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				},
				{
					"Doc": "SetInstanceStatus updates the instance status for each given\nentity. Only machine tags are accepted.\n",
					"Name": "SetInstanceStatus",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#SetStatus"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				},
				{
					"Doc": "SetPasswords sets the given password for each supplied entity, if possible.\n",
					"Name": "SetPasswords",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#EntityPasswords"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				},
				{
					"Doc": "SetStatus sets the status of each given entity.\n",
					"Name": "SetStatus",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#SetStatus"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				},
				{
					"Doc": "SetSupportedContainers updates the list of containers supported by the machines passed in args.\n",
					"Name": "SetSupportedContainers",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#MachineContainersParams"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				},
				{
					"Doc": "StateAddresses returns the list of addresses used to connect to the state.\n",
					"Name": "StateAddresses",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#StringsResult"
					}
				},
				{
					"Doc": "Status returns the status of each given entity.\n",
					"Name": "Status",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#StatusResults"
					}
				},
				{
					"Doc": "Tools finds the tools necessary for the given agents.\n",
					"Name": "Tools",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ToolsResults"
					}
				},
				{
					"Doc": "UpdateStatus updates the status data of each given entity.\nTODO(fwereade): WTF. This method exists *only* for the convenience of the\n*client* API -- and is itself completely broken -- but we still expose it\nin every facade with a StatusSetter? FFS.\n",
					"Name": "UpdateStatus",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#SetStatus"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				},
				{
					"Doc": "WatchAPIHostPorts watches the API server addresses.\n",
					"Name": "WatchAPIHostPorts",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#NotifyWatchResult"
					}
				},
				{
					"Doc": "WatchAllContainers starts a StringsWatcher to watch all containers deployed to\nany machine passed in args.\n",
					"Name": "WatchAllContainers",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#WatchContainers"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#StringsWatchResults"
					}
				},
				{
					"Doc": "WatchContainers starts a StringsWatcher to watch containers deployed to\nany machine passed in args.\n",
					"Name": "WatchContainers",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#WatchContainers"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#StringsWatchResults"
					}
				},
				{
					"Doc": "WatchForModelConfigChanges returns a NotifyWatcher that observes\nchanges to the environment configuration.\nNote that although the NotifyWatchResult contains an Error field,\nit's not used because we are only returning a single watcher,\nso we use the regular error return.\n",
					"Name": "WatchForModelConfigChanges",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#NotifyWatchResult"
					}
				},
				{
					"Doc": "WatchMachineErrorRetry returns a NotifyWatcher that notifies when\nthe provisioner should retry provisioning machines with transient errors.\n",
					"Name": "WatchMachineErrorRetry",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#NotifyWatchResult"
					}
				},
				{
					"Doc": "WatchModelMachines returns a StringsWatcher that notifies of\nchanges to the life cycles of the top level machines in the current\nmodel.\n",
					"Name": "WatchModelMachines",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#StringsWatchResult"
					}
				}
			],
			"Name": "Provisioner",
			"Version": 3
		},
		{
			"Methods": [
				{
					"Doc": "ProxyConfig returns the proxy settings for the current environment\n",
					"Name": "ProxyConfig",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ProxyConfigResults"
					}
				},
				{
					"Doc": "WatchForProxyConfigAndAPIHostPortChanges watches for cleanups to be perfomed in state\n",
					"Name": "WatchForProxyConfigAndAPIHostPortChanges",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#NotifyWatchResults"
					}
				}
			],
			"Name": "ProxyUpdater",
			"Version": 1
		},
		{
			"Doc": "RebootAPI provides access to the Upgrader API facade.\n",
			"Methods": [
				{
					"Doc": "ClearReboot will clear the reboot flag on provided machines, if it exists.\n",
					"Name": "ClearReboot",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				},
				{
					"Doc": "GetRebootAction returns the action a machine agent should take.\nIf a reboot flag is set on the machine, then that machine is\nexpected to reboot (params.ShouldReboot).\na reboot flag set on the machine parent or grandparent, will\ncause the machine to shutdown (params.ShouldShutdown).\nIf no reboot flag is set, the machine should do nothing (params.ShouldDoNothing).\n",
					"Name": "GetRebootAction",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#RebootActionResults"
					}
				},
				{
					"Doc": "RequestReboot sets the reboot flag on the provided machines\n",
					"Name": "RequestReboot",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				},
				{
					"Doc": "WatchForRebootEvent starts a watcher to track if there is a new\nreboot request on the machines ID or any of its parents (in case we are a container).\n",
					"Name": "WatchForRebootEvent",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#NotifyWatchResult"
					}
				}
			],
			"Name": "Reboot",
			"Version": 2
		},
		{
			"Doc": "srvRelationUnitsWatcher defines the API wrapping a state.RelationUnitsWatcher.\nIt notifies about units entering and leaving the scope of a RelationUnit,\nand changes to the settings of those units known to have entered.\n",
			"Methods": [
				{
					"Doc": "Next returns when a change has occured to an entity of the\ncollection being watched since the most recent call to Next\nor the Watch call that created the srvRelationUnitsWatcher.\n",
					"Name": "Next",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#RelationUnitsWatchResult"
					}
				},
				{
					"Doc": "Stop stops the watcher.\n",
					"Name": "Stop"
				}
			],
			"Name": "RelationUnitsWatcher",
			"Version": 1
		},
		{
			"Doc": "ResumerAPI implements the API used by the resumer worker.\n",
			"Methods": [
				{
					"Name": "ResumeTransactions"
				}
			],
			"Name": "Resumer",
			"Version": 2
		},
		{
			"Doc": "RetryStrategyAPI implements RetryStrategy\n",
			"Methods": [
				{
					"Doc": "RetryStrategy returns RetryStrategyResults that can be used by any code that uses\nto configure the retry timer that's currently in juju utils.\n",
					"Name": "RetryStrategy",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#RetryStrategyResults"
					}
				},
				{
					"Doc": "WatchRetryStrategy watches for changes to the environment. Currently we only allow\nchanges to the boolean that determines whether retries should be attempted or not.\n",
					"Name": "WatchRetryStrategy",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#NotifyWatchResults"
					}
				}
			],
			"Name": "RetryStrategy",
			"Version": 1
		},
		{
			"Doc": "Facade implements the API required by the sshclient worker.\n",
			"Methods": [
				{
					"Doc": "PrivateAddress reports the preferred private network address for one or\nmore entities. Machines and units are supported.\n",
					"Name": "PrivateAddress",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#SSHAddressResults"
					}
				},
				{
					"Doc": "Proxy returns whether SSH connections should be proxied through the\ncontroller hosts for the model associated with the API connection.\n",
					"Name": "Proxy",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#SSHProxyResult"
					}
				},
				{
					"Doc": "PublicAddress reports the preferred public network address for one\nor more entities. Machines and units are suppored.\n",
					"Name": "PublicAddress",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#SSHAddressResults"
					}
				},
				{
					"Doc": "PublicKeys returns the public SSH hosts for one or more\nentities. Machines and units are supported.\n",
					"Name": "PublicKeys",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#SSHPublicKeysResults"
					}
				}
			],
			"Name": "SSHClient",
			"Version": 1
		},
		{
			"Doc": "Facade allows controller machines to request exclusive rights to administer\nsome specific model for a limited time.\n",
			"Methods": [
				{
					"Doc": "Claim makes the supplied singular-controller lease requests. (In practice,\nany requests not for the connection's model, or not on behalf of the\nconnected EnvironManager machine, will be rejected.)\n",
					"Name": "Claim",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#SingularClaims"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				},
				{
					"Doc": "Wait waits for the singular-controller lease to expire for all supplied\nentities. (In practice, any requests that do not refer to the connection's\nmodel will be rejected.)\n",
					"Name": "Wait",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				}
			],
			"Name": "Singular",
			"Version": 1
		},
		{
			"Doc": "API defines the methods the Spaces API facade implements.\n",
			"Methods": [
				{
					"Name": "CreateSpaces",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#CreateSpacesParams"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				},
				{
					"Name": "ListSpaces",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ListSpacesResults"
					}
				}
			],
			"Name": "Spaces",
			"Version": 2
		},
		{
			"Doc": "API is the concrete implementation of the Pruner endpoint..\n",
			"Methods": [
				{
					"Doc": "Prune endpoint removes status history entries until\nonly the ones newer than now - p.MaxHistoryTime remain and\nthe history is smaller than p.MaxHistoryMB.\n",
					"Name": "Prune",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#StatusHistoryPruneArgs"
					}
				}
			],
			"Name": "StatusHistory",
			"Version": 2
		},
		{
			"Doc": "API implements the storage interface and is the concrete\nimplementation of the api end point.\n",
			"Methods": [
				{
					"Doc": "AddToUnit validates and creates additional storage instances for units.\nThis method handles bulk add operations and\na failure on one individual storage instance does not block remaining\ninstances from being processed.\nA \"CHANGE\" block can block this operation.\n",
					"Name": "AddToUnit",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#StoragesAddParams"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				},
				{
					"Doc": "CreatePool creates a new pool with specified parameters.\n",
					"Name": "CreatePool",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#StoragePool"
					}
				},
				{
					"Doc": "ListFilesystems returns a list of filesystems in the environment matching\nthe provided filter. Each result describes a filesystem in detail, including\nthe filesystem's attachments.\n",
					"Name": "ListFilesystems",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#FilesystemFilters"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#FilesystemDetailsListResults"
					}
				},
				{
					"Doc": "ListPools returns a list of pools.\nIf filter is provided, returned list only contains pools that match\nthe filter.\nPools can be filtered on names and provider types.\nIf both names and types are provided as filter,\npools that match either are returned.\nThis method lists union of pools and environment provider types.\nIf no filter is provided, all pools are returned.\n",
					"Name": "ListPools",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#StoragePoolFilters"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#StoragePoolsResults"
					}
				},
				{
					"Doc": "ListStorageDetails returns storage matching a filter.\n",
					"Name": "ListStorageDetails",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#StorageFilters"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#StorageDetailsListResults"
					}
				},
				{
					"Doc": "ListVolumes lists volumes with the given filters. Each filter produces\nan independent list of volumes, or an error if the filter is invalid\nor the volumes could not be listed.\n",
					"Name": "ListVolumes",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#VolumeFilters"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#VolumeDetailsListResults"
					}
				},
				{
					"Doc": "StorageDetails retrieves and returns detailed information about desired\nstorage identified by supplied tags. If specified storage cannot be\nretrieved, individual error is returned instead of storage information.\n",
					"Name": "StorageDetails",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#StorageDetailsResults"
					}
				}
			],
			"Name": "Storage",
			"Version": 2
		},
		{
			"Doc": "StorageProvisionerAPI provides access to the Provisioner API facade.\n",
			"Methods": [
				{
					"Doc": "AttachmentLife returns the lifecycle state of each specified machine\nstorage attachment.\n",
					"Name": "AttachmentLife",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#MachineStorageIds"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#LifeResults"
					}
				},
				{
					"Doc": "EnsureDead calls EnsureDead on each given entity from state. It\nwill fail if the entity is not present. If it's Alive, nothing will\nhappen (see state/EnsureDead() for units or machines).\n",
					"Name": "EnsureDead",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				},
				{
					"Doc": "FilesystemAttachmentParams returns the parameters for creating the filesystem\nattachments with the specified IDs.\n",
					"Name": "FilesystemAttachmentParams",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#MachineStorageIds"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#FilesystemAttachmentParamsResults"
					}
				},
				{
					"Doc": "FilesystemAttachments returns details of filesystem attachments with the specified IDs.\n",
					"Name": "FilesystemAttachments",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#MachineStorageIds"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#FilesystemAttachmentResults"
					}
				},
				{
					"Doc": "FilesystemParams returns the parameters for creating the filesystems\nwith the specified tags.\n",
					"Name": "FilesystemParams",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#FilesystemParamsResults"
					}
				},
				{
					"Doc": "Filesystems returns details of filesystems with the specified tags.\n",
					"Name": "Filesystems",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#FilesystemResults"
					}
				},
				{
					"Doc": "InstanceId returns the provider specific instance id for each given\nmachine or an CodeNotProvisioned error, if not set.\n",
					"Name": "InstanceId",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#StringResults"
					}
				},
				{
					"Doc": "Life returns the life status of every supplied entity, where available.\n",
					"Name": "Life",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#LifeResults"
					}
				},
				{
					"Doc": "ModelConfig returns the current environment's configuration.\n",
					"Name": "ModelConfig",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ModelConfigResult"
					}
				},
				{
					"Doc": "Remove removes volumes and filesystems from state.\n",
					"Name": "Remove",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				},
				{
					"Doc": "RemoveAttachments removes the specified machine storage attachments\nfrom state.\n",
					"Name": "RemoveAttachment",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#MachineStorageIds"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				},
				{
					"Doc": "SetFilesystemAttachmentInfo records the details of newly provisioned filesystem\nattachments.\n",
					"Name": "SetFilesystemAttachmentInfo",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#FilesystemAttachments"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				},
				{
					"Doc": "SetFilesystemInfo records the details of newly provisioned filesystems.\n",
					"Name": "SetFilesystemInfo",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Filesystems"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				},
				{
					"Doc": "SetStatus sets the status of each given entity.\n",
					"Name": "SetStatus",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#SetStatus"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				},
				{
					"Doc": "SetVolumeAttachmentInfo records the details of newly provisioned volume\nattachments.\n",
					"Name": "SetVolumeAttachmentInfo",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#VolumeAttachments"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				},
				{
					"Doc": "SetVolumeInfo records the details of newly provisioned volumes.\n",
					"Name": "SetVolumeInfo",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Volumes"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				},
				{
					"Doc": "UpdateStatus updates the status data of each given entity.\nTODO(fwereade): WTF. This method exists *only* for the convenience of the\n*client* API -- and is itself completely broken -- but we still expose it\nin every facade with a StatusSetter? FFS.\n",
					"Name": "UpdateStatus",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#SetStatus"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				},
				{
					"Doc": "VolumeAttachmentParams returns the parameters for creating the volume\nattachments with the specified IDs.\n",
					"Name": "VolumeAttachmentParams",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#MachineStorageIds"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#VolumeAttachmentParamsResults"
					}
				},
				{
					"Doc": "VolumeAttachments returns details of volume attachments with the specified IDs.\n",
					"Name": "VolumeAttachments",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#MachineStorageIds"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#VolumeAttachmentResults"
					}
				},
				{
					"Doc": "VolumeBlockDevices returns details of the block devices corresponding to the\nvolume attachments with the specified IDs.\n",
					"Name": "VolumeBlockDevices",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#MachineStorageIds"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#BlockDeviceResults"
					}
				},
				{
					"Doc": "VolumeParams returns the parameters for creating or destroying\nthe volumes with the specified tags.\n",
					"Name": "VolumeParams",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#VolumeParamsResults"
					}
				},
				{
					"Doc": "Volumes returns details of volumes with the specified tags.\n",
					"Name": "Volumes",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#VolumeResults"
					}
				},
				{
					"Doc": "WatchBlockDevices watches for changes to the specified machines' block devices.\n",
					"Name": "WatchBlockDevices",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#NotifyWatchResults"
					}
				},
				{
					"Doc": "WatchFilesystemAttachments watches for changes to filesystem attachments\nscoped to the entity with the tag passed to NewState.\n",
					"Name": "WatchFilesystemAttachments",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#MachineStorageIdsWatchResults"
					}
				},
				{
					"Doc": "WatchFilesystems watches for changes to filesystems scoped\nto the entity with the tag passed to NewState.\n",
					"Name": "WatchFilesystems",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#StringsWatchResults"
					}
				},
				{
					"Doc": "WatchForModelConfigChanges returns a NotifyWatcher that observes\nchanges to the environment configuration.\nNote that although the NotifyWatchResult contains an Error field,\nit's not used because we are only returning a single watcher,\nso we use the regular error return.\n",
					"Name": "WatchForModelConfigChanges",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#NotifyWatchResult"
					}
				},
				{
					"Doc": "WatchMachines watches for changes to the specified machines.\n",
					"Name": "WatchMachines",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#NotifyWatchResults"
					}
				},
				{
					"Doc": "WatchVolumeAttachments watches for changes to volume attachments scoped to\nthe entity with the tag passed to NewState.\n",
					"Name": "WatchVolumeAttachments",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#MachineStorageIdsWatchResults"
					}
				},
				{
					"Doc": "WatchVolumes watches for changes to volumes scoped to the\nentity with the tag passed to NewState.\n",
					"Name": "WatchVolumes",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#StringsWatchResults"
					}
				}
			],
			"Name": "StorageProvisioner",
			"Version": 2
		},
		{
			"Doc": "srvStringsWatcher defines the API for methods on a state.StringsWatcher.\nEach client has its own current set of watchers, stored in resources.\nsrvStringsWatcher notifies about changes for all entities of a given kind,\nsending the changes as a list of strings.\n",
			"Methods": [
				{
					"Doc": "Next returns when a change has occured to an entity of the\ncollection being watched since the most recent call to Next\nor the Watch call that created the srvStringsWatcher.\n",
					"Name": "Next",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#StringsWatchResult"
					}
				},
				{
					"Doc": "Stop stops the watcher.\n",
					"Name": "Stop"
				}
			],
			"Name": "StringsWatcher",
			"Version": 1
		},
		{
			"Doc": "SubnetsAPI defines the methods the Subnets API facade implements.\n",
			"Methods": [
				{
					"Doc": "AddSubnets adds existing subnets to Juju.\n",
					"Name": "AddSubnets",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#AddSubnetsParams"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				},
				{
					"Doc": "AllSpaces returns the tags of all network spaces known to Juju.\n",
					"Name": "AllSpaces",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#SpaceResults"
					}
				},
				{
					"Doc": "AllZones returns all availability zones known to Juju. If a\nzone is unusable, unavailable, or deprecated the Available\nfield will be false.\n",
					"Name": "AllZones",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ZoneResults"
					}
				},
				{
					"Doc": "ListSubnets returns the matching subnets after applying\noptional filters.\n",
					"Name": "ListSubnets",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#SubnetsFilters"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ListSubnetsResults"
					}
				}
			],
			"Name": "Subnets",
			"Version": 2
		},
		{
			"Doc": "UndertakerAPI implements the API used by the machine undertaker worker.\n",
			"Methods": [
				{
					"Doc": "ModelConfig returns the model's configuration.\n",
					"Name": "ModelConfig",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ModelConfigResult"
					}
				},
				{
					"Doc": "ModelInfo returns information on the model needed by the undertaker worker.\n",
					"Name": "ModelInfo",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#UndertakerModelInfoResult"
					}
				},
				{
					"Doc": "ProcessDyingModel checks if a dying environment has any machines or services.\nIf there are none, the environment's life is changed from dying to dead.\n",
					"Name": "ProcessDyingModel"
				},
				{
					"Doc": "RemoveModel removes any records of this model from Juju.\n",
					"Name": "RemoveModel"
				},
				{
					"Doc": "SetStatus sets the status of each given entity.\n",
					"Name": "SetStatus",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#SetStatus"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				},
				{
					"Doc": "UpdateStatus updates the status data of each given entity.\nTODO(fwereade): WTF. This method exists *only* for the convenience of the\n*client* API -- and is itself completely broken -- but we still expose it\nin every facade with a StatusSetter? FFS.\n",
					"Name": "UpdateStatus",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#SetStatus"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				},
				{
					"Doc": "WatchModelResources creates watchers for changes to the lifecycle of an\nmodel's machines and services.\n",
					"Name": "WatchModelResources",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#NotifyWatchResults"
					}
				}
			],
			"Name": "Undertaker",
			"Version": 1
		},
		{
			"Doc": "API implements the functionality for assigning units to machines.\n",
			"Methods": [
				{
					"Doc": " AssignUnits assigns the units with the given ids to the correct machine. The\n error results are returned in the same order as the given entities.\n",
					"Name": "AssignUnits",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				},
				{
					"Doc": "SetAgentStatus will set status for agents of Units passed in args, if one\nof the args is not an Unit it will fail.\n",
					"Name": "SetAgentStatus",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#SetStatus"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				},
				{
					"Doc": "WatchUnitAssignments returns a strings watcher that is notified when new unit\nassignments are added to the db.\n",
					"Name": "WatchUnitAssignments",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#StringsWatchResult"
					}
				}
			],
			"Name": "UnitAssigner",
			"Version": 1
		},
		{
			"Doc": "UniterAPIV3 implements the API version 3, used by the uniter worker.\n",
			"Methods": [
				{
					"Doc": "APIAddresses returns the list of addresses used to connect to the API.\n",
					"Name": "APIAddresses",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#StringsResult"
					}
				},
				{
					"Doc": "APIHostPorts returns the API server addresses.\n",
					"Name": "APIHostPorts",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#APIHostPortsResult"
					}
				},
				{
					"Doc": "Actions returns the Actions by Tags passed and ensures that the Unit asking\nfor them is the same Unit that has the Actions.\n",
					"Name": "Actions",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ActionResults"
					}
				},
				{
					"Doc": "AddMetricBatches adds the metrics for the specified unit.\n",
					"Name": "AddMetricBatches",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#MetricBatchParams"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				},
				{
					"Doc": "AddUnitStorage validates and creates additional storage instances for units.\nFailures on an individual storage instance do not block remaining\ninstances from being processed.\n",
					"Name": "AddUnitStorage",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#StoragesAddParams"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				},
				{
					"Doc": "AllMachinePorts returns all opened port ranges for each given\nmachine (on all networks).\n",
					"Name": "AllMachinePorts",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#MachinePortsResults"
					}
				},
				{
					"Doc": "ApplicationStatus returns the status of the Applications and its workloads\nif the given unit is the leader.\n",
					"Name": "ApplicationStatus",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ApplicationStatusResults"
					}
				},
				{
					"Doc": "AssignedMachine returns the machine tag for each given unit tag, or\nan error satisfying params.IsCodeNotAssigned when a unit has no\nassigned machine.\n",
					"Name": "AssignedMachine",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#StringResults"
					}
				},
				{
					"Doc": "AvailabilityZone returns the availability zone for each given unit, if applicable.\n",
					"Name": "AvailabilityZone",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#StringResults"
					}
				},
				{
					"Doc": "BeginActions marks the actions represented by the passed in Tags as running.\n",
					"Name": "BeginActions",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				},
				{
					"Doc": "CACert returns the certificate used to validate the state connection.\n",
					"Name": "CACert",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#BytesResult"
					}
				},
				{
					"Doc": "CharmArchiveSha256 returns the SHA256 digest of the charm archive\n(bundle) data for each charm url in the given parameters.\n",
					"Name": "CharmArchiveSha256",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#CharmURLs"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#StringResults"
					}
				},
				{
					"Doc": "CharmModifiedVersion returns the most CharmModifiedVersion for all given\nunits or services.\n",
					"Name": "CharmModifiedVersion",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#IntResults"
					}
				},
				{
					"Doc": "CharmURL returns the charm URL for all given units or services.\n",
					"Name": "CharmURL",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#StringBoolResults"
					}
				},
				{
					"Doc": "ClearResolved removes any resolved setting from each given unit.\n",
					"Name": "ClearResolved",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				},
				{
					"Doc": "ClosePorts sets the policy of the port range with protocol to be\nclosed, for all given units.\n",
					"Name": "ClosePorts",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#EntitiesPortRanges"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				},
				{
					"Doc": "ConfigSettings returns the complete set of service charm config\nsettings available to each given unit.\n",
					"Name": "ConfigSettings",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ConfigSettingsResults"
					}
				},
				{
					"Doc": "CurrentModel returns the name and UUID for the current juju model.\n",
					"Name": "CurrentModel",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ModelResult"
					}
				},
				{
					"Doc": "Destroy advances all given Alive units' lifecycles as far as\npossible. See state/Unit.Destroy().\n",
					"Name": "Destroy",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				},
				{
					"Doc": "DestroyAllSubordinates destroys all subordinates of each given unit.\n",
					"Name": "DestroyAllSubordinates",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				},
				{
					"Doc": "DestroyUnitStorageAttachments marks each storage attachment of the\nspecified units as Dying.\n",
					"Name": "DestroyUnitStorageAttachments",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				},
				{
					"Doc": "EnsureDead calls EnsureDead on each given entity from state. It\nwill fail if the entity is not present. If it's Alive, nothing will\nhappen (see state/EnsureDead() for units or machines).\n",
					"Name": "EnsureDead",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				},
				{
					"Doc": "EnterScope ensures each unit has entered its scope in the relation,\nfor all of the given relation/unit pairs. See also\nstate.RelationUnit.EnterScope().\n",
					"Name": "EnterScope",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#RelationUnits"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				},
				{
					"Doc": "FinishActions saves the result of a completed Action\n",
					"Name": "FinishActions",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#ActionExecutionResults"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				},
				{
					"Name": "GetMeterStatus",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#MeterStatusResults"
					}
				},
				{
					"Doc": "GetPrincipal returns the result of calling PrincipalName() and\nconverting it to a tag, on each given unit.\n",
					"Name": "GetPrincipal",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#StringBoolResults"
					}
				},
				{
					"Doc": "HasSubordinates returns the whether each given unit has any subordinates.\n",
					"Name": "HasSubordinates",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#BoolResults"
					}
				},
				{
					"Doc": "JoinedRelations returns the tags of all relations for which each supplied unit\nhas entered scope. It should be called RelationsInScope, but it's not convenient\nto make that change until we have versioned APIs.\n",
					"Name": "JoinedRelations",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#StringsResults"
					}
				},
				{
					"Doc": "LeaveScope signals each unit has left its scope in the relation,\nfor all of the given relation/unit pairs. See also\nstate.RelationUnit.LeaveScope().\n",
					"Name": "LeaveScope",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#RelationUnits"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				},
				{
					"Doc": "Life returns the life status of every supplied entity, where available.\n",
					"Name": "Life",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#LifeResults"
					}
				},
				{
					"Doc": "Merge merges in the provided leadership settings. Only leaders for\nthe given service may perform this operation.\n",
					"Name": "Merge",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#MergeLeadershipSettingsBulkParams"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				},
				{
					"Doc": "ModelConfig returns the current environment's configuration.\n",
					"Name": "ModelConfig",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ModelConfigResult"
					}
				},
				{
					"Doc": "ModelUUID returns the model UUID to connect to the environment\nthat the current connection is for.\n",
					"Name": "ModelUUID",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#StringResult"
					}
				},
				{
					"Doc": "NetworkConfig returns information about all given relation/unit pairs,\nincluding their id, key and the local endpoint.\n",
					"Name": "NetworkConfig",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#UnitsNetworkConfig"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#UnitNetworkConfigResults"
					}
				},
				{
					"Doc": "OpenPorts sets the policy of the port range with protocol to be\nopened, for all given units.\n",
					"Name": "OpenPorts",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#EntitiesPortRanges"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				},
				{
					"Doc": "PrivateAddress returns the private address for each given unit, if set.\n",
					"Name": "PrivateAddress",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#StringResults"
					}
				},
				{
					"Doc": "ProviderType returns the provider type used by the current juju\nmodel.\n\nTODO(dimitern): Refactor the uniter to call this instead of calling\nModelConfig() just to get the provider type. Once we have machine\naddresses, this might be completely unnecessary though.\n",
					"Name": "ProviderType",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#StringResult"
					}
				},
				{
					"Doc": "PublicAddress returns the public address for each given unit, if set.\n",
					"Name": "PublicAddress",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#StringResults"
					}
				},
				{
					"Doc": "Read reads leadership settings for the provided service ID. Any\nunit of the service may perform this operation.\n",
					"Name": "Read",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#GetLeadershipSettingsBulkResults"
					}
				},
				{
					"Doc": "ReadRemoteSettings returns the remote settings of each given set of\nrelation/local unit/remote unit.\n",
					"Name": "ReadRemoteSettings",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#RelationUnitPairs"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#SettingsResults"
					}
				},
				{
					"Doc": "ReadSettings returns the local settings of each given set of\nrelation/unit.\n",
					"Name": "ReadSettings",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#RelationUnits"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#SettingsResults"
					}
				},
				{
					"Doc": "Relation returns information about all given relation/unit pairs,\nincluding their id, key and the local endpoint.\n",
					"Name": "Relation",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#RelationUnits"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#RelationResults"
					}
				},
				{
					"Doc": "RelationById returns information about all given relations,\nspecified by their ids, including their key and the local\nendpoint.\n",
					"Name": "RelationById",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#RelationIds"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#RelationResults"
					}
				},
				{
					"Doc": "RemoveStorageAttachments removes the specified storage\nattachments from state.\n",
					"Name": "RemoveStorageAttachments",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#StorageAttachmentIds"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				},
				{
					"Doc": "RequestReboot sets the reboot flag on the provided machines\n",
					"Name": "RequestReboot",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				},
				{
					"Doc": "Resolved returns the current resolved setting for each given unit.\n",
					"Name": "Resolved",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ResolvedModeResults"
					}
				},
				{
					"Doc": "SetAgentStatus will set status for agents of Units passed in args, if one\nof the args is not an Unit it will fail.\n",
					"Name": "SetAgentStatus",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#SetStatus"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				},
				{
					"Doc": "SetApplicationStatus sets the status for all the Services in args if the given Unit is\nthe leader.\n",
					"Name": "SetApplicationStatus",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#SetStatus"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				},
				{
					"Doc": "SetCharmURL sets the charm URL for each given unit. An error will\nbe returned if a unit is dead, or the charm URL is not know.\n",
					"Name": "SetCharmURL",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#EntitiesCharmURL"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				},
				{
					"Doc": "SetStatus will set status for a entities passed in args. If the entity is\na Unit it will instead set status to its agent, to emulate backwards\ncompatibility.\n",
					"Name": "SetStatus",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#SetStatus"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				},
				{
					"Doc": "SetUnitStatus sets status for all elements passed in args, the difference\nwith SetStatus is that if an entity is a Unit it will set its status instead\nof its agent.\n",
					"Name": "SetUnitStatus",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#SetStatus"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				},
				{
					"Doc": "SetWorkloadVersion sets the workload version for each given unit. An error will\nbe returned if a unit is dead.\n",
					"Name": "SetWorkloadVersion",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#EntityWorkloadVersions"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				},
				{
					"Doc": "StorageAttachmentLife returns the lifecycle state of the storage attachments\nwith the specified tags.\n",
					"Name": "StorageAttachmentLife",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#StorageAttachmentIds"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#LifeResults"
					}
				},
				{
					"Doc": "StorageAttachments returns the storage attachments with the specified tags.\n",
					"Name": "StorageAttachments",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#StorageAttachmentIds"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#StorageAttachmentResults"
					}
				},
				{
					"Doc": "UnitStatus returns the workload status information for the unit.\n",
					"Name": "UnitStatus",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#StatusResults"
					}
				},
				{
					"Doc": "UnitStorageAttachments returns the IDs of storage attachments for a collection of units.\n",
					"Name": "UnitStorageAttachments",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#StorageAttachmentIdsResults"
					}
				},
				{
					"Doc": "UpdateSettings persists all changes made to the local settings of\nall given pairs of relation and unit. Keys with empty values are\nconsidered a signal to delete these values.\n",
					"Name": "UpdateSettings",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#RelationUnitsSettings"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				},
				{
					"Doc": "Watch starts an NotifyWatcher for each given entity.\n",
					"Name": "Watch",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#NotifyWatchResults"
					}
				},
				{
					"Doc": "WatchAPIHostPorts watches the API server addresses.\n",
					"Name": "WatchAPIHostPorts",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#NotifyWatchResult"
					}
				},
				{
					"Doc": "WatchActionNotifications returns a StringsWatcher for observing\nincoming action calls to a unit. See also state/watcher.go\nUnit.WatchActionNotifications(). This method is called from\napi/uniter/uniter.go WatchActionNotifications().\n",
					"Name": "WatchActionNotifications",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#StringsWatchResults"
					}
				},
				{
					"Doc": "WatchApplicationRelations returns a StringsWatcher, for each given\nservice, that notifies of changes to the lifecycles of relations\ninvolving that service.\n",
					"Name": "WatchApplicationRelations",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#StringsWatchResults"
					}
				},
				{
					"Doc": "WatchConfigSettings returns a NotifyWatcher for observing changes\nto each unit's service configuration settings. See also\nstate/watcher.go:Unit.WatchConfigSettings().\n",
					"Name": "WatchConfigSettings",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#NotifyWatchResults"
					}
				},
				{
					"Doc": "WatchForModelConfigChanges returns a NotifyWatcher that observes\nchanges to the environment configuration.\nNote that although the NotifyWatchResult contains an Error field,\nit's not used because we are only returning a single watcher,\nso we use the regular error return.\n",
					"Name": "WatchForModelConfigChanges",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#NotifyWatchResult"
					}
				},
				{
					"Doc": "WatchLeadershipSettings will block the caller until leadership settings\nfor the given service ID change.\n",
					"Name": "WatchLeadershipSettings",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#NotifyWatchResults"
					}
				},
				{
					"Name": "WatchMeterStatus",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#NotifyWatchResults"
					}
				},
				{
					"Doc": "WatchRelationUnits returns a RelationUnitsWatcher for observing\nchanges to every unit in the supplied relation that is visible to\nthe supplied unit. See also state/watcher.go:RelationUnit.Watch().\n",
					"Name": "WatchRelationUnits",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#RelationUnits"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#RelationUnitsWatchResults"
					}
				},
				{
					"Doc": "WatchStorageAttachments creates watchers for a collection of storage\nattachments, each of which can be used to watch changes to storage\nattachment info.\n",
					"Name": "WatchStorageAttachments",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#StorageAttachmentIds"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#NotifyWatchResults"
					}
				},
				{
					"Doc": "WatchUnitAddresses returns a NotifyWatcher for observing changes\nto each unit's addresses.\n",
					"Name": "WatchUnitAddresses",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#NotifyWatchResults"
					}
				},
				{
					"Doc": "WatchUnitStorageAttachments creates watchers for a collection of units,\neach of which can be used to watch for lifecycle changes to the corresponding\nunit's storage attachments.\n",
					"Name": "WatchUnitStorageAttachments",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#StringsWatchResults"
					}
				},
				{
					"Doc": "WorkloadVersion returns the workload version for all given units or services.\n",
					"Name": "WorkloadVersion",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#StringResults"
					}
				}
			],
			"Name": "Uniter",
			"Version": 4
		},
		{
			"Methods": [
				{
					"Name": "DesiredVersion",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#VersionResults"
					}
				},
				{
					"Name": "SetTools",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#EntitiesVersion"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				},
				{
					"Name": "Tools",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ToolsResults"
					}
				},
				{
					"Name": "WatchAPIVersion",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#NotifyWatchResults"
					}
				}
			],
			"Name": "Upgrader",
			"Version": 1
		},
		{
			"Doc": "UserManagerAPI implements the user manager interface and is the concrete\nimplementation of the api end point.\n",
			"Methods": [
				{
					"Doc": "AddUser adds a user with a username, and either a password or\na randomly generated secret key which will be returned.\n",
					"Name": "AddUser",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#AddUsers"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#AddUserResults"
					}
				},
				{
					"Doc": "CreateLocalLoginMacaroon creates a macaroon for the specified users to use\nfor future logins.\n",
					"Name": "CreateLocalLoginMacaroon",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#MacaroonResults"
					}
				},
				{
					"Doc": "DisableUser disables one or more users.  If the user is already disabled,\nthe action is considered a success.\n",
					"Name": "DisableUser",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				},
				{
					"Doc": "EnableUser enables one or more users.  If the user is already enabled,\nthe action is considered a success.\n",
					"Name": "EnableUser",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				},
				{
					"Doc": "RemoveUser permanently removes a user from the current controller for each\nentity provided. While the user is permanently removed we keep it's\ninformation around for auditing purposes.\nTODO(redir): Add information about getting deleted user information when we\nadd that capability.\n",
					"Name": "RemoveUser",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#Entities"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				},
				{
					"Doc": "SetPassword changes the stored password for the specified users.\n",
					"Name": "SetPassword",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#EntityPasswords"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
					}
				},
				{
					"Doc": "UserInfo returns information on a user.\n",
					"Name": "UserInfo",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#UserInfoRequest"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#UserInfoResults"
					}
				}
			],
			"Name": "UserManager",
			"Version": 1
		},
		{
			"Doc": "srvMachineStorageIdsWatcher defines the API wrapping a state.StringsWatcher\nwatching machine/storage attachments. This watcher notifies about storage\nentities (volumes/filesystems) being attached to and detached from machines.\n\nTODO(axw) state needs a new watcher, this is a bt of a hack. State watchers\ncould do with some deduplication of logic, and I don't want to add to that\nspaghetti right now.\n",
			"Methods": [
				{
					"Doc": "Next returns when a change has occured to an entity of the\ncollection being watched since the most recent call to Next\nor the Watch call that created the srvMachineStorageIdsWatcher.\n",
					"Name": "Next",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#MachineStorageIdsWatchResult"
					}
				},
				{
					"Doc": "Stop stops the watcher.\n",
					"Name": "Stop"
				}
			],
			"Name": "VolumeAttachmentsWatcher",
			"Version": 2
		},
		{
			"Methods": [
				{
					"Doc": "Login logs in with the provided credentials.  All subsequent requests on the\nconnection will act as the authenticated user.\n",
					"Name": "Login",
					"Param": {
						"Name": "github.com/juju/juju/apiserver/params#LoginRequest"
					},
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#LoginResultV1"
					}
				},
				{
					"Doc": "RedirectInfo returns redirected host information for the model.\nIn Juju it always returns an error because the Juju controller\ndoes not multiplex controllers.\n",
					"Name": "RedirectInfo",
					"Result": {
						"Name": "github.com/juju/juju/apiserver/params#RedirectInfoResult"
					}
				}
			],
			"Name": "Admin",
			"Version": 3
		}
	],
	"TypeInfo": {
		"Types": {
			"github.com/juju/juju/apiserver/params#APIHostPortsResult": {
				"Fields": [
					{
						"Name": "Servers",
						"Tag": "json:\"servers\"",
						"Type": {
							"Elem": {
								"Elem": {
									"Name": "github.com/juju/juju/apiserver/params#HostPort"
								},
								"Kind": "slice"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Methods": {
					"NetworkHostsPorts": {
						"Name": "NetworkHostsPorts",
						"PtrReceiver": false,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Elem": {
										"Elem": {
											"Name": "github.com/juju/juju/network#HostPort"
										},
										"Kind": "slice"
									},
									"Kind": "slice"
								}
							]
						}
					}
				},
				"Name": "github.com/juju/juju/apiserver/params#APIHostPortsResult"
			},
			"github.com/juju/juju/apiserver/params#Action": {
				"Fields": [
					{
						"Name": "Tag",
						"Tag": "json:\"tag\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Receiver",
						"Tag": "json:\"receiver\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Name",
						"Tag": "json:\"name\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Parameters",
						"Tag": "json:\"parameters,omitempty\"",
						"Type": {
							"Elem": {
								"Kind": "interface"
							},
							"Key": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "map"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#Action"
			},
			"github.com/juju/juju/apiserver/params#ActionExecutionResult": {
				"Fields": [
					{
						"Name": "ActionTag",
						"Tag": "json:\"action-tag\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Status",
						"Tag": "json:\"status\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Results",
						"Tag": "json:\"results,omitempty\"",
						"Type": {
							"Elem": {
								"Kind": "interface"
							},
							"Key": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "map"
						}
					},
					{
						"Name": "Message",
						"Tag": "json:\"message,omitempty\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ActionExecutionResult"
			},
			"github.com/juju/juju/apiserver/params#ActionExecutionResults": {
				"Fields": [
					{
						"Name": "Results",
						"Tag": "json:\"results,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#ActionExecutionResult"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ActionExecutionResults"
			},
			"github.com/juju/juju/apiserver/params#ActionResult": {
				"Fields": [
					{
						"Name": "Action",
						"Tag": "json:\"action,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Action"
							},
							"Kind": "ptr"
						}
					},
					{
						"Name": "Enqueued",
						"Tag": "json:\"enqueued,omitempty\"",
						"Type": {
							"Name": "time#Time"
						}
					},
					{
						"Name": "Started",
						"Tag": "json:\"started,omitempty\"",
						"Type": {
							"Name": "time#Time"
						}
					},
					{
						"Name": "Completed",
						"Tag": "json:\"completed,omitempty\"",
						"Type": {
							"Name": "time#Time"
						}
					},
					{
						"Name": "Status",
						"Tag": "json:\"status,omitempty\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Message",
						"Tag": "json:\"message,omitempty\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Output",
						"Tag": "json:\"output,omitempty\"",
						"Type": {
							"Elem": {
								"Kind": "interface"
							},
							"Key": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "map"
						}
					},
					{
						"Name": "Error",
						"Tag": "json:\"error,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Error"
							},
							"Kind": "ptr"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ActionResult"
			},
			"github.com/juju/juju/apiserver/params#ActionResults": {
				"Fields": [
					{
						"Name": "Results",
						"Tag": "json:\"results,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#ActionResult"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ActionResults"
			},
			"github.com/juju/juju/apiserver/params#ActionSpec": {
				"Fields": [
					{
						"Name": "Description",
						"Tag": "json:\"description\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Params",
						"Tag": "json:\"params\"",
						"Type": {
							"Elem": {
								"Kind": "interface"
							},
							"Key": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "map"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ActionSpec"
			},
			"github.com/juju/juju/apiserver/params#Actions": {
				"Fields": [
					{
						"Name": "Actions",
						"Tag": "json:\"actions,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Action"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#Actions"
			},
			"github.com/juju/juju/apiserver/params#ActionsByName": {
				"Fields": [
					{
						"Name": "Name",
						"Tag": "json:\"name,omitempty\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Actions",
						"Tag": "json:\"actions,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#ActionResult"
							},
							"Kind": "slice"
						}
					},
					{
						"Name": "Error",
						"Tag": "json:\"error,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Error"
							},
							"Kind": "ptr"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ActionsByName"
			},
			"github.com/juju/juju/apiserver/params#ActionsByNames": {
				"Fields": [
					{
						"Name": "Actions",
						"Tag": "json:\"actions,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#ActionsByName"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ActionsByNames"
			},
			"github.com/juju/juju/apiserver/params#ActionsByReceiver": {
				"Fields": [
					{
						"Name": "Receiver",
						"Tag": "json:\"receiver,omitempty\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Actions",
						"Tag": "json:\"actions,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#ActionResult"
							},
							"Kind": "slice"
						}
					},
					{
						"Name": "Error",
						"Tag": "json:\"error,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Error"
							},
							"Kind": "ptr"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ActionsByReceiver"
			},
			"github.com/juju/juju/apiserver/params#ActionsByReceivers": {
				"Fields": [
					{
						"Name": "Actions",
						"Tag": "json:\"actions,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#ActionsByReceiver"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ActionsByReceivers"
			},
			"github.com/juju/juju/apiserver/params#AddApplicationUnits": {
				"Fields": [
					{
						"Name": "ApplicationName",
						"Tag": "json:\"application\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "NumUnits",
						"Tag": "json:\"num-units\"",
						"Type": {
							"Kind": "int",
							"Name": "int"
						}
					},
					{
						"Name": "Placement",
						"Tag": "json:\"placement\"",
						"Type": {
							"Elem": {
								"Elem": {
									"Name": "github.com/juju/juju/instance#Placement"
								},
								"Kind": "ptr"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#AddApplicationUnits"
			},
			"github.com/juju/juju/apiserver/params#AddApplicationUnitsResults": {
				"Fields": [
					{
						"Name": "Units",
						"Tag": "json:\"units\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#AddApplicationUnitsResults"
			},
			"github.com/juju/juju/apiserver/params#AddCharm": {
				"Fields": [
					{
						"Name": "URL",
						"Tag": "json:\"url\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Channel",
						"Tag": "json:\"channel\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#AddCharm"
			},
			"github.com/juju/juju/apiserver/params#AddCharmWithAuthorization": {
				"Fields": [
					{
						"Name": "URL",
						"Tag": "json:\"url\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Channel",
						"Tag": "json:\"channel\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "CharmStoreMacaroon",
						"Tag": "json:\"macaroon\"",
						"Type": {
							"Elem": {
								"Name": "gopkg.in/macaroon.v1#Macaroon"
							},
							"Kind": "ptr"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#AddCharmWithAuthorization"
			},
			"github.com/juju/juju/apiserver/params#AddMachineParams": {
				"Fields": [
					{
						"Name": "Series",
						"Tag": "json:\"series\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Constraints",
						"Tag": "json:\"constraints\"",
						"Type": {
							"Name": "github.com/juju/juju/constraints#Value"
						}
					},
					{
						"Name": "Jobs",
						"Tag": "json:\"jobs\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/state/multiwatcher#MachineJob"
							},
							"Kind": "slice"
						}
					},
					{
						"Name": "Disks",
						"Tag": "json:\"disks,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/storage#Constraints"
							},
							"Kind": "slice"
						}
					},
					{
						"Name": "Placement",
						"Tag": "json:\"placement,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/instance#Placement"
							},
							"Kind": "ptr"
						}
					},
					{
						"Name": "ParentId",
						"Tag": "json:\"parent-id\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "ContainerType",
						"Tag": "json:\"container-type\"",
						"Type": {
							"Name": "github.com/juju/juju/instance#ContainerType"
						}
					},
					{
						"Name": "InstanceId",
						"Tag": "json:\"instance-id\"",
						"Type": {
							"Name": "github.com/juju/juju/instance#Id"
						}
					},
					{
						"Name": "Nonce",
						"Tag": "json:\"nonce\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "HardwareCharacteristics",
						"Tag": "json:\"hardware-characteristics\"",
						"Type": {
							"Name": "github.com/juju/juju/instance#HardwareCharacteristics"
						}
					},
					{
						"Name": "Addrs",
						"Tag": "json:\"addresses\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Address"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#AddMachineParams"
			},
			"github.com/juju/juju/apiserver/params#AddMachines": {
				"Fields": [
					{
						"Name": "MachineParams",
						"Tag": "json:\"params\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#AddMachineParams"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#AddMachines"
			},
			"github.com/juju/juju/apiserver/params#AddMachinesResult": {
				"Fields": [
					{
						"Name": "Machine",
						"Tag": "json:\"machine\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Error",
						"Tag": "json:\"error,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Error"
							},
							"Kind": "ptr"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#AddMachinesResult"
			},
			"github.com/juju/juju/apiserver/params#AddMachinesResults": {
				"Fields": [
					{
						"Name": "Machines",
						"Tag": "json:\"machines\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#AddMachinesResult"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#AddMachinesResults"
			},
			"github.com/juju/juju/apiserver/params#AddRelation": {
				"Fields": [
					{
						"Name": "Endpoints",
						"Tag": "json:\"endpoints\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#AddRelation"
			},
			"github.com/juju/juju/apiserver/params#AddRelationResults": {
				"Fields": [
					{
						"Name": "Endpoints",
						"Tag": "json:\"endpoints\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#CharmRelation"
							},
							"Key": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "map"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#AddRelationResults"
			},
			"github.com/juju/juju/apiserver/params#AddSubnetParams": {
				"Fields": [
					{
						"Name": "SubnetTag",
						"Tag": "json:\"subnet-tag,omitempty\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "SubnetProviderId",
						"Tag": "json:\"subnet-provider-id,omitempty\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "SpaceTag",
						"Tag": "json:\"space-tag\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Zones",
						"Tag": "json:\"zones,omitempty\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#AddSubnetParams"
			},
			"github.com/juju/juju/apiserver/params#AddSubnetsParams": {
				"Fields": [
					{
						"Name": "Subnets",
						"Tag": "json:\"subnets\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#AddSubnetParams"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#AddSubnetsParams"
			},
			"github.com/juju/juju/apiserver/params#AddUser": {
				"Fields": [
					{
						"Name": "Username",
						"Tag": "json:\"username\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "DisplayName",
						"Tag": "json:\"display-name\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "SharedModelTags",
						"Tag": "json:\"shared-model-tags\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "slice"
						}
					},
					{
						"Name": "Password",
						"Tag": "json:\"password,omitempty\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "ModelAccess",
						"Tag": "json:\"model-access-permission,omitempty\"",
						"Type": {
							"Name": "github.com/juju/juju/apiserver/params#ModelAccessPermission"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#AddUser"
			},
			"github.com/juju/juju/apiserver/params#AddUserResult": {
				"Fields": [
					{
						"Name": "Tag",
						"Tag": "json:\"tag,omitempty\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "SecretKey",
						"Tag": "json:\"secret-key,omitempty\"",
						"Type": {
							"Elem": {
								"Kind": "uint8",
								"Name": "uint8"
							},
							"Kind": "slice"
						}
					},
					{
						"Name": "Error",
						"Tag": "json:\"error,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Error"
							},
							"Kind": "ptr"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#AddUserResult"
			},
			"github.com/juju/juju/apiserver/params#AddUserResults": {
				"Fields": [
					{
						"Name": "Results",
						"Tag": "json:\"results\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#AddUserResult"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#AddUserResults"
			},
			"github.com/juju/juju/apiserver/params#AddUsers": {
				"Fields": [
					{
						"Name": "Users",
						"Tag": "json:\"users\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#AddUser"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#AddUsers"
			},
			"github.com/juju/juju/apiserver/params#Address": {
				"Fields": [
					{
						"Name": "Value",
						"Tag": "json:\"value\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Type",
						"Tag": "json:\"type\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Scope",
						"Tag": "json:\"scope\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "SpaceName",
						"Tag": "json:\"space-name,omitempty\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Methods": {
					"NetworkAddress": {
						"Name": "NetworkAddress",
						"PtrReceiver": false,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Name": "github.com/juju/juju/network#Address"
								}
							]
						}
					}
				},
				"Name": "github.com/juju/juju/apiserver/params#Address"
			},
			"github.com/juju/juju/apiserver/params#AgentGetEntitiesResult": {
				"Fields": [
					{
						"Name": "Life",
						"Tag": "json:\"life\"",
						"Type": {
							"Name": "github.com/juju/juju/apiserver/params#Life"
						}
					},
					{
						"Name": "Jobs",
						"Tag": "json:\"jobs\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/state/multiwatcher#MachineJob"
							},
							"Kind": "slice"
						}
					},
					{
						"Name": "ContainerType",
						"Tag": "json:\"container-type\"",
						"Type": {
							"Name": "github.com/juju/juju/instance#ContainerType"
						}
					},
					{
						"Name": "Error",
						"Tag": "json:\"error,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Error"
							},
							"Kind": "ptr"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#AgentGetEntitiesResult"
			},
			"github.com/juju/juju/apiserver/params#AgentGetEntitiesResults": {
				"Fields": [
					{
						"Name": "Entities",
						"Tag": "json:\"entities\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#AgentGetEntitiesResult"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#AgentGetEntitiesResults"
			},
			"github.com/juju/juju/apiserver/params#AgentVersionResult": {
				"Fields": [
					{
						"Name": "Version",
						"Tag": "json:\"version\"",
						"Type": {
							"Name": "github.com/juju/version#Number"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#AgentVersionResult"
			},
			"github.com/juju/juju/apiserver/params#AllWatcherId": {
				"Fields": [
					{
						"Name": "AllWatcherId",
						"Tag": "json:\"watcher-id\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#AllWatcherId"
			},
			"github.com/juju/juju/apiserver/params#AllWatcherNextResults": {
				"Fields": [
					{
						"Name": "Deltas",
						"Tag": "json:\"deltas\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/state/multiwatcher#Delta"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#AllWatcherNextResults"
			},
			"github.com/juju/juju/apiserver/params#AnnotationsGetResult": {
				"Fields": [
					{
						"Name": "EntityTag",
						"Tag": "json:\"entity\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Annotations",
						"Tag": "json:\"annotations\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Key": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "map"
						}
					},
					{
						"Name": "Error",
						"Tag": "json:\"error,omitempty\"",
						"Type": {
							"Name": "github.com/juju/juju/apiserver/params#ErrorResult"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#AnnotationsGetResult"
			},
			"github.com/juju/juju/apiserver/params#AnnotationsGetResults": {
				"Fields": [
					{
						"Name": "Results",
						"Tag": "json:\"results\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#AnnotationsGetResult"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#AnnotationsGetResults"
			},
			"github.com/juju/juju/apiserver/params#AnnotationsSet": {
				"Fields": [
					{
						"Name": "Annotations",
						"Tag": "json:\"annotations\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#EntityAnnotations"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#AnnotationsSet"
			},
			"github.com/juju/juju/apiserver/params#ApplicationCharmActionsResult": {
				"Fields": [
					{
						"Name": "ApplicationTag",
						"Tag": "json:\"application-tag,omitempty\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Actions",
						"Tag": "json:\"actions,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#ActionSpec"
							},
							"Key": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "map"
						}
					},
					{
						"Name": "Error",
						"Tag": "json:\"error,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Error"
							},
							"Kind": "ptr"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ApplicationCharmActionsResult"
			},
			"github.com/juju/juju/apiserver/params#ApplicationCharmRelations": {
				"Fields": [
					{
						"Name": "ApplicationName",
						"Tag": "json:\"application\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ApplicationCharmRelations"
			},
			"github.com/juju/juju/apiserver/params#ApplicationCharmRelationsResults": {
				"Fields": [
					{
						"Name": "CharmRelations",
						"Tag": "json:\"charm-relations\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ApplicationCharmRelationsResults"
			},
			"github.com/juju/juju/apiserver/params#ApplicationDeploy": {
				"Fields": [
					{
						"Name": "ApplicationName",
						"Tag": "json:\"application\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Series",
						"Tag": "json:\"series\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "CharmUrl",
						"Tag": "json:\"charm-url\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Channel",
						"Tag": "json:\"channel\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "NumUnits",
						"Tag": "json:\"num-units\"",
						"Type": {
							"Kind": "int",
							"Name": "int"
						}
					},
					{
						"Name": "Config",
						"Tag": "json:\"config,omitempty\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Key": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "map"
						}
					},
					{
						"Name": "ConfigYAML",
						"Tag": "json:\"config-yaml\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Constraints",
						"Tag": "json:\"constraints\"",
						"Type": {
							"Name": "github.com/juju/juju/constraints#Value"
						}
					},
					{
						"Name": "Placement",
						"Tag": "json:\"placement,omitempty\"",
						"Type": {
							"Elem": {
								"Elem": {
									"Name": "github.com/juju/juju/instance#Placement"
								},
								"Kind": "ptr"
							},
							"Kind": "slice"
						}
					},
					{
						"Name": "Storage",
						"Tag": "json:\"storage,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/storage#Constraints"
							},
							"Key": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "map"
						}
					},
					{
						"Name": "EndpointBindings",
						"Tag": "json:\"endpoint-bindings,omitempty\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Key": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "map"
						}
					},
					{
						"Name": "Resources",
						"Tag": "json:\"resources,omitempty\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Key": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "map"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ApplicationDeploy"
			},
			"github.com/juju/juju/apiserver/params#ApplicationDestroy": {
				"Fields": [
					{
						"Name": "ApplicationName",
						"Tag": "json:\"application\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ApplicationDestroy"
			},
			"github.com/juju/juju/apiserver/params#ApplicationExpose": {
				"Fields": [
					{
						"Name": "ApplicationName",
						"Tag": "json:\"application\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ApplicationExpose"
			},
			"github.com/juju/juju/apiserver/params#ApplicationGet": {
				"Fields": [
					{
						"Name": "ApplicationName",
						"Tag": "json:\"application\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ApplicationGet"
			},
			"github.com/juju/juju/apiserver/params#ApplicationGetResults": {
				"Fields": [
					{
						"Name": "Application",
						"Tag": "json:\"application\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Charm",
						"Tag": "json:\"charm\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Config",
						"Tag": "json:\"config\"",
						"Type": {
							"Elem": {
								"Kind": "interface"
							},
							"Key": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "map"
						}
					},
					{
						"Name": "Constraints",
						"Tag": "json:\"constraints\"",
						"Type": {
							"Name": "github.com/juju/juju/constraints#Value"
						}
					},
					{
						"Name": "Series",
						"Tag": "json:\"series\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ApplicationGetResults"
			},
			"github.com/juju/juju/apiserver/params#ApplicationMetricCredential": {
				"Fields": [
					{
						"Name": "ApplicationName",
						"Tag": "json:\"application\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "MetricCredentials",
						"Tag": "json:\"metrics-credentials\"",
						"Type": {
							"Elem": {
								"Kind": "uint8",
								"Name": "uint8"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ApplicationMetricCredential"
			},
			"github.com/juju/juju/apiserver/params#ApplicationMetricCredentials": {
				"Fields": [
					{
						"Name": "Creds",
						"Tag": "json:\"creds\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#ApplicationMetricCredential"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ApplicationMetricCredentials"
			},
			"github.com/juju/juju/apiserver/params#ApplicationSet": {
				"Fields": [
					{
						"Name": "ApplicationName",
						"Tag": "json:\"application\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Options",
						"Tag": "json:\"options\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Key": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "map"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ApplicationSet"
			},
			"github.com/juju/juju/apiserver/params#ApplicationSetCharm": {
				"Fields": [
					{
						"Name": "ApplicationName",
						"Tag": "json:\"application\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "CharmUrl",
						"Tag": "json:\"charm-url\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Channel",
						"Tag": "json:\"channel\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "ForceUnits",
						"Tag": "json:\"force-units\"",
						"Type": {
							"Kind": "bool",
							"Name": "bool"
						}
					},
					{
						"Name": "ForceSeries",
						"Tag": "json:\"force-series\"",
						"Type": {
							"Kind": "bool",
							"Name": "bool"
						}
					},
					{
						"Name": "ResourceIDs",
						"Tag": "json:\"resource-ids,omitempty\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Key": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "map"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ApplicationSetCharm"
			},
			"github.com/juju/juju/apiserver/params#ApplicationStatus": {
				"Fields": [
					{
						"Name": "Err",
						"Tag": "json:\"err,omitempty\"",
						"Type": {
							"Kind": "interface",
							"Methods": {
								"Error": {
									"Name": "Error",
									"PtrReceiver": false,
									"Type": {
										"Kind": "func",
										"Out": [
											{
												"Kind": "string",
												"Name": "string"
											}
										]
									}
								}
							},
							"Name": "error"
						}
					},
					{
						"Name": "Charm",
						"Tag": "json:\"charm\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Series",
						"Tag": "json:\"series\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Exposed",
						"Tag": "json:\"exposed\"",
						"Type": {
							"Kind": "bool",
							"Name": "bool"
						}
					},
					{
						"Name": "Life",
						"Tag": "json:\"life\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Relations",
						"Tag": "json:\"relations\"",
						"Type": {
							"Elem": {
								"Elem": {
									"Kind": "string",
									"Name": "string"
								},
								"Kind": "slice"
							},
							"Key": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "map"
						}
					},
					{
						"Name": "CanUpgradeTo",
						"Tag": "json:\"can-upgrade-to\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "SubordinateTo",
						"Tag": "json:\"subordinate-to\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "slice"
						}
					},
					{
						"Name": "Units",
						"Tag": "json:\"units\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#UnitStatus"
							},
							"Key": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "map"
						}
					},
					{
						"Name": "MeterStatuses",
						"Tag": "json:\"meter-statuses\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#MeterStatus"
							},
							"Key": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "map"
						}
					},
					{
						"Name": "Status",
						"Tag": "json:\"status\"",
						"Type": {
							"Name": "github.com/juju/juju/apiserver/params#DetailedStatus"
						}
					},
					{
						"Name": "WorkloadVersion",
						"Tag": "json:\"workload-version\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ApplicationStatus"
			},
			"github.com/juju/juju/apiserver/params#ApplicationStatusResult": {
				"Fields": [
					{
						"Name": "Application",
						"Tag": "json:\"application\"",
						"Type": {
							"Name": "github.com/juju/juju/apiserver/params#StatusResult"
						}
					},
					{
						"Name": "Units",
						"Tag": "json:\"units\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#StatusResult"
							},
							"Key": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "map"
						}
					},
					{
						"Name": "Error",
						"Tag": "json:\"error,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Error"
							},
							"Kind": "ptr"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ApplicationStatusResult"
			},
			"github.com/juju/juju/apiserver/params#ApplicationStatusResults": {
				"Fields": [
					{
						"Name": "Results",
						"Tag": "json:\"results\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#ApplicationStatusResult"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ApplicationStatusResults"
			},
			"github.com/juju/juju/apiserver/params#ApplicationUnexpose": {
				"Fields": [
					{
						"Name": "ApplicationName",
						"Tag": "json:\"application\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ApplicationUnexpose"
			},
			"github.com/juju/juju/apiserver/params#ApplicationUnset": {
				"Fields": [
					{
						"Name": "ApplicationName",
						"Tag": "json:\"application\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Options",
						"Tag": "json:\"options\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ApplicationUnset"
			},
			"github.com/juju/juju/apiserver/params#ApplicationUpdate": {
				"Fields": [
					{
						"Name": "ApplicationName",
						"Tag": "json:\"application\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "CharmUrl",
						"Tag": "json:\"charm-url\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "ForceCharmUrl",
						"Tag": "json:\"force-charm-url\"",
						"Type": {
							"Kind": "bool",
							"Name": "bool"
						}
					},
					{
						"Name": "ForceSeries",
						"Tag": "json:\"force-series\"",
						"Type": {
							"Kind": "bool",
							"Name": "bool"
						}
					},
					{
						"Name": "MinUnits",
						"Tag": "json:\"min-units,omitempty\"",
						"Type": {
							"Elem": {
								"Kind": "int",
								"Name": "int"
							},
							"Kind": "ptr"
						}
					},
					{
						"Name": "SettingsStrings",
						"Tag": "json:\"settings,omitempty\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Key": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "map"
						}
					},
					{
						"Name": "SettingsYAML",
						"Tag": "json:\"settings-yaml\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Constraints",
						"Tag": "json:\"constraints,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/constraints#Value"
							},
							"Kind": "ptr"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ApplicationUpdate"
			},
			"github.com/juju/juju/apiserver/params#ApplicationsCharmActionsResults": {
				"Fields": [
					{
						"Name": "Results",
						"Tag": "json:\"results,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#ApplicationCharmActionsResult"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ApplicationsCharmActionsResults"
			},
			"github.com/juju/juju/apiserver/params#ApplicationsDeploy": {
				"Fields": [
					{
						"Name": "Applications",
						"Tag": "json:\"applications\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#ApplicationDeploy"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ApplicationsDeploy"
			},
			"github.com/juju/juju/apiserver/params#AuthUserInfo": {
				"Fields": [
					{
						"Name": "DisplayName",
						"Tag": "json:\"display-name\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Identity",
						"Tag": "json:\"identity\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "LastConnection",
						"Tag": "json:\"last-connection,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "time#Time"
							},
							"Kind": "ptr"
						}
					},
					{
						"Name": "Credentials",
						"Tag": "json:\"credentials,omitempty\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "ptr"
						}
					},
					{
						"Name": "ReadOnly",
						"Tag": "json:\"read-only\"",
						"Type": {
							"Kind": "bool",
							"Name": "bool"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#AuthUserInfo"
			},
			"github.com/juju/juju/apiserver/params#BackupsCreateArgs": {
				"Fields": [
					{
						"Name": "Notes",
						"Tag": "json:\"notes\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#BackupsCreateArgs"
			},
			"github.com/juju/juju/apiserver/params#BackupsInfoArgs": {
				"Fields": [
					{
						"Name": "ID",
						"Tag": "json:\"id\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#BackupsInfoArgs"
			},
			"github.com/juju/juju/apiserver/params#BackupsListArgs": {
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#BackupsListArgs"
			},
			"github.com/juju/juju/apiserver/params#BackupsListResult": {
				"Fields": [
					{
						"Name": "List",
						"Tag": "json:\"list\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#BackupsMetadataResult"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#BackupsListResult"
			},
			"github.com/juju/juju/apiserver/params#BackupsMetadataResult": {
				"Fields": [
					{
						"Name": "ID",
						"Tag": "json:\"id\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Checksum",
						"Tag": "json:\"checksum\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "ChecksumFormat",
						"Tag": "json:\"checksum-format\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Size",
						"Tag": "json:\"size\"",
						"Type": {
							"Kind": "int64",
							"Name": "int64"
						}
					},
					{
						"Name": "Stored",
						"Tag": "json:\"stored\"",
						"Type": {
							"Name": "time#Time"
						}
					},
					{
						"Name": "Started",
						"Tag": "json:\"started\"",
						"Type": {
							"Name": "time#Time"
						}
					},
					{
						"Name": "Finished",
						"Tag": "json:\"finished\"",
						"Type": {
							"Name": "time#Time"
						}
					},
					{
						"Name": "Notes",
						"Tag": "json:\"notes\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Model",
						"Tag": "json:\"model\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Machine",
						"Tag": "json:\"machine\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Hostname",
						"Tag": "json:\"hostname\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Version",
						"Tag": "json:\"version\"",
						"Type": {
							"Name": "github.com/juju/version#Number"
						}
					},
					{
						"Name": "Series",
						"Tag": "json:\"series\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "CACert",
						"Tag": "json:\"ca-cert\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "CAPrivateKey",
						"Tag": "json:\"ca-private-key\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#BackupsMetadataResult"
			},
			"github.com/juju/juju/apiserver/params#BackupsRemoveArgs": {
				"Fields": [
					{
						"Name": "ID",
						"Tag": "json:\"id\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#BackupsRemoveArgs"
			},
			"github.com/juju/juju/apiserver/params#Block": {
				"Fields": [
					{
						"Name": "Id",
						"Tag": "json:\"id\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Tag",
						"Tag": "json:\"tag\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Type",
						"Tag": "json:\"type\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Message",
						"Tag": "json:\"message,omitempty\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#Block"
			},
			"github.com/juju/juju/apiserver/params#BlockDeviceResult": {
				"Fields": [
					{
						"Name": "Result",
						"Tag": "json:\"result\"",
						"Type": {
							"Name": "github.com/juju/juju/storage#BlockDevice"
						}
					},
					{
						"Name": "Error",
						"Tag": "json:\"error,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Error"
							},
							"Kind": "ptr"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#BlockDeviceResult"
			},
			"github.com/juju/juju/apiserver/params#BlockDeviceResults": {
				"Fields": [
					{
						"Name": "Results",
						"Tag": "json:\"results,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#BlockDeviceResult"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#BlockDeviceResults"
			},
			"github.com/juju/juju/apiserver/params#BlockResult": {
				"Fields": [
					{
						"Name": "Result",
						"Tag": "json:\"result\"",
						"Type": {
							"Name": "github.com/juju/juju/apiserver/params#Block"
						}
					},
					{
						"Name": "Error",
						"Tag": "json:\"error,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Error"
							},
							"Kind": "ptr"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#BlockResult"
			},
			"github.com/juju/juju/apiserver/params#BlockResults": {
				"Fields": [
					{
						"Name": "Results",
						"Tag": "json:\"results,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#BlockResult"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#BlockResults"
			},
			"github.com/juju/juju/apiserver/params#BlockSwitchParams": {
				"Fields": [
					{
						"Name": "Type",
						"Tag": "json:\"type\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Message",
						"Tag": "json:\"message,omitempty\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#BlockSwitchParams"
			},
			"github.com/juju/juju/apiserver/params#BoolResult": {
				"Fields": [
					{
						"Name": "Error",
						"Tag": "json:\"error,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Error"
							},
							"Kind": "ptr"
						}
					},
					{
						"Name": "Result",
						"Tag": "json:\"result\"",
						"Type": {
							"Kind": "bool",
							"Name": "bool"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#BoolResult"
			},
			"github.com/juju/juju/apiserver/params#BoolResults": {
				"Fields": [
					{
						"Name": "Results",
						"Tag": "json:\"results\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#BoolResult"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#BoolResults"
			},
			"github.com/juju/juju/apiserver/params#BundleChangesChange": {
				"Fields": [
					{
						"Name": "Id",
						"Tag": "json:\"id\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Method",
						"Tag": "json:\"method\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Args",
						"Tag": "json:\"args\"",
						"Type": {
							"Elem": {
								"Kind": "interface"
							},
							"Kind": "slice"
						}
					},
					{
						"Name": "Requires",
						"Tag": "json:\"requires\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#BundleChangesChange"
			},
			"github.com/juju/juju/apiserver/params#BytesResult": {
				"Fields": [
					{
						"Name": "Result",
						"Tag": "json:\"result\"",
						"Type": {
							"Elem": {
								"Kind": "uint8",
								"Name": "uint8"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#BytesResult"
			},
			"github.com/juju/juju/apiserver/params#CharmActionSpec": {
				"Fields": [
					{
						"Name": "Description",
						"Tag": "json:\"description\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Params",
						"Tag": "json:\"params\"",
						"Type": {
							"Elem": {
								"Kind": "interface"
							},
							"Key": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "map"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#CharmActionSpec"
			},
			"github.com/juju/juju/apiserver/params#CharmActions": {
				"Fields": [
					{
						"Name": "ActionSpecs",
						"Tag": "json:\"specs,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#CharmActionSpec"
							},
							"Key": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "map"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#CharmActions"
			},
			"github.com/juju/juju/apiserver/params#CharmInfo": {
				"Fields": [
					{
						"Name": "Revision",
						"Tag": "json:\"revision\"",
						"Type": {
							"Kind": "int",
							"Name": "int"
						}
					},
					{
						"Name": "URL",
						"Tag": "json:\"url\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Config",
						"Tag": "json:\"config\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#CharmOption"
							},
							"Key": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "map"
						}
					},
					{
						"Name": "Meta",
						"Tag": "json:\"meta,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#CharmMeta"
							},
							"Kind": "ptr"
						}
					},
					{
						"Name": "Actions",
						"Tag": "json:\"actions,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#CharmActions"
							},
							"Kind": "ptr"
						}
					},
					{
						"Name": "Metrics",
						"Tag": "json:\"metrics,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#CharmMetrics"
							},
							"Kind": "ptr"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#CharmInfo"
			},
			"github.com/juju/juju/apiserver/params#CharmMeta": {
				"Fields": [
					{
						"Name": "Name",
						"Tag": "json:\"name\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Summary",
						"Tag": "json:\"summary\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Description",
						"Tag": "json:\"description\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Subordinate",
						"Tag": "json:\"subordinate\"",
						"Type": {
							"Kind": "bool",
							"Name": "bool"
						}
					},
					{
						"Name": "Provides",
						"Tag": "json:\"provides,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#CharmRelation"
							},
							"Key": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "map"
						}
					},
					{
						"Name": "Requires",
						"Tag": "json:\"requires,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#CharmRelation"
							},
							"Key": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "map"
						}
					},
					{
						"Name": "Peers",
						"Tag": "json:\"peers,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#CharmRelation"
							},
							"Key": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "map"
						}
					},
					{
						"Name": "ExtraBindings",
						"Tag": "json:\"extra-bindings,omitempty\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Key": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "map"
						}
					},
					{
						"Name": "Categories",
						"Tag": "json:\"categories,omitempty\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "slice"
						}
					},
					{
						"Name": "Tags",
						"Tag": "json:\"tags,omitempty\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "slice"
						}
					},
					{
						"Name": "Series",
						"Tag": "json:\"series,omitempty\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "slice"
						}
					},
					{
						"Name": "Storage",
						"Tag": "json:\"storage,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#CharmStorage"
							},
							"Key": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "map"
						}
					},
					{
						"Name": "PayloadClasses",
						"Tag": "json:\"payload-classes,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#CharmPayloadClass"
							},
							"Key": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "map"
						}
					},
					{
						"Name": "Resources",
						"Tag": "json:\"resources,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#CharmResourceMeta"
							},
							"Key": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "map"
						}
					},
					{
						"Name": "Terms",
						"Tag": "json:\"terms,omitempty\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "slice"
						}
					},
					{
						"Name": "MinJujuVersion",
						"Tag": "json:\"min-juju-version,omitempty\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#CharmMeta"
			},
			"github.com/juju/juju/apiserver/params#CharmMetric": {
				"Fields": [
					{
						"Name": "Type",
						"Tag": "json:\"type\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Description",
						"Tag": "json:\"description\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#CharmMetric"
			},
			"github.com/juju/juju/apiserver/params#CharmMetrics": {
				"Fields": [
					{
						"Name": "Metrics",
						"Tag": "json:\"metrics\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#CharmMetric"
							},
							"Key": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "map"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#CharmMetrics"
			},
			"github.com/juju/juju/apiserver/params#CharmOption": {
				"Fields": [
					{
						"Name": "Type",
						"Tag": "json:\"type\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Description",
						"Tag": "json:\"description,omitempty\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Default",
						"Tag": "json:\"default,omitempty\"",
						"Type": {
							"Kind": "interface"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#CharmOption"
			},
			"github.com/juju/juju/apiserver/params#CharmPayloadClass": {
				"Fields": [
					{
						"Name": "Name",
						"Tag": "json:\"name\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Type",
						"Tag": "json:\"type\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#CharmPayloadClass"
			},
			"github.com/juju/juju/apiserver/params#CharmRelation": {
				"Fields": [
					{
						"Name": "Name",
						"Tag": "json:\"name\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Role",
						"Tag": "json:\"role\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Interface",
						"Tag": "json:\"interface\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Optional",
						"Tag": "json:\"optional\"",
						"Type": {
							"Kind": "bool",
							"Name": "bool"
						}
					},
					{
						"Name": "Limit",
						"Tag": "json:\"limit\"",
						"Type": {
							"Kind": "int",
							"Name": "int"
						}
					},
					{
						"Name": "Scope",
						"Tag": "json:\"scope\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#CharmRelation"
			},
			"github.com/juju/juju/apiserver/params#CharmResourceMeta": {
				"Fields": [
					{
						"Name": "Name",
						"Tag": "json:\"name\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Type",
						"Tag": "json:\"type\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Path",
						"Tag": "json:\"path\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Description",
						"Tag": "json:\"description\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#CharmResourceMeta"
			},
			"github.com/juju/juju/apiserver/params#CharmStorage": {
				"Fields": [
					{
						"Name": "Name",
						"Tag": "json:\"name\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Description",
						"Tag": "json:\"description\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Type",
						"Tag": "json:\"type\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Shared",
						"Tag": "json:\"shared\"",
						"Type": {
							"Kind": "bool",
							"Name": "bool"
						}
					},
					{
						"Name": "ReadOnly",
						"Tag": "json:\"read-only\"",
						"Type": {
							"Kind": "bool",
							"Name": "bool"
						}
					},
					{
						"Name": "CountMin",
						"Tag": "json:\"count-min\"",
						"Type": {
							"Kind": "int",
							"Name": "int"
						}
					},
					{
						"Name": "CountMax",
						"Tag": "json:\"count-max\"",
						"Type": {
							"Kind": "int",
							"Name": "int"
						}
					},
					{
						"Name": "MinimumSize",
						"Tag": "json:\"minimum-size\"",
						"Type": {
							"Kind": "uint64",
							"Name": "uint64"
						}
					},
					{
						"Name": "Location",
						"Tag": "json:\"location,omitempty\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Properties",
						"Tag": "json:\"properties,omitempty\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#CharmStorage"
			},
			"github.com/juju/juju/apiserver/params#CharmURL": {
				"Fields": [
					{
						"Name": "URL",
						"Tag": "json:\"url\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#CharmURL"
			},
			"github.com/juju/juju/apiserver/params#CharmURLs": {
				"Fields": [
					{
						"Name": "URLs",
						"Tag": "json:\"urls\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#CharmURL"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#CharmURLs"
			},
			"github.com/juju/juju/apiserver/params#CharmsList": {
				"Fields": [
					{
						"Name": "Names",
						"Tag": "json:\"names\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#CharmsList"
			},
			"github.com/juju/juju/apiserver/params#CharmsListResult": {
				"Fields": [
					{
						"Name": "CharmURLs",
						"Tag": "json:\"charm-urls\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#CharmsListResult"
			},
			"github.com/juju/juju/apiserver/params#ClaimLeadershipBulkParams": {
				"Fields": [
					{
						"Name": "Params",
						"Tag": "json:\"params\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#ClaimLeadershipParams"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ClaimLeadershipBulkParams"
			},
			"github.com/juju/juju/apiserver/params#ClaimLeadershipBulkResults": {
				"Fields": [
					{
						"Name": "Results",
						"Tag": "json:\"results\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#ErrorResult"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ClaimLeadershipBulkResults"
			},
			"github.com/juju/juju/apiserver/params#ClaimLeadershipParams": {
				"Fields": [
					{
						"Name": "ApplicationTag",
						"Tag": "json:\"application-tag\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "UnitTag",
						"Tag": "json:\"unit-tag\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "DurationSeconds",
						"Tag": "json:\"duration\"",
						"Type": {
							"Kind": "float64",
							"Name": "float64"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ClaimLeadershipParams"
			},
			"github.com/juju/juju/apiserver/params#Cloud": {
				"Fields": [
					{
						"Name": "Type",
						"Tag": "json:\"type\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "AuthTypes",
						"Tag": "json:\"auth-types,omitempty\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "slice"
						}
					},
					{
						"Name": "Endpoint",
						"Tag": "json:\"endpoint,omitempty\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "StorageEndpoint",
						"Tag": "json:\"endpoint,omitempty\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Regions",
						"Tag": "json:\"regions,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#CloudRegion"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#Cloud"
			},
			"github.com/juju/juju/apiserver/params#CloudCredential": {
				"Fields": [
					{
						"Name": "AuthType",
						"Tag": "json:\"auth-type\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Attributes",
						"Tag": "json:\"attrs,omitempty\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Key": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "map"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#CloudCredential"
			},
			"github.com/juju/juju/apiserver/params#CloudCredentialsResult": {
				"Fields": [
					{
						"Name": "Error",
						"Tag": "json:\"error,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Error"
							},
							"Kind": "ptr"
						}
					},
					{
						"Name": "Credentials",
						"Tag": "json:\"credentials,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#CloudCredential"
							},
							"Key": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "map"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#CloudCredentialsResult"
			},
			"github.com/juju/juju/apiserver/params#CloudCredentialsResults": {
				"Fields": [
					{
						"Name": "Results",
						"Tag": "json:\"results,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#CloudCredentialsResult"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#CloudCredentialsResults"
			},
			"github.com/juju/juju/apiserver/params#CloudDefaults": {
				"Fields": [
					{
						"Name": "CloudTag",
						"Tag": "json:\"cloud-tag\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "CloudRegion",
						"Tag": "json:\"region,omitempty\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "CloudCredential",
						"Tag": "json:\"credential,omitempty\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#CloudDefaults"
			},
			"github.com/juju/juju/apiserver/params#CloudDefaultsResult": {
				"Fields": [
					{
						"Name": "Result",
						"Tag": "json:\"result,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#CloudDefaults"
							},
							"Kind": "ptr"
						}
					},
					{
						"Name": "Error",
						"Tag": "json:\"error\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Error"
							},
							"Kind": "ptr"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#CloudDefaultsResult"
			},
			"github.com/juju/juju/apiserver/params#CloudDefaultsResults": {
				"Fields": [
					{
						"Name": "Results",
						"Tag": "json:\"results,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#CloudDefaultsResult"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#CloudDefaultsResults"
			},
			"github.com/juju/juju/apiserver/params#CloudImageMetadata": {
				"Fields": [
					{
						"Name": "ImageId",
						"Tag": "json:\"image-id\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Stream",
						"Tag": "json:\"stream,omitempty\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Region",
						"Tag": "json:\"region\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Version",
						"Tag": "json:\"version\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Series",
						"Tag": "json:\"series\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Arch",
						"Tag": "json:\"arch\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "VirtType",
						"Tag": "json:\"virt-type,omitempty\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "RootStorageType",
						"Tag": "json:\"root-storage-type,omitempty\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "RootStorageSize",
						"Tag": "json:\"root-storage-size,omitempty\"",
						"Type": {
							"Elem": {
								"Kind": "uint64",
								"Name": "uint64"
							},
							"Kind": "ptr"
						}
					},
					{
						"Name": "Source",
						"Tag": "json:\"source\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Priority",
						"Tag": "json:\"priority\"",
						"Type": {
							"Kind": "int",
							"Name": "int"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#CloudImageMetadata"
			},
			"github.com/juju/juju/apiserver/params#CloudImageMetadataList": {
				"Fields": [
					{
						"Name": "Metadata",
						"Tag": "json:\"metadata,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#CloudImageMetadata"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#CloudImageMetadataList"
			},
			"github.com/juju/juju/apiserver/params#CloudRegion": {
				"Fields": [
					{
						"Name": "Name",
						"Tag": "json:\"name\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Endpoint",
						"Tag": "json:\"endpoint,omitempty\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "StorageEndpoint",
						"Tag": "json:\"endpoint,omitempty\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#CloudRegion"
			},
			"github.com/juju/juju/apiserver/params#CloudResult": {
				"Fields": [
					{
						"Name": "Cloud",
						"Tag": "json:\"cloud,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Cloud"
							},
							"Kind": "ptr"
						}
					},
					{
						"Name": "Error",
						"Tag": "json:\"error,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Error"
							},
							"Kind": "ptr"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#CloudResult"
			},
			"github.com/juju/juju/apiserver/params#CloudResults": {
				"Fields": [
					{
						"Name": "Results",
						"Tag": "json:\"results,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#CloudResult"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#CloudResults"
			},
			"github.com/juju/juju/apiserver/params#ConfigSettings": {
				"Elem": {
					"Kind": "interface"
				},
				"Key": {
					"Kind": "string",
					"Name": "string"
				},
				"Kind": "map",
				"Name": "github.com/juju/juju/apiserver/params#ConfigSettings"
			},
			"github.com/juju/juju/apiserver/params#ConfigSettingsResult": {
				"Fields": [
					{
						"Name": "Error",
						"Tag": "json:\"error,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Error"
							},
							"Kind": "ptr"
						}
					},
					{
						"Name": "Settings",
						"Tag": "json:\"settings\"",
						"Type": {
							"Name": "github.com/juju/juju/apiserver/params#ConfigSettings"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ConfigSettingsResult"
			},
			"github.com/juju/juju/apiserver/params#ConfigSettingsResults": {
				"Fields": [
					{
						"Name": "Results",
						"Tag": "json:\"results\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#ConfigSettingsResult"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ConfigSettingsResults"
			},
			"github.com/juju/juju/apiserver/params#ConfigValue": {
				"Fields": [
					{
						"Name": "Value",
						"Tag": "json:\"value\"",
						"Type": {
							"Kind": "interface"
						}
					},
					{
						"Name": "Source",
						"Tag": "json:\"source\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ConfigValue"
			},
			"github.com/juju/juju/apiserver/params#ConstraintsResult": {
				"Fields": [
					{
						"Name": "Error",
						"Tag": "json:\"error,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Error"
							},
							"Kind": "ptr"
						}
					},
					{
						"Name": "Constraints",
						"Tag": "json:\"constraints\"",
						"Type": {
							"Name": "github.com/juju/juju/constraints#Value"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ConstraintsResult"
			},
			"github.com/juju/juju/apiserver/params#ConstraintsResults": {
				"Fields": [
					{
						"Name": "Results",
						"Tag": "json:\"results\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#ConstraintsResult"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ConstraintsResults"
			},
			"github.com/juju/juju/apiserver/params#ContainerConfig": {
				"Fields": [
					{
						"Name": "ProviderType",
						"Tag": "json:\"provider-type\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "AuthorizedKeys",
						"Tag": "json:\"authorized-keys\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "SSLHostnameVerification",
						"Tag": "json:\"ssl-hostname-verification\"",
						"Type": {
							"Kind": "bool",
							"Name": "bool"
						}
					},
					{
						"Name": "Proxy",
						"Tag": "json:\"proxy\"",
						"Type": {
							"Name": "github.com/juju/utils/proxy#Settings"
						}
					},
					{
						"Name": "AptProxy",
						"Tag": "json:\"apt-proxy\"",
						"Type": {
							"Name": "github.com/juju/utils/proxy#Settings"
						}
					},
					{
						"Name": "AptMirror",
						"Tag": "json:\"apt-mirror\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Anonymous": true,
						"Name": "UpdateBehavior",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#UpdateBehavior"
							},
							"Kind": "ptr"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ContainerConfig"
			},
			"github.com/juju/juju/apiserver/params#ContainerManagerConfig": {
				"Fields": [
					{
						"Name": "ManagerConfig",
						"Tag": "json:\"config\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Key": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "map"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ContainerManagerConfig"
			},
			"github.com/juju/juju/apiserver/params#ContainerManagerConfigParams": {
				"Fields": [
					{
						"Name": "Type",
						"Tag": "json:\"type\"",
						"Type": {
							"Name": "github.com/juju/juju/instance#ContainerType"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ContainerManagerConfigParams"
			},
			"github.com/juju/juju/apiserver/params#ControllerConfig": {
				"Elem": {
					"Kind": "interface"
				},
				"Key": {
					"Kind": "string",
					"Name": "string"
				},
				"Kind": "map",
				"Name": "github.com/juju/juju/apiserver/params#ControllerConfig"
			},
			"github.com/juju/juju/apiserver/params#ControllerConfigResult": {
				"Fields": [
					{
						"Name": "Config",
						"Tag": "json:\"config\"",
						"Type": {
							"Name": "github.com/juju/juju/apiserver/params#ControllerConfig"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ControllerConfigResult"
			},
			"github.com/juju/juju/apiserver/params#ControllersChangeResult": {
				"Fields": [
					{
						"Name": "Result",
						"Tag": "json:\"result\"",
						"Type": {
							"Name": "github.com/juju/juju/apiserver/params#ControllersChanges"
						}
					},
					{
						"Name": "Error",
						"Tag": "json:\"error,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Error"
							},
							"Kind": "ptr"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ControllersChangeResult"
			},
			"github.com/juju/juju/apiserver/params#ControllersChangeResults": {
				"Fields": [
					{
						"Name": "Results",
						"Tag": "json:\"results\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#ControllersChangeResult"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ControllersChangeResults"
			},
			"github.com/juju/juju/apiserver/params#ControllersChanges": {
				"Fields": [
					{
						"Name": "Added",
						"Tag": "json:\"added,omitempty\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "slice"
						}
					},
					{
						"Name": "Maintained",
						"Tag": "json:\"maintained,omitempty\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "slice"
						}
					},
					{
						"Name": "Removed",
						"Tag": "json:\"removed,omitempty\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "slice"
						}
					},
					{
						"Name": "Promoted",
						"Tag": "json:\"promoted,omitempty\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "slice"
						}
					},
					{
						"Name": "Demoted",
						"Tag": "json:\"demoted,omitempty\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "slice"
						}
					},
					{
						"Name": "Converted",
						"Tag": "json:\"converted,omitempty\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ControllersChanges"
			},
			"github.com/juju/juju/apiserver/params#ControllersSpec": {
				"Fields": [
					{
						"Name": "ModelTag",
						"Tag": "json:\"model-tag\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "NumControllers",
						"Tag": "json:\"num-controllers\"",
						"Type": {
							"Kind": "int",
							"Name": "int"
						}
					},
					{
						"Name": "Constraints",
						"Tag": "json:\"constraints,omitempty\"",
						"Type": {
							"Name": "github.com/juju/juju/constraints#Value"
						}
					},
					{
						"Name": "Series",
						"Tag": "json:\"series,omitempty\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Placement",
						"Tag": "json:\"placement,omitempty\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ControllersSpec"
			},
			"github.com/juju/juju/apiserver/params#ControllersSpecs": {
				"Fields": [
					{
						"Name": "Specs",
						"Tag": "json:\"specs\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#ControllersSpec"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ControllersSpecs"
			},
			"github.com/juju/juju/apiserver/params#CreateSpaceParams": {
				"Fields": [
					{
						"Name": "SubnetTags",
						"Tag": "json:\"subnet-tags\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "slice"
						}
					},
					{
						"Name": "SpaceTag",
						"Tag": "json:\"space-tag\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Public",
						"Tag": "json:\"public\"",
						"Type": {
							"Kind": "bool",
							"Name": "bool"
						}
					},
					{
						"Name": "ProviderId",
						"Tag": "json:\"provider-id,omitempty\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#CreateSpaceParams"
			},
			"github.com/juju/juju/apiserver/params#CreateSpacesParams": {
				"Fields": [
					{
						"Name": "Spaces",
						"Tag": "json:\"spaces\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#CreateSpaceParams"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#CreateSpacesParams"
			},
			"github.com/juju/juju/apiserver/params#DeployerConnectionValues": {
				"Fields": [
					{
						"Name": "StateAddresses",
						"Tag": "json:\"state-addresses\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "slice"
						}
					},
					{
						"Name": "APIAddresses",
						"Tag": "json:\"api-addresses\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#DeployerConnectionValues"
			},
			"github.com/juju/juju/apiserver/params#DestroyApplicationUnits": {
				"Fields": [
					{
						"Name": "UnitNames",
						"Tag": "json:\"unit-names\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#DestroyApplicationUnits"
			},
			"github.com/juju/juju/apiserver/params#DestroyControllerArgs": {
				"Fields": [
					{
						"Name": "DestroyModels",
						"Tag": "json:\"destroy-models\"",
						"Type": {
							"Kind": "bool",
							"Name": "bool"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#DestroyControllerArgs"
			},
			"github.com/juju/juju/apiserver/params#DestroyMachines": {
				"Fields": [
					{
						"Name": "MachineNames",
						"Tag": "json:\"machine-names\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "slice"
						}
					},
					{
						"Name": "Force",
						"Tag": "json:\"force\"",
						"Type": {
							"Kind": "bool",
							"Name": "bool"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#DestroyMachines"
			},
			"github.com/juju/juju/apiserver/params#DestroyRelation": {
				"Fields": [
					{
						"Name": "Endpoints",
						"Tag": "json:\"endpoints\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#DestroyRelation"
			},
			"github.com/juju/juju/apiserver/params#DetailedStatus": {
				"Fields": [
					{
						"Name": "Status",
						"Tag": "json:\"status\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Info",
						"Tag": "json:\"info\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Data",
						"Tag": "json:\"data\"",
						"Type": {
							"Elem": {
								"Kind": "interface"
							},
							"Key": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "map"
						}
					},
					{
						"Name": "Since",
						"Tag": "json:\"since\"",
						"Type": {
							"Elem": {
								"Name": "time#Time"
							},
							"Kind": "ptr"
						}
					},
					{
						"Name": "Kind",
						"Tag": "json:\"kind\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Version",
						"Tag": "json:\"version\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Life",
						"Tag": "json:\"life\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Err",
						"Tag": "json:\"err,omitempty\"",
						"Type": {
							"Kind": "interface",
							"Methods": {
								"Error": {
									"Name": "Error",
									"PtrReceiver": false,
									"Type": {
										"Kind": "func",
										"Out": [
											{
												"Kind": "string",
												"Name": "string"
											}
										]
									}
								}
							},
							"Name": "error"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#DetailedStatus"
			},
			"github.com/juju/juju/apiserver/params#DiscoverSpacesResults": {
				"Fields": [
					{
						"Name": "Results",
						"Tag": "json:\"results\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#ProviderSpace"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#DiscoverSpacesResults"
			},
			"github.com/juju/juju/apiserver/params#DistributionGroupResult": {
				"Fields": [
					{
						"Name": "Error",
						"Tag": "json:\"error,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Error"
							},
							"Kind": "ptr"
						}
					},
					{
						"Name": "Result",
						"Tag": "json:\"result\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/instance#Id"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#DistributionGroupResult"
			},
			"github.com/juju/juju/apiserver/params#DistributionGroupResults": {
				"Fields": [
					{
						"Name": "Results",
						"Tag": "json:\"results\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#DistributionGroupResult"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#DistributionGroupResults"
			},
			"github.com/juju/juju/apiserver/params#EndpointStatus": {
				"Fields": [
					{
						"Name": "ApplicationName",
						"Tag": "json:\"application\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Name",
						"Tag": "json:\"name\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Role",
						"Tag": "json:\"role\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Subordinate",
						"Tag": "json:\"subordinate\"",
						"Type": {
							"Kind": "bool",
							"Name": "bool"
						}
					}
				],
				"Kind": "struct",
				"Methods": {
					"String": {
						"Name": "String",
						"PtrReceiver": true,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Kind": "string",
									"Name": "string"
								}
							]
						}
					}
				},
				"Name": "github.com/juju/juju/apiserver/params#EndpointStatus"
			},
			"github.com/juju/juju/apiserver/params#Entities": {
				"Fields": [
					{
						"Name": "Entities",
						"Tag": "json:\"entities\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Entity"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#Entities"
			},
			"github.com/juju/juju/apiserver/params#EntitiesCharmURL": {
				"Fields": [
					{
						"Name": "Entities",
						"Tag": "json:\"entities\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#EntityCharmURL"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#EntitiesCharmURL"
			},
			"github.com/juju/juju/apiserver/params#EntitiesPortRanges": {
				"Fields": [
					{
						"Name": "Entities",
						"Tag": "json:\"entities\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#EntityPortRange"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#EntitiesPortRanges"
			},
			"github.com/juju/juju/apiserver/params#EntitiesVersion": {
				"Fields": [
					{
						"Name": "AgentTools",
						"Tag": "json:\"agent-tools\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#EntityVersion"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#EntitiesVersion"
			},
			"github.com/juju/juju/apiserver/params#EntitiesWatchResult": {
				"Fields": [
					{
						"Name": "EntitiesWatcherId",
						"Tag": "json:\"watcher-id\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Changes",
						"Tag": "json:\"changes,omitempty\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "slice"
						}
					},
					{
						"Name": "Error",
						"Tag": "json:\"error,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Error"
							},
							"Kind": "ptr"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#EntitiesWatchResult"
			},
			"github.com/juju/juju/apiserver/params#Entity": {
				"Fields": [
					{
						"Name": "Tag",
						"Tag": "json:\"tag\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#Entity"
			},
			"github.com/juju/juju/apiserver/params#EntityAnnotations": {
				"Fields": [
					{
						"Name": "EntityTag",
						"Tag": "json:\"entity\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Annotations",
						"Tag": "json:\"annotations\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Key": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "map"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#EntityAnnotations"
			},
			"github.com/juju/juju/apiserver/params#EntityCharmURL": {
				"Fields": [
					{
						"Name": "Tag",
						"Tag": "json:\"tag\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "CharmURL",
						"Tag": "json:\"charm-url\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#EntityCharmURL"
			},
			"github.com/juju/juju/apiserver/params#EntityMetrics": {
				"Fields": [
					{
						"Name": "Metrics",
						"Tag": "json:\"metrics,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#MetricResult"
							},
							"Kind": "slice"
						}
					},
					{
						"Name": "Error",
						"Tag": "json:\"error,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Error"
							},
							"Kind": "ptr"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#EntityMetrics"
			},
			"github.com/juju/juju/apiserver/params#EntityPassword": {
				"Fields": [
					{
						"Name": "Tag",
						"Tag": "json:\"tag\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Password",
						"Tag": "json:\"password\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#EntityPassword"
			},
			"github.com/juju/juju/apiserver/params#EntityPasswords": {
				"Fields": [
					{
						"Name": "Changes",
						"Tag": "json:\"changes\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#EntityPassword"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#EntityPasswords"
			},
			"github.com/juju/juju/apiserver/params#EntityPortRange": {
				"Fields": [
					{
						"Name": "Tag",
						"Tag": "json:\"tag\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Protocol",
						"Tag": "json:\"protocol\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "FromPort",
						"Tag": "json:\"from-port\"",
						"Type": {
							"Kind": "int",
							"Name": "int"
						}
					},
					{
						"Name": "ToPort",
						"Tag": "json:\"to-port\"",
						"Type": {
							"Kind": "int",
							"Name": "int"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#EntityPortRange"
			},
			"github.com/juju/juju/apiserver/params#EntityStatus": {
				"Fields": [
					{
						"Name": "Status",
						"Tag": "json:\"status\"",
						"Type": {
							"Name": "github.com/juju/juju/status#Status"
						}
					},
					{
						"Name": "Info",
						"Tag": "json:\"info\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Data",
						"Tag": "json:\"data,omitempty\"",
						"Type": {
							"Elem": {
								"Kind": "interface"
							},
							"Key": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "map"
						}
					},
					{
						"Name": "Since",
						"Tag": "json:\"since\"",
						"Type": {
							"Elem": {
								"Name": "time#Time"
							},
							"Kind": "ptr"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#EntityStatus"
			},
			"github.com/juju/juju/apiserver/params#EntityStatusArgs": {
				"Fields": [
					{
						"Name": "Tag",
						"Tag": "json:\"tag\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Status",
						"Tag": "json:\"status\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Info",
						"Tag": "json:\"info\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Data",
						"Tag": "json:\"data\"",
						"Type": {
							"Elem": {
								"Kind": "interface"
							},
							"Key": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "map"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#EntityStatusArgs"
			},
			"github.com/juju/juju/apiserver/params#EntityVersion": {
				"Fields": [
					{
						"Name": "Tag",
						"Tag": "json:\"tag\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Tools",
						"Tag": "json:\"tools\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Version"
							},
							"Kind": "ptr"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#EntityVersion"
			},
			"github.com/juju/juju/apiserver/params#EntityWorkloadVersion": {
				"Fields": [
					{
						"Name": "Tag",
						"Tag": "json:\"tag\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "WorkloadVersion",
						"Tag": "json:\"workload-version\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#EntityWorkloadVersion"
			},
			"github.com/juju/juju/apiserver/params#EntityWorkloadVersions": {
				"Fields": [
					{
						"Name": "Entities",
						"Tag": "json:\"entities\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#EntityWorkloadVersion"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#EntityWorkloadVersions"
			},
			"github.com/juju/juju/apiserver/params#Error": {
				"Fields": [
					{
						"Name": "Message",
						"Tag": "json:\"message\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Code",
						"Tag": "json:\"code\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Info",
						"Tag": "json:\"info,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#ErrorInfo"
							},
							"Kind": "ptr"
						}
					}
				],
				"Kind": "struct",
				"Methods": {
					"Error": {
						"Name": "Error",
						"PtrReceiver": false,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Kind": "string",
									"Name": "string"
								}
							]
						}
					},
					"ErrorCode": {
						"Name": "ErrorCode",
						"PtrReceiver": false,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Kind": "string",
									"Name": "string"
								}
							]
						}
					},
					"GoString": {
						"Name": "GoString",
						"PtrReceiver": false,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Kind": "string",
									"Name": "string"
								}
							]
						}
					}
				},
				"Name": "github.com/juju/juju/apiserver/params#Error"
			},
			"github.com/juju/juju/apiserver/params#ErrorInfo": {
				"Fields": [
					{
						"Name": "Macaroon",
						"Tag": "json:\"macaroon,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "gopkg.in/macaroon.v1#Macaroon"
							},
							"Kind": "ptr"
						}
					},
					{
						"Name": "MacaroonPath",
						"Tag": "json:\"macaroon-path,omitempty\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ErrorInfo"
			},
			"github.com/juju/juju/apiserver/params#ErrorResult": {
				"Fields": [
					{
						"Name": "Error",
						"Tag": "json:\"error,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Error"
							},
							"Kind": "ptr"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ErrorResult"
			},
			"github.com/juju/juju/apiserver/params#ErrorResults": {
				"Fields": [
					{
						"Name": "Results",
						"Tag": "json:\"results\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#ErrorResult"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Methods": {
					"Combine": {
						"Name": "Combine",
						"PtrReceiver": false,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Kind": "interface",
									"Methods": {
										"Error": {
											"Name": "Error",
											"PtrReceiver": false,
											"Type": {
												"Kind": "func",
												"Out": [
													{
														"Kind": "string",
														"Name": "string"
													}
												]
											}
										}
									},
									"Name": "error"
								}
							]
						}
					},
					"OneError": {
						"Name": "OneError",
						"PtrReceiver": false,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Kind": "interface",
									"Methods": {
										"Error": {
											"Name": "Error",
											"PtrReceiver": false,
											"Type": {
												"Kind": "func",
												"Out": [
													{
														"Kind": "string",
														"Name": "string"
													}
												]
											}
										}
									},
									"Name": "error"
								}
							]
						}
					}
				},
				"Name": "github.com/juju/juju/apiserver/params#ErrorResults"
			},
			"github.com/juju/juju/apiserver/params#FacadeVersions": {
				"Fields": [
					{
						"Name": "Name",
						"Tag": "json:\"name\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Versions",
						"Tag": "json:\"versions\"",
						"Type": {
							"Elem": {
								"Kind": "int",
								"Name": "int"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#FacadeVersions"
			},
			"github.com/juju/juju/apiserver/params#Filesystem": {
				"Fields": [
					{
						"Name": "FilesystemTag",
						"Tag": "json:\"filesystem-tag\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "VolumeTag",
						"Tag": "json:\"volume-tag,omitempty\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Info",
						"Tag": "json:\"info\"",
						"Type": {
							"Name": "github.com/juju/juju/apiserver/params#FilesystemInfo"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#Filesystem"
			},
			"github.com/juju/juju/apiserver/params#FilesystemAttachment": {
				"Fields": [
					{
						"Name": "FilesystemTag",
						"Tag": "json:\"filesystem-tag\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "MachineTag",
						"Tag": "json:\"machine-tag\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Info",
						"Tag": "json:\"info\"",
						"Type": {
							"Name": "github.com/juju/juju/apiserver/params#FilesystemAttachmentInfo"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#FilesystemAttachment"
			},
			"github.com/juju/juju/apiserver/params#FilesystemAttachmentInfo": {
				"Fields": [
					{
						"Name": "MountPoint",
						"Tag": "json:\"mount-point,omitempty\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "ReadOnly",
						"Tag": "json:\"read-only,omitempty\"",
						"Type": {
							"Kind": "bool",
							"Name": "bool"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#FilesystemAttachmentInfo"
			},
			"github.com/juju/juju/apiserver/params#FilesystemAttachmentParams": {
				"Fields": [
					{
						"Name": "FilesystemTag",
						"Tag": "json:\"filesystem-tag\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "MachineTag",
						"Tag": "json:\"machine-tag\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "FilesystemId",
						"Tag": "json:\"filesystem-id,omitempty\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "InstanceId",
						"Tag": "json:\"instance-id,omitempty\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Provider",
						"Tag": "json:\"provider\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "MountPoint",
						"Tag": "json:\"mount-point,omitempty\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "ReadOnly",
						"Tag": "json:\"read-only,omitempty\"",
						"Type": {
							"Kind": "bool",
							"Name": "bool"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#FilesystemAttachmentParams"
			},
			"github.com/juju/juju/apiserver/params#FilesystemAttachmentParamsResult": {
				"Fields": [
					{
						"Name": "Result",
						"Tag": "json:\"result\"",
						"Type": {
							"Name": "github.com/juju/juju/apiserver/params#FilesystemAttachmentParams"
						}
					},
					{
						"Name": "Error",
						"Tag": "json:\"error,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Error"
							},
							"Kind": "ptr"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#FilesystemAttachmentParamsResult"
			},
			"github.com/juju/juju/apiserver/params#FilesystemAttachmentParamsResults": {
				"Fields": [
					{
						"Name": "Results",
						"Tag": "json:\"results,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#FilesystemAttachmentParamsResult"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#FilesystemAttachmentParamsResults"
			},
			"github.com/juju/juju/apiserver/params#FilesystemAttachmentResult": {
				"Fields": [
					{
						"Name": "Result",
						"Tag": "json:\"result\"",
						"Type": {
							"Name": "github.com/juju/juju/apiserver/params#FilesystemAttachment"
						}
					},
					{
						"Name": "Error",
						"Tag": "json:\"error,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Error"
							},
							"Kind": "ptr"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#FilesystemAttachmentResult"
			},
			"github.com/juju/juju/apiserver/params#FilesystemAttachmentResults": {
				"Fields": [
					{
						"Name": "Results",
						"Tag": "json:\"results,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#FilesystemAttachmentResult"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#FilesystemAttachmentResults"
			},
			"github.com/juju/juju/apiserver/params#FilesystemAttachments": {
				"Fields": [
					{
						"Name": "FilesystemAttachments",
						"Tag": "json:\"filesystem-attachments\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#FilesystemAttachment"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#FilesystemAttachments"
			},
			"github.com/juju/juju/apiserver/params#FilesystemDetails": {
				"Fields": [
					{
						"Name": "FilesystemTag",
						"Tag": "json:\"filesystem-tag\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "VolumeTag",
						"Tag": "json:\"volume-tag,omitempty\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Info",
						"Tag": "json:\"info\"",
						"Type": {
							"Name": "github.com/juju/juju/apiserver/params#FilesystemInfo"
						}
					},
					{
						"Name": "Status",
						"Tag": "json:\"status\"",
						"Type": {
							"Name": "github.com/juju/juju/apiserver/params#EntityStatus"
						}
					},
					{
						"Name": "MachineAttachments",
						"Tag": "json:\"machine-attachments,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#FilesystemAttachmentInfo"
							},
							"Key": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "map"
						}
					},
					{
						"Name": "Storage",
						"Tag": "json:\"storage,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#StorageDetails"
							},
							"Kind": "ptr"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#FilesystemDetails"
			},
			"github.com/juju/juju/apiserver/params#FilesystemDetailsListResult": {
				"Fields": [
					{
						"Name": "Result",
						"Tag": "json:\"result,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#FilesystemDetails"
							},
							"Kind": "slice"
						}
					},
					{
						"Name": "Error",
						"Tag": "json:\"error,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Error"
							},
							"Kind": "ptr"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#FilesystemDetailsListResult"
			},
			"github.com/juju/juju/apiserver/params#FilesystemDetailsListResults": {
				"Fields": [
					{
						"Name": "Results",
						"Tag": "json:\"results,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#FilesystemDetailsListResult"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#FilesystemDetailsListResults"
			},
			"github.com/juju/juju/apiserver/params#FilesystemFilter": {
				"Fields": [
					{
						"Name": "Machines",
						"Tag": "json:\"machines,omitempty\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Methods": {
					"IsEmpty": {
						"Name": "IsEmpty",
						"PtrReceiver": true,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Kind": "bool",
									"Name": "bool"
								}
							]
						}
					}
				},
				"Name": "github.com/juju/juju/apiserver/params#FilesystemFilter"
			},
			"github.com/juju/juju/apiserver/params#FilesystemFilters": {
				"Fields": [
					{
						"Name": "Filters",
						"Tag": "json:\"filters,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#FilesystemFilter"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#FilesystemFilters"
			},
			"github.com/juju/juju/apiserver/params#FilesystemInfo": {
				"Fields": [
					{
						"Name": "FilesystemId",
						"Tag": "json:\"filesystem-id\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Size",
						"Tag": "json:\"size\"",
						"Type": {
							"Kind": "uint64",
							"Name": "uint64"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#FilesystemInfo"
			},
			"github.com/juju/juju/apiserver/params#FilesystemParams": {
				"Fields": [
					{
						"Name": "FilesystemTag",
						"Tag": "json:\"filesystem-tag\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "VolumeTag",
						"Tag": "json:\"volume-tag,omitempty\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Size",
						"Tag": "json:\"size\"",
						"Type": {
							"Kind": "uint64",
							"Name": "uint64"
						}
					},
					{
						"Name": "Provider",
						"Tag": "json:\"provider\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Attributes",
						"Tag": "json:\"attributes,omitempty\"",
						"Type": {
							"Elem": {
								"Kind": "interface"
							},
							"Key": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "map"
						}
					},
					{
						"Name": "Tags",
						"Tag": "json:\"tags,omitempty\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Key": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "map"
						}
					},
					{
						"Name": "Attachment",
						"Tag": "json:\"attachment,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#FilesystemAttachmentParams"
							},
							"Kind": "ptr"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#FilesystemParams"
			},
			"github.com/juju/juju/apiserver/params#FilesystemParamsResult": {
				"Fields": [
					{
						"Name": "Result",
						"Tag": "json:\"result\"",
						"Type": {
							"Name": "github.com/juju/juju/apiserver/params#FilesystemParams"
						}
					},
					{
						"Name": "Error",
						"Tag": "json:\"error,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Error"
							},
							"Kind": "ptr"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#FilesystemParamsResult"
			},
			"github.com/juju/juju/apiserver/params#FilesystemParamsResults": {
				"Fields": [
					{
						"Name": "Results",
						"Tag": "json:\"results,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#FilesystemParamsResult"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#FilesystemParamsResults"
			},
			"github.com/juju/juju/apiserver/params#FilesystemResult": {
				"Fields": [
					{
						"Name": "Result",
						"Tag": "json:\"result\"",
						"Type": {
							"Name": "github.com/juju/juju/apiserver/params#Filesystem"
						}
					},
					{
						"Name": "Error",
						"Tag": "json:\"error,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Error"
							},
							"Kind": "ptr"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#FilesystemResult"
			},
			"github.com/juju/juju/apiserver/params#FilesystemResults": {
				"Fields": [
					{
						"Name": "Results",
						"Tag": "json:\"results,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#FilesystemResult"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#FilesystemResults"
			},
			"github.com/juju/juju/apiserver/params#Filesystems": {
				"Fields": [
					{
						"Name": "Filesystems",
						"Tag": "json:\"filesystems\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Filesystem"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#Filesystems"
			},
			"github.com/juju/juju/apiserver/params#FindActionsByNames": {
				"Fields": [
					{
						"Name": "ActionNames",
						"Tag": "json:\"names,omitempty\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#FindActionsByNames"
			},
			"github.com/juju/juju/apiserver/params#FindTags": {
				"Fields": [
					{
						"Name": "Prefixes",
						"Tag": "json:\"prefixes\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#FindTags"
			},
			"github.com/juju/juju/apiserver/params#FindTagsResults": {
				"Fields": [
					{
						"Name": "Matches",
						"Tag": "json:\"matches\"",
						"Type": {
							"Elem": {
								"Elem": {
									"Name": "github.com/juju/juju/apiserver/params#Entity"
								},
								"Kind": "slice"
							},
							"Key": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "map"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#FindTagsResults"
			},
			"github.com/juju/juju/apiserver/params#FindToolsParams": {
				"Fields": [
					{
						"Name": "Number",
						"Tag": "json:\"number\"",
						"Type": {
							"Name": "github.com/juju/version#Number"
						}
					},
					{
						"Name": "MajorVersion",
						"Tag": "json:\"major\"",
						"Type": {
							"Kind": "int",
							"Name": "int"
						}
					},
					{
						"Name": "MinorVersion",
						"Tag": "json:\"minor\"",
						"Type": {
							"Kind": "int",
							"Name": "int"
						}
					},
					{
						"Name": "Arch",
						"Tag": "json:\"arch\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Series",
						"Tag": "json:\"series\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#FindToolsParams"
			},
			"github.com/juju/juju/apiserver/params#FindToolsResult": {
				"Fields": [
					{
						"Name": "List",
						"Tag": "json:\"list\"",
						"Type": {
							"Name": "github.com/juju/juju/tools#List"
						}
					},
					{
						"Name": "Error",
						"Tag": "json:\"error,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Error"
							},
							"Kind": "ptr"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#FindToolsResult"
			},
			"github.com/juju/juju/apiserver/params#FullStatus": {
				"Fields": [
					{
						"Name": "Model",
						"Tag": "json:\"model\"",
						"Type": {
							"Name": "github.com/juju/juju/apiserver/params#ModelStatusInfo"
						}
					},
					{
						"Name": "Machines",
						"Tag": "json:\"machines\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#MachineStatus"
							},
							"Key": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "map"
						}
					},
					{
						"Name": "Applications",
						"Tag": "json:\"applications\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#ApplicationStatus"
							},
							"Key": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "map"
						}
					},
					{
						"Name": "Relations",
						"Tag": "json:\"relations\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#RelationStatus"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#FullStatus"
			},
			"github.com/juju/juju/apiserver/params#GetApplicationConstraints": {
				"Fields": [
					{
						"Name": "ApplicationName",
						"Tag": "json:\"application\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#GetApplicationConstraints"
			},
			"github.com/juju/juju/apiserver/params#GetBundleChangesParams": {
				"Fields": [
					{
						"Name": "BundleDataYAML",
						"Tag": "json:\"yaml\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#GetBundleChangesParams"
			},
			"github.com/juju/juju/apiserver/params#GetBundleChangesResults": {
				"Fields": [
					{
						"Name": "Changes",
						"Tag": "json:\"changes,omitempty\"",
						"Type": {
							"Elem": {
								"Elem": {
									"Name": "github.com/juju/juju/apiserver/params#BundleChangesChange"
								},
								"Kind": "ptr"
							},
							"Kind": "slice"
						}
					},
					{
						"Name": "Errors",
						"Tag": "json:\"errors,omitempty\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#GetBundleChangesResults"
			},
			"github.com/juju/juju/apiserver/params#GetConstraintsResults": {
				"Fields": [
					{
						"Name": "Constraints",
						"Tag": "json:\"constraints\"",
						"Type": {
							"Name": "github.com/juju/juju/constraints#Value"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#GetConstraintsResults"
			},
			"github.com/juju/juju/apiserver/params#GetLeadershipSettingsBulkResults": {
				"Fields": [
					{
						"Name": "Results",
						"Tag": "json:\"results\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#GetLeadershipSettingsResult"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#GetLeadershipSettingsBulkResults"
			},
			"github.com/juju/juju/apiserver/params#GetLeadershipSettingsResult": {
				"Fields": [
					{
						"Name": "Settings",
						"Tag": "json:\"settings\"",
						"Type": {
							"Name": "github.com/juju/juju/apiserver/params#Settings"
						}
					},
					{
						"Name": "Error",
						"Tag": "json:\"error,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Error"
							},
							"Kind": "ptr"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#GetLeadershipSettingsResult"
			},
			"github.com/juju/juju/apiserver/params#HAMember": {
				"Fields": [
					{
						"Name": "Tag",
						"Tag": "json:\"tag\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "PublicAddress",
						"Tag": "json:\"public-address\"",
						"Type": {
							"Name": "github.com/juju/juju/network#Address"
						}
					},
					{
						"Name": "Series",
						"Tag": "json:\"series\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#HAMember"
			},
			"github.com/juju/juju/apiserver/params#History": {
				"Fields": [
					{
						"Name": "Statuses",
						"Tag": "json:\"statuses\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#DetailedStatus"
							},
							"Kind": "slice"
						}
					},
					{
						"Name": "Error",
						"Tag": "json:\"error,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Error"
							},
							"Kind": "ptr"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#History"
			},
			"github.com/juju/juju/apiserver/params#HostPort": {
				"Fields": [
					{
						"Anonymous": true,
						"Name": "Address",
						"Type": {
							"Name": "github.com/juju/juju/apiserver/params#Address"
						}
					},
					{
						"Name": "Port",
						"Tag": "json:\"port\"",
						"Type": {
							"Kind": "int",
							"Name": "int"
						}
					}
				],
				"Kind": "struct",
				"Methods": {
					"NetworkAddress": {
						"Name": "NetworkAddress",
						"PtrReceiver": false,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Name": "github.com/juju/juju/network#Address"
								}
							]
						}
					},
					"NetworkHostPort": {
						"Name": "NetworkHostPort",
						"PtrReceiver": false,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Name": "github.com/juju/juju/network#HostPort"
								}
							]
						}
					}
				},
				"Name": "github.com/juju/juju/apiserver/params#HostPort"
			},
			"github.com/juju/juju/apiserver/params#ImageFilterParams": {
				"Fields": [
					{
						"Name": "Images",
						"Tag": "json:\"images\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#ImageSpec"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ImageFilterParams"
			},
			"github.com/juju/juju/apiserver/params#ImageMetadata": {
				"Fields": [
					{
						"Name": "Kind",
						"Tag": "json:\"kind\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Arch",
						"Tag": "json:\"arch\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Series",
						"Tag": "json:\"series\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "URL",
						"Tag": "json:\"url\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Created",
						"Tag": "json:\"created\"",
						"Type": {
							"Name": "time#Time"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ImageMetadata"
			},
			"github.com/juju/juju/apiserver/params#ImageMetadataFilter": {
				"Fields": [
					{
						"Name": "Region",
						"Tag": "json:\"region,omitempty\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Series",
						"Tag": "json:\"series,omitempty\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "slice"
						}
					},
					{
						"Name": "Arches",
						"Tag": "json:\"arches,omitempty\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "slice"
						}
					},
					{
						"Name": "Stream",
						"Tag": "json:\"stream,omitempty\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "VirtType",
						"Tag": "json:\"virt-type,omitempty\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "RootStorageType",
						"Tag": "json:\"root-storage-type,omitempty\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ImageMetadataFilter"
			},
			"github.com/juju/juju/apiserver/params#ImageSpec": {
				"Fields": [
					{
						"Name": "Kind",
						"Tag": "json:\"kind\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Arch",
						"Tag": "json:\"arch\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Series",
						"Tag": "json:\"series\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ImageSpec"
			},
			"github.com/juju/juju/apiserver/params#InitiateModelMigrationArgs": {
				"Fields": [
					{
						"Name": "Specs",
						"Tag": "json:\"specs\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#ModelMigrationSpec"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#InitiateModelMigrationArgs"
			},
			"github.com/juju/juju/apiserver/params#InitiateModelMigrationResult": {
				"Fields": [
					{
						"Name": "ModelTag",
						"Tag": "json:\"model-tag\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Error",
						"Tag": "json:\"error,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Error"
							},
							"Kind": "ptr"
						}
					},
					{
						"Name": "MigrationId",
						"Tag": "json:\"migration-id\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#InitiateModelMigrationResult"
			},
			"github.com/juju/juju/apiserver/params#InitiateModelMigrationResults": {
				"Fields": [
					{
						"Name": "Results",
						"Tag": "json:\"results\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#InitiateModelMigrationResult"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#InitiateModelMigrationResults"
			},
			"github.com/juju/juju/apiserver/params#InstanceInfo": {
				"Fields": [
					{
						"Name": "Tag",
						"Tag": "json:\"tag\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "InstanceId",
						"Tag": "json:\"instance-id\"",
						"Type": {
							"Name": "github.com/juju/juju/instance#Id"
						}
					},
					{
						"Name": "Nonce",
						"Tag": "json:\"nonce\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Characteristics",
						"Tag": "json:\"characteristics\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/instance#HardwareCharacteristics"
							},
							"Kind": "ptr"
						}
					},
					{
						"Name": "Volumes",
						"Tag": "json:\"volumes\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Volume"
							},
							"Kind": "slice"
						}
					},
					{
						"Name": "VolumeAttachments",
						"Tag": "json:\"volume-attachments\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#VolumeAttachmentInfo"
							},
							"Key": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "map"
						}
					},
					{
						"Name": "NetworkConfig",
						"Tag": "json:\"network-config\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#NetworkConfig"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#InstanceInfo"
			},
			"github.com/juju/juju/apiserver/params#InstancesInfo": {
				"Fields": [
					{
						"Name": "Machines",
						"Tag": "json:\"machines\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#InstanceInfo"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#InstancesInfo"
			},
			"github.com/juju/juju/apiserver/params#IntResult": {
				"Fields": [
					{
						"Name": "Error",
						"Tag": "json:\"error,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Error"
							},
							"Kind": "ptr"
						}
					},
					{
						"Name": "Result",
						"Tag": "json:\"result\"",
						"Type": {
							"Kind": "int",
							"Name": "int"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#IntResult"
			},
			"github.com/juju/juju/apiserver/params#IntResults": {
				"Fields": [
					{
						"Name": "Results",
						"Tag": "json:\"results\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#IntResult"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#IntResults"
			},
			"github.com/juju/juju/apiserver/params#IsMasterResult": {
				"Fields": [
					{
						"Name": "Master",
						"Tag": "json:\"master\"",
						"Type": {
							"Kind": "bool",
							"Name": "bool"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#IsMasterResult"
			},
			"github.com/juju/juju/apiserver/params#IsMeteredResult": {
				"Fields": [
					{
						"Name": "Metered",
						"Tag": "json:\"metered\"",
						"Type": {
							"Kind": "bool",
							"Name": "bool"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#IsMeteredResult"
			},
			"github.com/juju/juju/apiserver/params#JobsResult": {
				"Fields": [
					{
						"Name": "Jobs",
						"Tag": "json:\"jobs\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/state/multiwatcher#MachineJob"
							},
							"Kind": "slice"
						}
					},
					{
						"Name": "Error",
						"Tag": "json:\"error,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Error"
							},
							"Kind": "ptr"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#JobsResult"
			},
			"github.com/juju/juju/apiserver/params#JobsResults": {
				"Fields": [
					{
						"Name": "Results",
						"Tag": "json:\"results\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#JobsResult"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#JobsResults"
			},
			"github.com/juju/juju/apiserver/params#Life": {
				"Kind": "string",
				"Name": "github.com/juju/juju/apiserver/params#Life"
			},
			"github.com/juju/juju/apiserver/params#LifeResult": {
				"Fields": [
					{
						"Name": "Life",
						"Tag": "json:\"life\"",
						"Type": {
							"Name": "github.com/juju/juju/apiserver/params#Life"
						}
					},
					{
						"Name": "Error",
						"Tag": "json:\"error,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Error"
							},
							"Kind": "ptr"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#LifeResult"
			},
			"github.com/juju/juju/apiserver/params#LifeResults": {
				"Fields": [
					{
						"Name": "Results",
						"Tag": "json:\"results\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#LifeResult"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#LifeResults"
			},
			"github.com/juju/juju/apiserver/params#ListCloudImageMetadataResult": {
				"Fields": [
					{
						"Name": "Result",
						"Tag": "json:\"result\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#CloudImageMetadata"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ListCloudImageMetadataResult"
			},
			"github.com/juju/juju/apiserver/params#ListImageResult": {
				"Fields": [
					{
						"Name": "Result",
						"Tag": "json:\"result\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#ImageMetadata"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ListImageResult"
			},
			"github.com/juju/juju/apiserver/params#ListSSHKeys": {
				"Fields": [
					{
						"Anonymous": true,
						"Name": "Entities",
						"Tag": "json:\"entities\"",
						"Type": {
							"Name": "github.com/juju/juju/apiserver/params#Entities"
						}
					},
					{
						"Name": "Mode",
						"Tag": "json:\"mode\"",
						"Type": {
							"Name": "github.com/juju/utils/ssh#ListMode"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ListSSHKeys"
			},
			"github.com/juju/juju/apiserver/params#ListSpacesResults": {
				"Fields": [
					{
						"Name": "Results",
						"Tag": "json:\"results\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Space"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ListSpacesResults"
			},
			"github.com/juju/juju/apiserver/params#ListSubnetsResults": {
				"Fields": [
					{
						"Name": "Results",
						"Tag": "json:\"results\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Subnet"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ListSubnetsResults"
			},
			"github.com/juju/juju/apiserver/params#LogForwardingGetLastSentParams": {
				"Fields": [
					{
						"Name": "IDs",
						"Tag": "json:\"ids\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#LogForwardingID"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#LogForwardingGetLastSentParams"
			},
			"github.com/juju/juju/apiserver/params#LogForwardingGetLastSentResult": {
				"Fields": [
					{
						"Name": "RecordID",
						"Tag": "json:\"record-id\"",
						"Type": {
							"Kind": "int64",
							"Name": "int64"
						}
					},
					{
						"Name": "RecordTimestamp",
						"Tag": "json:\"record-timestamp\"",
						"Type": {
							"Kind": "int64",
							"Name": "int64"
						}
					},
					{
						"Name": "Error",
						"Tag": "json:\"err\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Error"
							},
							"Kind": "ptr"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#LogForwardingGetLastSentResult"
			},
			"github.com/juju/juju/apiserver/params#LogForwardingGetLastSentResults": {
				"Fields": [
					{
						"Name": "Results",
						"Tag": "json:\"results\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#LogForwardingGetLastSentResult"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#LogForwardingGetLastSentResults"
			},
			"github.com/juju/juju/apiserver/params#LogForwardingID": {
				"Fields": [
					{
						"Name": "ModelTag",
						"Tag": "json:\"model\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Sink",
						"Tag": "json:\"sink\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#LogForwardingID"
			},
			"github.com/juju/juju/apiserver/params#LogForwardingSetLastSentParam": {
				"Fields": [
					{
						"Anonymous": true,
						"Name": "LogForwardingID",
						"Type": {
							"Name": "github.com/juju/juju/apiserver/params#LogForwardingID"
						}
					},
					{
						"Name": "RecordID",
						"Tag": "json:\"record-id\"",
						"Type": {
							"Kind": "int64",
							"Name": "int64"
						}
					},
					{
						"Name": "RecordTimestamp",
						"Tag": "json:\"record-timestamp\"",
						"Type": {
							"Kind": "int64",
							"Name": "int64"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#LogForwardingSetLastSentParam"
			},
			"github.com/juju/juju/apiserver/params#LogForwardingSetLastSentParams": {
				"Fields": [
					{
						"Name": "Params",
						"Tag": "json:\"params\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#LogForwardingSetLastSentParam"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#LogForwardingSetLastSentParams"
			},
			"github.com/juju/juju/apiserver/params#LoginRequest": {
				"Fields": [
					{
						"Name": "AuthTag",
						"Tag": "json:\"auth-tag\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Credentials",
						"Tag": "json:\"credentials\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Nonce",
						"Tag": "json:\"nonce\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Macaroons",
						"Tag": "json:\"macaroons\"",
						"Type": {
							"Elem": {
								"Name": "gopkg.in/macaroon.v1#Slice"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#LoginRequest"
			},
			"github.com/juju/juju/apiserver/params#LoginResultV1": {
				"Fields": [
					{
						"Name": "DischargeRequired",
						"Tag": "json:\"discharge-required,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "gopkg.in/macaroon.v1#Macaroon"
							},
							"Kind": "ptr"
						}
					},
					{
						"Name": "DischargeRequiredReason",
						"Tag": "json:\"discharge-required-error,omitempty\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Servers",
						"Tag": "json:\"servers,omitempty\"",
						"Type": {
							"Elem": {
								"Elem": {
									"Name": "github.com/juju/juju/apiserver/params#HostPort"
								},
								"Kind": "slice"
							},
							"Kind": "slice"
						}
					},
					{
						"Name": "ModelTag",
						"Tag": "json:\"model-tag,omitempty\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "ControllerTag",
						"Tag": "json:\"server-tag,omitempty\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "UserInfo",
						"Tag": "json:\"user-info,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#AuthUserInfo"
							},
							"Kind": "ptr"
						}
					},
					{
						"Name": "Facades",
						"Tag": "json:\"facades,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#FacadeVersions"
							},
							"Kind": "slice"
						}
					},
					{
						"Name": "ServerVersion",
						"Tag": "json:\"server-version,omitempty\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#LoginResultV1"
			},
			"github.com/juju/juju/apiserver/params#MacaroonResult": {
				"Fields": [
					{
						"Name": "Result",
						"Tag": "json:\"result,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "gopkg.in/macaroon.v1#Macaroon"
							},
							"Kind": "ptr"
						}
					},
					{
						"Name": "Error",
						"Tag": "json:\"error,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Error"
							},
							"Kind": "ptr"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#MacaroonResult"
			},
			"github.com/juju/juju/apiserver/params#MacaroonResults": {
				"Fields": [
					{
						"Name": "Results",
						"Tag": "json:\"results\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#MacaroonResult"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#MacaroonResults"
			},
			"github.com/juju/juju/apiserver/params#MachineAddresses": {
				"Fields": [
					{
						"Name": "Tag",
						"Tag": "json:\"tag\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Addresses",
						"Tag": "json:\"addresses\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Address"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#MachineAddresses"
			},
			"github.com/juju/juju/apiserver/params#MachineAddressesResult": {
				"Fields": [
					{
						"Name": "Error",
						"Tag": "json:\"error,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Error"
							},
							"Kind": "ptr"
						}
					},
					{
						"Name": "Addresses",
						"Tag": "json:\"addresses\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Address"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#MachineAddressesResult"
			},
			"github.com/juju/juju/apiserver/params#MachineAddressesResults": {
				"Fields": [
					{
						"Name": "Results",
						"Tag": "json:\"results\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#MachineAddressesResult"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#MachineAddressesResults"
			},
			"github.com/juju/juju/apiserver/params#MachineBlockDevices": {
				"Fields": [
					{
						"Name": "Machine",
						"Tag": "json:\"machine\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "BlockDevices",
						"Tag": "json:\"block-devices,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/storage#BlockDevice"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#MachineBlockDevices"
			},
			"github.com/juju/juju/apiserver/params#MachineContainers": {
				"Fields": [
					{
						"Name": "MachineTag",
						"Tag": "json:\"machine-tag\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "ContainerTypes",
						"Tag": "json:\"container-types\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/instance#ContainerType"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#MachineContainers"
			},
			"github.com/juju/juju/apiserver/params#MachineContainersParams": {
				"Fields": [
					{
						"Name": "Params",
						"Tag": "json:\"params\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#MachineContainers"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#MachineContainersParams"
			},
			"github.com/juju/juju/apiserver/params#MachineNetworkConfigResult": {
				"Fields": [
					{
						"Name": "Error",
						"Tag": "json:\"error,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Error"
							},
							"Kind": "ptr"
						}
					},
					{
						"Name": "Config",
						"Tag": "json:\"info\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#NetworkConfig"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#MachineNetworkConfigResult"
			},
			"github.com/juju/juju/apiserver/params#MachineNetworkConfigResults": {
				"Fields": [
					{
						"Name": "Results",
						"Tag": "json:\"results\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#MachineNetworkConfigResult"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#MachineNetworkConfigResults"
			},
			"github.com/juju/juju/apiserver/params#MachinePortRange": {
				"Fields": [
					{
						"Name": "UnitTag",
						"Tag": "json:\"unit-tag\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "RelationTag",
						"Tag": "json:\"relation-tag\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "PortRange",
						"Tag": "json:\"port-range\"",
						"Type": {
							"Name": "github.com/juju/juju/apiserver/params#PortRange"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#MachinePortRange"
			},
			"github.com/juju/juju/apiserver/params#MachinePorts": {
				"Fields": [
					{
						"Name": "MachineTag",
						"Tag": "json:\"machine-tag\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "SubnetTag",
						"Tag": "json:\"subnet-tag\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#MachinePorts"
			},
			"github.com/juju/juju/apiserver/params#MachinePortsParams": {
				"Fields": [
					{
						"Name": "Params",
						"Tag": "json:\"params\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#MachinePorts"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#MachinePortsParams"
			},
			"github.com/juju/juju/apiserver/params#MachinePortsResult": {
				"Fields": [
					{
						"Name": "Error",
						"Tag": "json:\"error,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Error"
							},
							"Kind": "ptr"
						}
					},
					{
						"Name": "Ports",
						"Tag": "json:\"ports\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#MachinePortRange"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#MachinePortsResult"
			},
			"github.com/juju/juju/apiserver/params#MachinePortsResults": {
				"Fields": [
					{
						"Name": "Results",
						"Tag": "json:\"results\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#MachinePortsResult"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#MachinePortsResults"
			},
			"github.com/juju/juju/apiserver/params#MachineStatus": {
				"Fields": [
					{
						"Name": "AgentStatus",
						"Tag": "json:\"agent-status\"",
						"Type": {
							"Name": "github.com/juju/juju/apiserver/params#DetailedStatus"
						}
					},
					{
						"Name": "InstanceStatus",
						"Tag": "json:\"instance-status\"",
						"Type": {
							"Name": "github.com/juju/juju/apiserver/params#DetailedStatus"
						}
					},
					{
						"Name": "DNSName",
						"Tag": "json:\"dns-name\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "InstanceId",
						"Tag": "json:\"instance-id\"",
						"Type": {
							"Name": "github.com/juju/juju/instance#Id"
						}
					},
					{
						"Name": "Series",
						"Tag": "json:\"series\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Id",
						"Tag": "json:\"id\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Containers",
						"Tag": "json:\"containers\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#MachineStatus"
							},
							"Key": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "map"
						}
					},
					{
						"Name": "Hardware",
						"Tag": "json:\"hardware\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Jobs",
						"Tag": "json:\"jobs\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/state/multiwatcher#MachineJob"
							},
							"Kind": "slice"
						}
					},
					{
						"Name": "HasVote",
						"Tag": "json:\"has-vote\"",
						"Type": {
							"Kind": "bool",
							"Name": "bool"
						}
					},
					{
						"Name": "WantsVote",
						"Tag": "json:\"wants-vote\"",
						"Type": {
							"Kind": "bool",
							"Name": "bool"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#MachineStatus"
			},
			"github.com/juju/juju/apiserver/params#MachineStorageId": {
				"Fields": [
					{
						"Name": "MachineTag",
						"Tag": "json:\"machine-tag\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "AttachmentTag",
						"Tag": "json:\"attachment-tag\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#MachineStorageId"
			},
			"github.com/juju/juju/apiserver/params#MachineStorageIds": {
				"Fields": [
					{
						"Name": "Ids",
						"Tag": "json:\"ids\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#MachineStorageId"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#MachineStorageIds"
			},
			"github.com/juju/juju/apiserver/params#MachineStorageIdsWatchResult": {
				"Fields": [
					{
						"Name": "MachineStorageIdsWatcherId",
						"Tag": "json:\"watcher-id\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Changes",
						"Tag": "json:\"changes\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#MachineStorageId"
							},
							"Kind": "slice"
						}
					},
					{
						"Name": "Error",
						"Tag": "json:\"error,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Error"
							},
							"Kind": "ptr"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#MachineStorageIdsWatchResult"
			},
			"github.com/juju/juju/apiserver/params#MachineStorageIdsWatchResults": {
				"Fields": [
					{
						"Name": "Results",
						"Tag": "json:\"results\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#MachineStorageIdsWatchResult"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#MachineStorageIdsWatchResults"
			},
			"github.com/juju/juju/apiserver/params#MapResult": {
				"Fields": [
					{
						"Name": "Result",
						"Tag": "json:\"result\"",
						"Type": {
							"Elem": {
								"Kind": "interface"
							},
							"Key": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "map"
						}
					},
					{
						"Name": "Error",
						"Tag": "json:\"error,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Error"
							},
							"Kind": "ptr"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#MapResult"
			},
			"github.com/juju/juju/apiserver/params#MapResults": {
				"Fields": [
					{
						"Name": "Results",
						"Tag": "json:\"results\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#MapResult"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#MapResults"
			},
			"github.com/juju/juju/apiserver/params#MasterMigrationStatus": {
				"Fields": [
					{
						"Name": "Spec",
						"Tag": "json:\"spec\"",
						"Type": {
							"Name": "github.com/juju/juju/apiserver/params#ModelMigrationSpec"
						}
					},
					{
						"Name": "MigrationId",
						"Tag": "json:\"migration-id\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Phase",
						"Tag": "json:\"phase\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "PhaseChangedTime",
						"Tag": "json:\"phase-changed-time\"",
						"Type": {
							"Name": "time#Time"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#MasterMigrationStatus"
			},
			"github.com/juju/juju/apiserver/params#MergeLeadershipSettingsBulkParams": {
				"Fields": [
					{
						"Name": "Params",
						"Tag": "json:\"params\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#MergeLeadershipSettingsParam"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#MergeLeadershipSettingsBulkParams"
			},
			"github.com/juju/juju/apiserver/params#MergeLeadershipSettingsParam": {
				"Fields": [
					{
						"Name": "ApplicationTag",
						"Tag": "json:\"application-tag\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Settings",
						"Tag": "json:\"settings\"",
						"Type": {
							"Name": "github.com/juju/juju/apiserver/params#Settings"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#MergeLeadershipSettingsParam"
			},
			"github.com/juju/juju/apiserver/params#MetadataImageIds": {
				"Fields": [
					{
						"Name": "Ids",
						"Tag": "json:\"image-ids\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#MetadataImageIds"
			},
			"github.com/juju/juju/apiserver/params#MetadataSaveParams": {
				"Fields": [
					{
						"Name": "Metadata",
						"Tag": "json:\"metadata,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#CloudImageMetadataList"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#MetadataSaveParams"
			},
			"github.com/juju/juju/apiserver/params#MeterStatus": {
				"Fields": [
					{
						"Name": "Color",
						"Tag": "json:\"color\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Message",
						"Tag": "json:\"message\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#MeterStatus"
			},
			"github.com/juju/juju/apiserver/params#MeterStatusParam": {
				"Fields": [
					{
						"Name": "Tag",
						"Tag": "json:\"tag\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Code",
						"Tag": "json:\"code\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Info",
						"Tag": "json:\"info, omitempty\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#MeterStatusParam"
			},
			"github.com/juju/juju/apiserver/params#MeterStatusParams": {
				"Fields": [
					{
						"Name": "Statuses",
						"Tag": "json:\"statues\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#MeterStatusParam"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#MeterStatusParams"
			},
			"github.com/juju/juju/apiserver/params#MeterStatusResult": {
				"Fields": [
					{
						"Name": "Code",
						"Tag": "json:\"code\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Info",
						"Tag": "json:\"info\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Error",
						"Tag": "json:\"error,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Error"
							},
							"Kind": "ptr"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#MeterStatusResult"
			},
			"github.com/juju/juju/apiserver/params#MeterStatusResults": {
				"Fields": [
					{
						"Name": "Results",
						"Tag": "json:\"results\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#MeterStatusResult"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#MeterStatusResults"
			},
			"github.com/juju/juju/apiserver/params#Metric": {
				"Fields": [
					{
						"Name": "Key",
						"Tag": "json:\"key\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Value",
						"Tag": "json:\"value\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Time",
						"Tag": "json:\"time\"",
						"Type": {
							"Name": "time#Time"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#Metric"
			},
			"github.com/juju/juju/apiserver/params#MetricBatch": {
				"Fields": [
					{
						"Name": "UUID",
						"Tag": "json:\"uuid\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "CharmURL",
						"Tag": "json:\"charm-url\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Created",
						"Tag": "json:\"created\"",
						"Type": {
							"Name": "time#Time"
						}
					},
					{
						"Name": "Metrics",
						"Tag": "json:\"metrics\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Metric"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#MetricBatch"
			},
			"github.com/juju/juju/apiserver/params#MetricBatchParam": {
				"Fields": [
					{
						"Name": "Tag",
						"Tag": "json:\"tag\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Batch",
						"Tag": "json:\"batch\"",
						"Type": {
							"Name": "github.com/juju/juju/apiserver/params#MetricBatch"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#MetricBatchParam"
			},
			"github.com/juju/juju/apiserver/params#MetricBatchParams": {
				"Fields": [
					{
						"Name": "Batches",
						"Tag": "json:\"batches\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#MetricBatchParam"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#MetricBatchParams"
			},
			"github.com/juju/juju/apiserver/params#MetricResult": {
				"Fields": [
					{
						"Name": "Time",
						"Tag": "json:\"time\"",
						"Type": {
							"Name": "time#Time"
						}
					},
					{
						"Name": "Key",
						"Tag": "json:\"key\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Value",
						"Tag": "json:\"value\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#MetricResult"
			},
			"github.com/juju/juju/apiserver/params#MetricResults": {
				"Fields": [
					{
						"Name": "Results",
						"Tag": "json:\"results\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#EntityMetrics"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Methods": {
					"OneError": {
						"Name": "OneError",
						"PtrReceiver": true,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Kind": "interface",
									"Methods": {
										"Error": {
											"Name": "Error",
											"PtrReceiver": false,
											"Type": {
												"Kind": "func",
												"Out": [
													{
														"Kind": "string",
														"Name": "string"
													}
												]
											}
										}
									},
									"Name": "error"
								}
							]
						}
					}
				},
				"Name": "github.com/juju/juju/apiserver/params#MetricResults"
			},
			"github.com/juju/juju/apiserver/params#MigrationStatus": {
				"Fields": [
					{
						"Name": "MigrationId",
						"Tag": "json:\"migration-id\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Attempt",
						"Tag": "json:\"attempt\"",
						"Type": {
							"Kind": "int",
							"Name": "int"
						}
					},
					{
						"Name": "Phase",
						"Tag": "json:\"phase\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "SourceAPIAddrs",
						"Tag": "json:\"source-api-addrs\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "slice"
						}
					},
					{
						"Name": "SourceCACert",
						"Tag": "json:\"source-ca-cert\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "TargetAPIAddrs",
						"Tag": "json:\"target-api-addrs\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "slice"
						}
					},
					{
						"Name": "TargetCACert",
						"Tag": "json:\"target-ca-cert\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#MigrationStatus"
			},
			"github.com/juju/juju/apiserver/params#MinionReport": {
				"Fields": [
					{
						"Name": "MigrationId",
						"Tag": "json:\"migration-id\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Phase",
						"Tag": "json:\"phase\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Success",
						"Tag": "json:\"success\"",
						"Type": {
							"Kind": "bool",
							"Name": "bool"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#MinionReport"
			},
			"github.com/juju/juju/apiserver/params#MinionReports": {
				"Fields": [
					{
						"Name": "MigrationId",
						"Tag": "json:\"migration-id\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Phase",
						"Tag": "json:\"phase\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "SuccessCount",
						"Tag": "json:\"success-count\"",
						"Type": {
							"Kind": "int",
							"Name": "int"
						}
					},
					{
						"Name": "UnknownCount",
						"Tag": "json:\"unknown-count\"",
						"Type": {
							"Kind": "int",
							"Name": "int"
						}
					},
					{
						"Name": "UnknownSample",
						"Tag": "json:\"unknown-sample\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "slice"
						}
					},
					{
						"Name": "Failed",
						"Tag": "json:\"failed\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#MinionReports"
			},
			"github.com/juju/juju/apiserver/params#Model": {
				"Fields": [
					{
						"Name": "Name",
						"Tag": "json:\"name\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "UUID",
						"Tag": "json:\"uuid\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "OwnerTag",
						"Tag": "json:\"owner-tag\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#Model"
			},
			"github.com/juju/juju/apiserver/params#ModelAccessPermission": {
				"Kind": "string",
				"Name": "github.com/juju/juju/apiserver/params#ModelAccessPermission"
			},
			"github.com/juju/juju/apiserver/params#ModelAction": {
				"Kind": "string",
				"Name": "github.com/juju/juju/apiserver/params#ModelAction"
			},
			"github.com/juju/juju/apiserver/params#ModelArgs": {
				"Fields": [
					{
						"Name": "ModelTag",
						"Tag": "json:\"model-tag\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ModelArgs"
			},
			"github.com/juju/juju/apiserver/params#ModelBlockInfo": {
				"Fields": [
					{
						"Name": "Name",
						"Tag": "json:\"name\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "UUID",
						"Tag": "json:\"model-uuid\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "OwnerTag",
						"Tag": "json:\"owner-tag\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Blocks",
						"Tag": "json:\"blocks\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ModelBlockInfo"
			},
			"github.com/juju/juju/apiserver/params#ModelBlockInfoList": {
				"Fields": [
					{
						"Name": "Models",
						"Tag": "json:\"models,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#ModelBlockInfo"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ModelBlockInfoList"
			},
			"github.com/juju/juju/apiserver/params#ModelConfig": {
				"Elem": {
					"Kind": "interface"
				},
				"Key": {
					"Kind": "string",
					"Name": "string"
				},
				"Kind": "map",
				"Name": "github.com/juju/juju/apiserver/params#ModelConfig"
			},
			"github.com/juju/juju/apiserver/params#ModelConfigResult": {
				"Fields": [
					{
						"Name": "Config",
						"Tag": "json:\"config\"",
						"Type": {
							"Name": "github.com/juju/juju/apiserver/params#ModelConfig"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ModelConfigResult"
			},
			"github.com/juju/juju/apiserver/params#ModelConfigResults": {
				"Fields": [
					{
						"Name": "Config",
						"Tag": "json:\"config\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#ConfigValue"
							},
							"Key": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "map"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ModelConfigResults"
			},
			"github.com/juju/juju/apiserver/params#ModelCreateArgs": {
				"Fields": [
					{
						"Name": "Name",
						"Tag": "json:\"name\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "OwnerTag",
						"Tag": "json:\"owner-tag\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Config",
						"Tag": "json:\"config,omitempty\"",
						"Type": {
							"Elem": {
								"Kind": "interface"
							},
							"Key": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "map"
						}
					},
					{
						"Name": "CloudRegion",
						"Tag": "json:\"region,omitempty\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "CloudCredential",
						"Tag": "json:\"credential,omitempty\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ModelCreateArgs"
			},
			"github.com/juju/juju/apiserver/params#ModelInfo": {
				"Fields": [
					{
						"Name": "Name",
						"Tag": "json:\"name\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "UUID",
						"Tag": "json:\"uuid\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "ControllerUUID",
						"Tag": "json:\"controller-uuid\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "ProviderType",
						"Tag": "json:\"provider-type\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "DefaultSeries",
						"Tag": "json:\"default-series\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Cloud",
						"Tag": "json:\"cloud\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "CloudRegion",
						"Tag": "json:\"cloud-region,omitempty\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "CloudCredential",
						"Tag": "json:\"cloud-credential,omitempty\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "OwnerTag",
						"Tag": "json:\"owner-tag\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Life",
						"Tag": "json:\"life\"",
						"Type": {
							"Name": "github.com/juju/juju/apiserver/params#Life"
						}
					},
					{
						"Name": "Status",
						"Tag": "json:\"status\"",
						"Type": {
							"Name": "github.com/juju/juju/apiserver/params#EntityStatus"
						}
					},
					{
						"Name": "Users",
						"Tag": "json:\"users\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#ModelUserInfo"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ModelInfo"
			},
			"github.com/juju/juju/apiserver/params#ModelInfoResult": {
				"Fields": [
					{
						"Name": "Result",
						"Tag": "json:\"result,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#ModelInfo"
							},
							"Kind": "ptr"
						}
					},
					{
						"Name": "Error",
						"Tag": "json:\"error,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Error"
							},
							"Kind": "ptr"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ModelInfoResult"
			},
			"github.com/juju/juju/apiserver/params#ModelInfoResults": {
				"Fields": [
					{
						"Name": "Results",
						"Tag": "json:\"results\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#ModelInfoResult"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ModelInfoResults"
			},
			"github.com/juju/juju/apiserver/params#ModelMigrationSpec": {
				"Fields": [
					{
						"Name": "ModelTag",
						"Tag": "json:\"model-tag\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "TargetInfo",
						"Tag": "json:\"target-info\"",
						"Type": {
							"Name": "github.com/juju/juju/apiserver/params#ModelMigrationTargetInfo"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ModelMigrationSpec"
			},
			"github.com/juju/juju/apiserver/params#ModelMigrationTargetInfo": {
				"Fields": [
					{
						"Name": "ControllerTag",
						"Tag": "json:\"controller-tag\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Addrs",
						"Tag": "json:\"addrs\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "slice"
						}
					},
					{
						"Name": "CACert",
						"Tag": "json:\"ca-cert\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "AuthTag",
						"Tag": "json:\"auth-tag\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Password",
						"Tag": "json:\"password\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ModelMigrationTargetInfo"
			},
			"github.com/juju/juju/apiserver/params#ModelResult": {
				"Fields": [
					{
						"Name": "Error",
						"Tag": "json:\"error,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Error"
							},
							"Kind": "ptr"
						}
					},
					{
						"Name": "Name",
						"Tag": "json:\"name\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "UUID",
						"Tag": "json:\"uuid\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ModelResult"
			},
			"github.com/juju/juju/apiserver/params#ModelSet": {
				"Fields": [
					{
						"Name": "Config",
						"Tag": "json:\"config\"",
						"Type": {
							"Elem": {
								"Kind": "interface"
							},
							"Key": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "map"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ModelSet"
			},
			"github.com/juju/juju/apiserver/params#ModelStatus": {
				"Fields": [
					{
						"Name": "ModelTag",
						"Tag": "json:\"model-tag\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Life",
						"Tag": "json:\"life\"",
						"Type": {
							"Name": "github.com/juju/juju/apiserver/params#Life"
						}
					},
					{
						"Name": "HostedMachineCount",
						"Tag": "json:\"hosted-machine-count\"",
						"Type": {
							"Kind": "int",
							"Name": "int"
						}
					},
					{
						"Name": "ApplicationCount",
						"Tag": "json:\"application-count\"",
						"Type": {
							"Kind": "int",
							"Name": "int"
						}
					},
					{
						"Name": "OwnerTag",
						"Tag": "json:\"owner-tag\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ModelStatus"
			},
			"github.com/juju/juju/apiserver/params#ModelStatusInfo": {
				"Fields": [
					{
						"Name": "Name",
						"Tag": "json:\"name\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Cloud",
						"Tag": "json:\"cloud\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "CloudRegion",
						"Tag": "json:\"region,omitempty\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Version",
						"Tag": "json:\"version\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "AvailableVersion",
						"Tag": "json:\"available-version\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ModelStatusInfo"
			},
			"github.com/juju/juju/apiserver/params#ModelStatusResults": {
				"Fields": [
					{
						"Name": "Results",
						"Tag": "json:\"models\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#ModelStatus"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ModelStatusResults"
			},
			"github.com/juju/juju/apiserver/params#ModelUnset": {
				"Fields": [
					{
						"Name": "Keys",
						"Tag": "json:\"keys\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ModelUnset"
			},
			"github.com/juju/juju/apiserver/params#ModelUserInfo": {
				"Fields": [
					{
						"Name": "UserName",
						"Tag": "json:\"user\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "DisplayName",
						"Tag": "json:\"display-name\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "LastConnection",
						"Tag": "json:\"last-connection\"",
						"Type": {
							"Elem": {
								"Name": "time#Time"
							},
							"Kind": "ptr"
						}
					},
					{
						"Name": "Access",
						"Tag": "json:\"access\"",
						"Type": {
							"Name": "github.com/juju/juju/apiserver/params#ModelAccessPermission"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ModelUserInfo"
			},
			"github.com/juju/juju/apiserver/params#ModelUserInfoResult": {
				"Fields": [
					{
						"Name": "Result",
						"Tag": "json:\"result,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#ModelUserInfo"
							},
							"Kind": "ptr"
						}
					},
					{
						"Name": "Error",
						"Tag": "json:\"error,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Error"
							},
							"Kind": "ptr"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ModelUserInfoResult"
			},
			"github.com/juju/juju/apiserver/params#ModelUserInfoResults": {
				"Fields": [
					{
						"Name": "Results",
						"Tag": "json:\"results\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#ModelUserInfoResult"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ModelUserInfoResults"
			},
			"github.com/juju/juju/apiserver/params#ModifyModelAccess": {
				"Fields": [
					{
						"Name": "UserTag",
						"Tag": "json:\"user-tag\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Action",
						"Tag": "json:\"action\"",
						"Type": {
							"Name": "github.com/juju/juju/apiserver/params#ModelAction"
						}
					},
					{
						"Name": "Access",
						"Tag": "json:\"access\"",
						"Type": {
							"Name": "github.com/juju/juju/apiserver/params#ModelAccessPermission"
						}
					},
					{
						"Name": "ModelTag",
						"Tag": "json:\"model-tag\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ModifyModelAccess"
			},
			"github.com/juju/juju/apiserver/params#ModifyModelAccessRequest": {
				"Fields": [
					{
						"Name": "Changes",
						"Tag": "json:\"changes\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#ModifyModelAccess"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ModifyModelAccessRequest"
			},
			"github.com/juju/juju/apiserver/params#ModifyUserSSHKeys": {
				"Fields": [
					{
						"Name": "User",
						"Tag": "json:\"user\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Keys",
						"Tag": "json:\"ssh-keys\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ModifyUserSSHKeys"
			},
			"github.com/juju/juju/apiserver/params#MongoUpgradeResults": {
				"Fields": [
					{
						"Name": "RsMembers",
						"Tag": "json:\"rs-members\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/replicaset#Member"
							},
							"Kind": "slice"
						}
					},
					{
						"Name": "Master",
						"Tag": "json:\"master\"",
						"Type": {
							"Name": "github.com/juju/juju/apiserver/params#HAMember"
						}
					},
					{
						"Name": "Members",
						"Tag": "json:\"ha-members\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#HAMember"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#MongoUpgradeResults"
			},
			"github.com/juju/juju/apiserver/params#NetworkConfig": {
				"Fields": [
					{
						"Name": "DeviceIndex",
						"Tag": "json:\"device-index\"",
						"Type": {
							"Kind": "int",
							"Name": "int"
						}
					},
					{
						"Name": "MACAddress",
						"Tag": "json:\"mac-address\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "CIDR",
						"Tag": "json:\"cidr\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "MTU",
						"Tag": "json:\"mtu\"",
						"Type": {
							"Kind": "int",
							"Name": "int"
						}
					},
					{
						"Name": "ProviderId",
						"Tag": "json:\"provider-id\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "ProviderSubnetId",
						"Tag": "json:\"provider-subnet-id\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "ProviderSpaceId",
						"Tag": "json:\"provider-space-id\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "ProviderAddressId",
						"Tag": "json:\"provider-address-id\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "ProviderVLANId",
						"Tag": "json:\"provider-vlan-id\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "VLANTag",
						"Tag": "json:\"vlan-tag\"",
						"Type": {
							"Kind": "int",
							"Name": "int"
						}
					},
					{
						"Name": "InterfaceName",
						"Tag": "json:\"interface-name\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "ParentInterfaceName",
						"Tag": "json:\"parent-interface-name\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "InterfaceType",
						"Tag": "json:\"interface-type\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Disabled",
						"Tag": "json:\"disabled\"",
						"Type": {
							"Kind": "bool",
							"Name": "bool"
						}
					},
					{
						"Name": "NoAutoStart",
						"Tag": "json:\"no-auto-start,omitempty\"",
						"Type": {
							"Kind": "bool",
							"Name": "bool"
						}
					},
					{
						"Name": "ConfigType",
						"Tag": "json:\"config-type,omitempty\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Address",
						"Tag": "json:\"address,omitempty\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "DNSServers",
						"Tag": "json:\"dns-servers,omitempty\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "slice"
						}
					},
					{
						"Name": "DNSSearchDomains",
						"Tag": "json:\"dns-search-domains,omitempty\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "slice"
						}
					},
					{
						"Name": "GatewayAddress",
						"Tag": "json:\"gateway-address,omitempty\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#NetworkConfig"
			},
			"github.com/juju/juju/apiserver/params#NotifyWatchResult": {
				"Fields": [
					{
						"Name": "NotifyWatcherId",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Error",
						"Tag": "json:\"error,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Error"
							},
							"Kind": "ptr"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#NotifyWatchResult"
			},
			"github.com/juju/juju/apiserver/params#NotifyWatchResults": {
				"Fields": [
					{
						"Name": "Results",
						"Tag": "json:\"results\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#NotifyWatchResult"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#NotifyWatchResults"
			},
			"github.com/juju/juju/apiserver/params#PhaseResult": {
				"Fields": [
					{
						"Name": "Phase",
						"Tag": "json:\"phase,omitempty\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Error",
						"Tag": "json:\"error,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Error"
							},
							"Kind": "ptr"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#PhaseResult"
			},
			"github.com/juju/juju/apiserver/params#PhaseResults": {
				"Fields": [
					{
						"Name": "Results",
						"Tag": "json:\"results\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#PhaseResult"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#PhaseResults"
			},
			"github.com/juju/juju/apiserver/params#PortRange": {
				"Fields": [
					{
						"Name": "FromPort",
						"Tag": "json:\"from-port\"",
						"Type": {
							"Kind": "int",
							"Name": "int"
						}
					},
					{
						"Name": "ToPort",
						"Tag": "json:\"to-port\"",
						"Type": {
							"Kind": "int",
							"Name": "int"
						}
					},
					{
						"Name": "Protocol",
						"Tag": "json:\"protocol\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Methods": {
					"NetworkPortRange": {
						"Name": "NetworkPortRange",
						"PtrReceiver": false,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Name": "github.com/juju/juju/network#PortRange"
								}
							]
						}
					}
				},
				"Name": "github.com/juju/juju/apiserver/params#PortRange"
			},
			"github.com/juju/juju/apiserver/params#PrivateAddress": {
				"Fields": [
					{
						"Name": "Target",
						"Tag": "json:\"target\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#PrivateAddress"
			},
			"github.com/juju/juju/apiserver/params#PrivateAddressResults": {
				"Fields": [
					{
						"Name": "PrivateAddress",
						"Tag": "json:\"private-address\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#PrivateAddressResults"
			},
			"github.com/juju/juju/apiserver/params#ProviderSpace": {
				"Fields": [
					{
						"Name": "Name",
						"Tag": "json:\"name\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "ProviderId",
						"Tag": "json:\"provider-id\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Subnets",
						"Tag": "json:\"subnets\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Subnet"
							},
							"Kind": "slice"
						}
					},
					{
						"Name": "Error",
						"Tag": "json:\"error,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Error"
							},
							"Kind": "ptr"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ProviderSpace"
			},
			"github.com/juju/juju/apiserver/params#ProvisioningInfo": {
				"Fields": [
					{
						"Name": "Constraints",
						"Tag": "json:\"constraints\"",
						"Type": {
							"Name": "github.com/juju/juju/constraints#Value"
						}
					},
					{
						"Name": "Series",
						"Tag": "json:\"series\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Placement",
						"Tag": "json:\"placement\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Jobs",
						"Tag": "json:\"jobs\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/state/multiwatcher#MachineJob"
							},
							"Kind": "slice"
						}
					},
					{
						"Name": "Volumes",
						"Tag": "json:\"volumes,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#VolumeParams"
							},
							"Kind": "slice"
						}
					},
					{
						"Name": "Tags",
						"Tag": "json:\"tags,omitempty\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Key": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "map"
						}
					},
					{
						"Name": "SubnetsToZones",
						"Tag": "json:\"subnets-to-zones,omitempty\"",
						"Type": {
							"Elem": {
								"Elem": {
									"Kind": "string",
									"Name": "string"
								},
								"Kind": "slice"
							},
							"Key": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "map"
						}
					},
					{
						"Name": "ImageMetadata",
						"Tag": "json:\"image-metadata,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#CloudImageMetadata"
							},
							"Kind": "slice"
						}
					},
					{
						"Name": "EndpointBindings",
						"Tag": "json:\"endpoint-bindings,omitempty\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Key": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "map"
						}
					},
					{
						"Name": "ControllerConfig",
						"Tag": "json:\"controller-config,omitempty\"",
						"Type": {
							"Elem": {
								"Kind": "interface"
							},
							"Key": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "map"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ProvisioningInfo"
			},
			"github.com/juju/juju/apiserver/params#ProvisioningInfoResult": {
				"Fields": [
					{
						"Name": "Error",
						"Tag": "json:\"error,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Error"
							},
							"Kind": "ptr"
						}
					},
					{
						"Name": "Result",
						"Tag": "json:\"result\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#ProvisioningInfo"
							},
							"Kind": "ptr"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ProvisioningInfoResult"
			},
			"github.com/juju/juju/apiserver/params#ProvisioningInfoResults": {
				"Fields": [
					{
						"Name": "Results",
						"Tag": "json:\"results\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#ProvisioningInfoResult"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ProvisioningInfoResults"
			},
			"github.com/juju/juju/apiserver/params#ProvisioningScriptParams": {
				"Fields": [
					{
						"Name": "MachineId",
						"Tag": "json:\"machine-id\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Nonce",
						"Tag": "json:\"nonce\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "DataDir",
						"Tag": "json:\"data-dir\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "DisablePackageCommands",
						"Tag": "json:\"disable-package-commands\"",
						"Type": {
							"Kind": "bool",
							"Name": "bool"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ProvisioningScriptParams"
			},
			"github.com/juju/juju/apiserver/params#ProvisioningScriptResult": {
				"Fields": [
					{
						"Name": "Script",
						"Tag": "json:\"script\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ProvisioningScriptResult"
			},
			"github.com/juju/juju/apiserver/params#ProxyConfig": {
				"Fields": [
					{
						"Name": "HTTP",
						"Tag": "json:\"http\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "HTTPS",
						"Tag": "json:\"https\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "FTP",
						"Tag": "json:\"ftp\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "NoProxy",
						"Tag": "json:\"no-proxy\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ProxyConfig"
			},
			"github.com/juju/juju/apiserver/params#ProxyConfigResult": {
				"Fields": [
					{
						"Name": "ProxySettings",
						"Tag": "json:\"proxy-settings\"",
						"Type": {
							"Name": "github.com/juju/juju/apiserver/params#ProxyConfig"
						}
					},
					{
						"Name": "APTProxySettings",
						"Tag": "json:\"apt-proxy-settings\"",
						"Type": {
							"Name": "github.com/juju/juju/apiserver/params#ProxyConfig"
						}
					},
					{
						"Name": "Error",
						"Tag": "json:\"error,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Error"
							},
							"Kind": "ptr"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ProxyConfigResult"
			},
			"github.com/juju/juju/apiserver/params#ProxyConfigResults": {
				"Fields": [
					{
						"Name": "Results",
						"Tag": "json:\"results\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#ProxyConfigResult"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ProxyConfigResults"
			},
			"github.com/juju/juju/apiserver/params#PublicAddress": {
				"Fields": [
					{
						"Name": "Target",
						"Tag": "json:\"target\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#PublicAddress"
			},
			"github.com/juju/juju/apiserver/params#PublicAddressResults": {
				"Fields": [
					{
						"Name": "PublicAddress",
						"Tag": "json:\"public-address\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#PublicAddressResults"
			},
			"github.com/juju/juju/apiserver/params#RebootAction": {
				"Kind": "string",
				"Name": "github.com/juju/juju/apiserver/params#RebootAction"
			},
			"github.com/juju/juju/apiserver/params#RebootActionResult": {
				"Fields": [
					{
						"Name": "Result",
						"Tag": "json:\"result,omitempty\"",
						"Type": {
							"Name": "github.com/juju/juju/apiserver/params#RebootAction"
						}
					},
					{
						"Name": "Error",
						"Tag": "json:\"error,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Error"
							},
							"Kind": "ptr"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#RebootActionResult"
			},
			"github.com/juju/juju/apiserver/params#RebootActionResults": {
				"Fields": [
					{
						"Name": "Results",
						"Tag": "json:\"results,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#RebootActionResult"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#RebootActionResults"
			},
			"github.com/juju/juju/apiserver/params#RedirectInfoResult": {
				"Fields": [
					{
						"Name": "Servers",
						"Tag": "json:\"servers\"",
						"Type": {
							"Elem": {
								"Elem": {
									"Name": "github.com/juju/juju/apiserver/params#HostPort"
								},
								"Kind": "slice"
							},
							"Kind": "slice"
						}
					},
					{
						"Name": "CACert",
						"Tag": "json:\"ca-cert\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#RedirectInfoResult"
			},
			"github.com/juju/juju/apiserver/params#RelationIds": {
				"Fields": [
					{
						"Name": "RelationIds",
						"Tag": "json:\"relation-ids\"",
						"Type": {
							"Elem": {
								"Kind": "int",
								"Name": "int"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#RelationIds"
			},
			"github.com/juju/juju/apiserver/params#RelationResult": {
				"Fields": [
					{
						"Name": "Error",
						"Tag": "json:\"error,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Error"
							},
							"Kind": "ptr"
						}
					},
					{
						"Name": "Life",
						"Tag": "json:\"life\"",
						"Type": {
							"Name": "github.com/juju/juju/apiserver/params#Life"
						}
					},
					{
						"Name": "Id",
						"Tag": "json:\"id\"",
						"Type": {
							"Kind": "int",
							"Name": "int"
						}
					},
					{
						"Name": "Key",
						"Tag": "json:\"key\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Endpoint",
						"Tag": "json:\"endpoint\"",
						"Type": {
							"Name": "github.com/juju/juju/state/multiwatcher#Endpoint"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#RelationResult"
			},
			"github.com/juju/juju/apiserver/params#RelationResults": {
				"Fields": [
					{
						"Name": "Results",
						"Tag": "json:\"results\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#RelationResult"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#RelationResults"
			},
			"github.com/juju/juju/apiserver/params#RelationStatus": {
				"Fields": [
					{
						"Name": "Id",
						"Tag": "json:\"id\"",
						"Type": {
							"Kind": "int",
							"Name": "int"
						}
					},
					{
						"Name": "Key",
						"Tag": "json:\"key\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Interface",
						"Tag": "json:\"interface\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Scope",
						"Tag": "json:\"scope\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Endpoints",
						"Tag": "json:\"endpoints\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#EndpointStatus"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#RelationStatus"
			},
			"github.com/juju/juju/apiserver/params#RelationUnit": {
				"Fields": [
					{
						"Name": "Relation",
						"Tag": "json:\"relation\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Unit",
						"Tag": "json:\"unit\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#RelationUnit"
			},
			"github.com/juju/juju/apiserver/params#RelationUnitPair": {
				"Fields": [
					{
						"Name": "Relation",
						"Tag": "json:\"relation\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "LocalUnit",
						"Tag": "json:\"local-unit\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "RemoteUnit",
						"Tag": "json:\"remote-unit\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#RelationUnitPair"
			},
			"github.com/juju/juju/apiserver/params#RelationUnitPairs": {
				"Fields": [
					{
						"Name": "RelationUnitPairs",
						"Tag": "json:\"relation-unit-pairs\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#RelationUnitPair"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#RelationUnitPairs"
			},
			"github.com/juju/juju/apiserver/params#RelationUnitSettings": {
				"Fields": [
					{
						"Name": "Relation",
						"Tag": "json:\"relation\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Unit",
						"Tag": "json:\"unit\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Settings",
						"Tag": "json:\"settings\"",
						"Type": {
							"Name": "github.com/juju/juju/apiserver/params#Settings"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#RelationUnitSettings"
			},
			"github.com/juju/juju/apiserver/params#RelationUnits": {
				"Fields": [
					{
						"Name": "RelationUnits",
						"Tag": "json:\"relation-units\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#RelationUnit"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#RelationUnits"
			},
			"github.com/juju/juju/apiserver/params#RelationUnitsChange": {
				"Fields": [
					{
						"Name": "Changed",
						"Tag": "json:\"changed\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#UnitSettings"
							},
							"Key": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "map"
						}
					},
					{
						"Name": "Departed",
						"Tag": "json:\"departed,omitempty\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#RelationUnitsChange"
			},
			"github.com/juju/juju/apiserver/params#RelationUnitsSettings": {
				"Fields": [
					{
						"Name": "RelationUnits",
						"Tag": "json:\"relation-units\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#RelationUnitSettings"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#RelationUnitsSettings"
			},
			"github.com/juju/juju/apiserver/params#RelationUnitsWatchResult": {
				"Fields": [
					{
						"Name": "RelationUnitsWatcherId",
						"Tag": "json:\"watcher-id\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Changes",
						"Tag": "json:\"changes\"",
						"Type": {
							"Name": "github.com/juju/juju/apiserver/params#RelationUnitsChange"
						}
					},
					{
						"Name": "Error",
						"Tag": "json:\"error,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Error"
							},
							"Kind": "ptr"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#RelationUnitsWatchResult"
			},
			"github.com/juju/juju/apiserver/params#RelationUnitsWatchResults": {
				"Fields": [
					{
						"Name": "Results",
						"Tag": "json:\"results\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#RelationUnitsWatchResult"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#RelationUnitsWatchResults"
			},
			"github.com/juju/juju/apiserver/params#RemoveBlocksArgs": {
				"Fields": [
					{
						"Name": "All",
						"Tag": "json:\"all\"",
						"Type": {
							"Kind": "bool",
							"Name": "bool"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#RemoveBlocksArgs"
			},
			"github.com/juju/juju/apiserver/params#ResolveCharmResult": {
				"Fields": [
					{
						"Name": "URL",
						"Tag": "json:\"url,omitempty\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Error",
						"Tag": "json:\"error,omitempty\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ResolveCharmResult"
			},
			"github.com/juju/juju/apiserver/params#ResolveCharmResults": {
				"Fields": [
					{
						"Name": "URLs",
						"Tag": "json:\"urls\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#ResolveCharmResult"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ResolveCharmResults"
			},
			"github.com/juju/juju/apiserver/params#ResolveCharms": {
				"Fields": [
					{
						"Name": "References",
						"Tag": "json:\"references\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ResolveCharms"
			},
			"github.com/juju/juju/apiserver/params#Resolved": {
				"Fields": [
					{
						"Name": "UnitName",
						"Tag": "json:\"unit-name\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Retry",
						"Tag": "json:\"retry\"",
						"Type": {
							"Kind": "bool",
							"Name": "bool"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#Resolved"
			},
			"github.com/juju/juju/apiserver/params#ResolvedMode": {
				"Kind": "string",
				"Name": "github.com/juju/juju/apiserver/params#ResolvedMode"
			},
			"github.com/juju/juju/apiserver/params#ResolvedModeResult": {
				"Fields": [
					{
						"Name": "Error",
						"Tag": "json:\"error,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Error"
							},
							"Kind": "ptr"
						}
					},
					{
						"Name": "Mode",
						"Tag": "json:\"mode\"",
						"Type": {
							"Name": "github.com/juju/juju/apiserver/params#ResolvedMode"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ResolvedModeResult"
			},
			"github.com/juju/juju/apiserver/params#ResolvedModeResults": {
				"Fields": [
					{
						"Name": "Results",
						"Tag": "json:\"results\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#ResolvedModeResult"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ResolvedModeResults"
			},
			"github.com/juju/juju/apiserver/params#RestoreArgs": {
				"Fields": [
					{
						"Name": "BackupId",
						"Tag": "json:\"backup-id\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#RestoreArgs"
			},
			"github.com/juju/juju/apiserver/params#ResumeReplicationParams": {
				"Fields": [
					{
						"Name": "Members",
						"Tag": "json:\"members\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/replicaset#Member"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ResumeReplicationParams"
			},
			"github.com/juju/juju/apiserver/params#RetryStrategy": {
				"Fields": [
					{
						"Name": "ShouldRetry",
						"Tag": "json:\"should-retry\"",
						"Type": {
							"Kind": "bool",
							"Name": "bool"
						}
					},
					{
						"Name": "MinRetryTime",
						"Tag": "json:\"min-retry-time\"",
						"Type": {
							"Name": "time#Duration"
						}
					},
					{
						"Name": "MaxRetryTime",
						"Tag": "json:\"max-retry-time\"",
						"Type": {
							"Name": "time#Duration"
						}
					},
					{
						"Name": "JitterRetryTime",
						"Tag": "json:\"jitter-retry-time\"",
						"Type": {
							"Kind": "bool",
							"Name": "bool"
						}
					},
					{
						"Name": "RetryTimeFactor",
						"Tag": "json:\"retry-time-factor\"",
						"Type": {
							"Kind": "int64",
							"Name": "int64"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#RetryStrategy"
			},
			"github.com/juju/juju/apiserver/params#RetryStrategyResult": {
				"Fields": [
					{
						"Name": "Error",
						"Tag": "json:\"error,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Error"
							},
							"Kind": "ptr"
						}
					},
					{
						"Name": "Result",
						"Tag": "json:\"result,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#RetryStrategy"
							},
							"Kind": "ptr"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#RetryStrategyResult"
			},
			"github.com/juju/juju/apiserver/params#RetryStrategyResults": {
				"Fields": [
					{
						"Name": "Results",
						"Tag": "json:\"results\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#RetryStrategyResult"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#RetryStrategyResults"
			},
			"github.com/juju/juju/apiserver/params#RunParams": {
				"Fields": [
					{
						"Name": "Commands",
						"Tag": "json:\"commands\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Timeout",
						"Tag": "json:\"timeout\"",
						"Type": {
							"Name": "time#Duration"
						}
					},
					{
						"Name": "Machines",
						"Tag": "json:\"machines,omitempty\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "slice"
						}
					},
					{
						"Name": "Applications",
						"Tag": "json:\"applications,omitempty\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "slice"
						}
					},
					{
						"Name": "Units",
						"Tag": "json:\"units,omitempty\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#RunParams"
			},
			"github.com/juju/juju/apiserver/params#SSHAddressResult": {
				"Fields": [
					{
						"Name": "Error",
						"Tag": "json:\"error,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Error"
							},
							"Kind": "ptr"
						}
					},
					{
						"Name": "Address",
						"Tag": "json:\"address,omitempty\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#SSHAddressResult"
			},
			"github.com/juju/juju/apiserver/params#SSHAddressResults": {
				"Fields": [
					{
						"Name": "Results",
						"Tag": "json:\"results\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#SSHAddressResult"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#SSHAddressResults"
			},
			"github.com/juju/juju/apiserver/params#SSHHostKeySet": {
				"Fields": [
					{
						"Name": "EntityKeys",
						"Tag": "json:\"entity-keys\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#SSHHostKeys"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#SSHHostKeySet"
			},
			"github.com/juju/juju/apiserver/params#SSHHostKeys": {
				"Fields": [
					{
						"Name": "Tag",
						"Tag": "json:\"tag\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "PublicKeys",
						"Tag": "json:\"public-keys\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#SSHHostKeys"
			},
			"github.com/juju/juju/apiserver/params#SSHProxyResult": {
				"Fields": [
					{
						"Name": "UseProxy",
						"Tag": "json:\"use-proxy\"",
						"Type": {
							"Kind": "bool",
							"Name": "bool"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#SSHProxyResult"
			},
			"github.com/juju/juju/apiserver/params#SSHPublicKeysResult": {
				"Fields": [
					{
						"Name": "Error",
						"Tag": "json:\"error,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Error"
							},
							"Kind": "ptr"
						}
					},
					{
						"Name": "PublicKeys",
						"Tag": "json:\"public-keys,omitempty\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#SSHPublicKeysResult"
			},
			"github.com/juju/juju/apiserver/params#SSHPublicKeysResults": {
				"Fields": [
					{
						"Name": "Results",
						"Tag": "json:\"results\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#SSHPublicKeysResult"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#SSHPublicKeysResults"
			},
			"github.com/juju/juju/apiserver/params#SerializedModel": {
				"Fields": [
					{
						"Name": "Bytes",
						"Tag": "json:\"bytes\"",
						"Type": {
							"Elem": {
								"Kind": "uint8",
								"Name": "uint8"
							},
							"Kind": "slice"
						}
					},
					{
						"Name": "Charms",
						"Tag": "json:\"charms\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "slice"
						}
					},
					{
						"Name": "Tools",
						"Tag": "json:\"tools\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#SerializedModelTools"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#SerializedModel"
			},
			"github.com/juju/juju/apiserver/params#SerializedModelTools": {
				"Fields": [
					{
						"Name": "Version",
						"Tag": "json:\"version\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "URI",
						"Tag": "json:\"uri\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#SerializedModelTools"
			},
			"github.com/juju/juju/apiserver/params#SetConstraints": {
				"Fields": [
					{
						"Name": "ApplicationName",
						"Tag": "json:\"application\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Constraints",
						"Tag": "json:\"constraints\"",
						"Type": {
							"Name": "github.com/juju/juju/constraints#Value"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#SetConstraints"
			},
			"github.com/juju/juju/apiserver/params#SetMachineBlockDevices": {
				"Fields": [
					{
						"Name": "MachineBlockDevices",
						"Tag": "json:\"machine-block-devices\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#MachineBlockDevices"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#SetMachineBlockDevices"
			},
			"github.com/juju/juju/apiserver/params#SetMachineNetworkConfig": {
				"Fields": [
					{
						"Name": "Tag",
						"Tag": "json:\"tag\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Config",
						"Tag": "json:\"config\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#NetworkConfig"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#SetMachineNetworkConfig"
			},
			"github.com/juju/juju/apiserver/params#SetMachinesAddresses": {
				"Fields": [
					{
						"Name": "MachineAddresses",
						"Tag": "json:\"machine-addresses\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#MachineAddresses"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#SetMachinesAddresses"
			},
			"github.com/juju/juju/apiserver/params#SetMigrationPhaseArgs": {
				"Fields": [
					{
						"Name": "Phase",
						"Tag": "json:\"phase\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#SetMigrationPhaseArgs"
			},
			"github.com/juju/juju/apiserver/params#SetModelAgentVersion": {
				"Fields": [
					{
						"Name": "Version",
						"Tag": "json:\"version\"",
						"Type": {
							"Name": "github.com/juju/version#Number"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#SetModelAgentVersion"
			},
			"github.com/juju/juju/apiserver/params#SetStatus": {
				"Fields": [
					{
						"Name": "Entities",
						"Tag": "json:\"entities\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#EntityStatusArgs"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#SetStatus"
			},
			"github.com/juju/juju/apiserver/params#Settings": {
				"Elem": {
					"Kind": "string",
					"Name": "string"
				},
				"Key": {
					"Kind": "string",
					"Name": "string"
				},
				"Kind": "map",
				"Name": "github.com/juju/juju/apiserver/params#Settings"
			},
			"github.com/juju/juju/apiserver/params#SettingsResult": {
				"Fields": [
					{
						"Name": "Error",
						"Tag": "json:\"error,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Error"
							},
							"Kind": "ptr"
						}
					},
					{
						"Name": "Settings",
						"Tag": "json:\"settings\"",
						"Type": {
							"Name": "github.com/juju/juju/apiserver/params#Settings"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#SettingsResult"
			},
			"github.com/juju/juju/apiserver/params#SettingsResults": {
				"Fields": [
					{
						"Name": "Results",
						"Tag": "json:\"results\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#SettingsResult"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#SettingsResults"
			},
			"github.com/juju/juju/apiserver/params#SingularClaim": {
				"Fields": [
					{
						"Name": "ModelTag",
						"Tag": "json:\"model-tag\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "ControllerTag",
						"Tag": "json:\"controller-tag\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Duration",
						"Tag": "json:\"duration\"",
						"Type": {
							"Name": "time#Duration"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#SingularClaim"
			},
			"github.com/juju/juju/apiserver/params#SingularClaims": {
				"Fields": [
					{
						"Name": "Claims",
						"Tag": "json:\"claims\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#SingularClaim"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#SingularClaims"
			},
			"github.com/juju/juju/apiserver/params#Space": {
				"Fields": [
					{
						"Name": "Name",
						"Tag": "json:\"name\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Subnets",
						"Tag": "json:\"subnets\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Subnet"
							},
							"Kind": "slice"
						}
					},
					{
						"Name": "Error",
						"Tag": "json:\"error,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Error"
							},
							"Kind": "ptr"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#Space"
			},
			"github.com/juju/juju/apiserver/params#SpaceResult": {
				"Fields": [
					{
						"Name": "Error",
						"Tag": "json:\"error,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Error"
							},
							"Kind": "ptr"
						}
					},
					{
						"Name": "Tag",
						"Tag": "json:\"tag\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#SpaceResult"
			},
			"github.com/juju/juju/apiserver/params#SpaceResults": {
				"Fields": [
					{
						"Name": "Results",
						"Tag": "json:\"results\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#SpaceResult"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#SpaceResults"
			},
			"github.com/juju/juju/apiserver/params#StateServingInfo": {
				"Fields": [
					{
						"Name": "APIPort",
						"Tag": "json:\"api-port\"",
						"Type": {
							"Kind": "int",
							"Name": "int"
						}
					},
					{
						"Name": "StatePort",
						"Tag": "json:\"state-port\"",
						"Type": {
							"Kind": "int",
							"Name": "int"
						}
					},
					{
						"Name": "Cert",
						"Tag": "json:\"cert\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "PrivateKey",
						"Tag": "json:\"private-key\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "CAPrivateKey",
						"Tag": "json:\"ca-private-key\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "SharedSecret",
						"Tag": "json:\"shared-secret\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "SystemIdentity",
						"Tag": "json:\"system-identity\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#StateServingInfo"
			},
			"github.com/juju/juju/apiserver/params#StatusHistoryFilter": {
				"Fields": [
					{
						"Name": "Size",
						"Tag": "json:\"size\"",
						"Type": {
							"Kind": "int",
							"Name": "int"
						}
					},
					{
						"Name": "Date",
						"Tag": "json:\"date\"",
						"Type": {
							"Elem": {
								"Name": "time#Time"
							},
							"Kind": "ptr"
						}
					},
					{
						"Name": "Delta",
						"Tag": "json:\"delta\"",
						"Type": {
							"Elem": {
								"Name": "time#Duration"
							},
							"Kind": "ptr"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#StatusHistoryFilter"
			},
			"github.com/juju/juju/apiserver/params#StatusHistoryPruneArgs": {
				"Fields": [
					{
						"Name": "MaxHistoryTime",
						"Tag": "json:\"max-history-time\"",
						"Type": {
							"Name": "time#Duration"
						}
					},
					{
						"Name": "MaxHistoryMB",
						"Tag": "json:\"max-history-mb\"",
						"Type": {
							"Kind": "int",
							"Name": "int"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#StatusHistoryPruneArgs"
			},
			"github.com/juju/juju/apiserver/params#StatusHistoryRequest": {
				"Fields": [
					{
						"Name": "Kind",
						"Tag": "json:\"historyKind\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Size",
						"Tag": "json:\"size\"",
						"Type": {
							"Kind": "int",
							"Name": "int"
						}
					},
					{
						"Name": "Filter",
						"Tag": "json:\"filter\"",
						"Type": {
							"Name": "github.com/juju/juju/apiserver/params#StatusHistoryFilter"
						}
					},
					{
						"Name": "Tag",
						"Tag": "json:\"tag\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#StatusHistoryRequest"
			},
			"github.com/juju/juju/apiserver/params#StatusHistoryRequests": {
				"Fields": [
					{
						"Name": "Requests",
						"Tag": "json:\"requests\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#StatusHistoryRequest"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#StatusHistoryRequests"
			},
			"github.com/juju/juju/apiserver/params#StatusHistoryResult": {
				"Fields": [
					{
						"Name": "History",
						"Tag": "json:\"history\"",
						"Type": {
							"Name": "github.com/juju/juju/apiserver/params#History"
						}
					},
					{
						"Name": "Error",
						"Tag": "json:\"error,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Error"
							},
							"Kind": "ptr"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#StatusHistoryResult"
			},
			"github.com/juju/juju/apiserver/params#StatusHistoryResults": {
				"Fields": [
					{
						"Name": "Results",
						"Tag": "json:\"results\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#StatusHistoryResult"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#StatusHistoryResults"
			},
			"github.com/juju/juju/apiserver/params#StatusParams": {
				"Fields": [
					{
						"Name": "Patterns",
						"Tag": "json:\"patterns\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#StatusParams"
			},
			"github.com/juju/juju/apiserver/params#StatusResult": {
				"Fields": [
					{
						"Name": "Error",
						"Tag": "json:\"error,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Error"
							},
							"Kind": "ptr"
						}
					},
					{
						"Name": "Id",
						"Tag": "json:\"id\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Life",
						"Tag": "json:\"life\"",
						"Type": {
							"Name": "github.com/juju/juju/apiserver/params#Life"
						}
					},
					{
						"Name": "Status",
						"Tag": "json:\"status\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Info",
						"Tag": "json:\"info\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Data",
						"Tag": "json:\"data\"",
						"Type": {
							"Elem": {
								"Kind": "interface"
							},
							"Key": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "map"
						}
					},
					{
						"Name": "Since",
						"Tag": "json:\"since\"",
						"Type": {
							"Elem": {
								"Name": "time#Time"
							},
							"Kind": "ptr"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#StatusResult"
			},
			"github.com/juju/juju/apiserver/params#StatusResults": {
				"Fields": [
					{
						"Name": "Results",
						"Tag": "json:\"results\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#StatusResult"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#StatusResults"
			},
			"github.com/juju/juju/apiserver/params#StorageAddParams": {
				"Fields": [
					{
						"Name": "UnitTag",
						"Tag": "json:\"unit\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "StorageName",
						"Tag": "json:\"name\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Constraints",
						"Tag": "json:\"storage\"",
						"Type": {
							"Name": "github.com/juju/juju/apiserver/params#StorageConstraints"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#StorageAddParams"
			},
			"github.com/juju/juju/apiserver/params#StorageAttachment": {
				"Fields": [
					{
						"Name": "StorageTag",
						"Tag": "json:\"storage-tag\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "OwnerTag",
						"Tag": "json:\"owner-tag\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "UnitTag",
						"Tag": "json:\"unit-tag\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Kind",
						"Tag": "json:\"kind\"",
						"Type": {
							"Name": "github.com/juju/juju/apiserver/params#StorageKind"
						}
					},
					{
						"Name": "Location",
						"Tag": "json:\"location\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Life",
						"Tag": "json:\"life\"",
						"Type": {
							"Name": "github.com/juju/juju/apiserver/params#Life"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#StorageAttachment"
			},
			"github.com/juju/juju/apiserver/params#StorageAttachmentDetails": {
				"Fields": [
					{
						"Name": "StorageTag",
						"Tag": "json:\"storage-tag\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "UnitTag",
						"Tag": "json:\"unit-tag\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "MachineTag",
						"Tag": "json:\"machine-tag\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Location",
						"Tag": "json:\"location,omitempty\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#StorageAttachmentDetails"
			},
			"github.com/juju/juju/apiserver/params#StorageAttachmentId": {
				"Fields": [
					{
						"Name": "StorageTag",
						"Tag": "json:\"storage-tag\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "UnitTag",
						"Tag": "json:\"unit-tag\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#StorageAttachmentId"
			},
			"github.com/juju/juju/apiserver/params#StorageAttachmentIds": {
				"Fields": [
					{
						"Name": "Ids",
						"Tag": "json:\"ids\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#StorageAttachmentId"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#StorageAttachmentIds"
			},
			"github.com/juju/juju/apiserver/params#StorageAttachmentIdsResult": {
				"Fields": [
					{
						"Name": "Result",
						"Tag": "json:\"result\"",
						"Type": {
							"Name": "github.com/juju/juju/apiserver/params#StorageAttachmentIds"
						}
					},
					{
						"Name": "Error",
						"Tag": "json:\"error,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Error"
							},
							"Kind": "ptr"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#StorageAttachmentIdsResult"
			},
			"github.com/juju/juju/apiserver/params#StorageAttachmentIdsResults": {
				"Fields": [
					{
						"Name": "Results",
						"Tag": "json:\"results,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#StorageAttachmentIdsResult"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#StorageAttachmentIdsResults"
			},
			"github.com/juju/juju/apiserver/params#StorageAttachmentResult": {
				"Fields": [
					{
						"Name": "Result",
						"Tag": "json:\"result\"",
						"Type": {
							"Name": "github.com/juju/juju/apiserver/params#StorageAttachment"
						}
					},
					{
						"Name": "Error",
						"Tag": "json:\"error,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Error"
							},
							"Kind": "ptr"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#StorageAttachmentResult"
			},
			"github.com/juju/juju/apiserver/params#StorageAttachmentResults": {
				"Fields": [
					{
						"Name": "Results",
						"Tag": "json:\"results,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#StorageAttachmentResult"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#StorageAttachmentResults"
			},
			"github.com/juju/juju/apiserver/params#StorageConstraints": {
				"Fields": [
					{
						"Name": "Pool",
						"Tag": "json:\"pool,omitempty\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Size",
						"Tag": "json:\"size,omitempty\"",
						"Type": {
							"Elem": {
								"Kind": "uint64",
								"Name": "uint64"
							},
							"Kind": "ptr"
						}
					},
					{
						"Name": "Count",
						"Tag": "json:\"count,omitempty\"",
						"Type": {
							"Elem": {
								"Kind": "uint64",
								"Name": "uint64"
							},
							"Kind": "ptr"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#StorageConstraints"
			},
			"github.com/juju/juju/apiserver/params#StorageDetails": {
				"Fields": [
					{
						"Name": "StorageTag",
						"Tag": "json:\"storage-tag\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "OwnerTag",
						"Tag": "json:\"owner-tag\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Kind",
						"Tag": "json:\"kind\"",
						"Type": {
							"Name": "github.com/juju/juju/apiserver/params#StorageKind"
						}
					},
					{
						"Name": "Status",
						"Tag": "json:\"status\"",
						"Type": {
							"Name": "github.com/juju/juju/apiserver/params#EntityStatus"
						}
					},
					{
						"Name": "Persistent",
						"Tag": "json:\"persistent\"",
						"Type": {
							"Kind": "bool",
							"Name": "bool"
						}
					},
					{
						"Name": "Attachments",
						"Tag": "json:\"attachments,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#StorageAttachmentDetails"
							},
							"Key": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "map"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#StorageDetails"
			},
			"github.com/juju/juju/apiserver/params#StorageDetailsListResult": {
				"Fields": [
					{
						"Name": "Result",
						"Tag": "json:\"result,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#StorageDetails"
							},
							"Kind": "slice"
						}
					},
					{
						"Name": "Error",
						"Tag": "json:\"error,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Error"
							},
							"Kind": "ptr"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#StorageDetailsListResult"
			},
			"github.com/juju/juju/apiserver/params#StorageDetailsListResults": {
				"Fields": [
					{
						"Name": "Results",
						"Tag": "json:\"results,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#StorageDetailsListResult"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#StorageDetailsListResults"
			},
			"github.com/juju/juju/apiserver/params#StorageDetailsResult": {
				"Fields": [
					{
						"Name": "Result",
						"Tag": "json:\"result,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#StorageDetails"
							},
							"Kind": "ptr"
						}
					},
					{
						"Name": "Error",
						"Tag": "json:\"error,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Error"
							},
							"Kind": "ptr"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#StorageDetailsResult"
			},
			"github.com/juju/juju/apiserver/params#StorageDetailsResults": {
				"Fields": [
					{
						"Name": "Results",
						"Tag": "json:\"results,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#StorageDetailsResult"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#StorageDetailsResults"
			},
			"github.com/juju/juju/apiserver/params#StorageFilter": {
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#StorageFilter"
			},
			"github.com/juju/juju/apiserver/params#StorageFilters": {
				"Fields": [
					{
						"Name": "Filters",
						"Tag": "json:\"filters,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#StorageFilter"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#StorageFilters"
			},
			"github.com/juju/juju/apiserver/params#StorageKind": {
				"Kind": "int",
				"Methods": {
					"String": {
						"Name": "String",
						"PtrReceiver": true,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Kind": "string",
									"Name": "string"
								}
							]
						}
					}
				},
				"Name": "github.com/juju/juju/apiserver/params#StorageKind"
			},
			"github.com/juju/juju/apiserver/params#StoragePool": {
				"Fields": [
					{
						"Name": "Name",
						"Tag": "json:\"name\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Provider",
						"Tag": "json:\"provider\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Attrs",
						"Tag": "json:\"attrs\"",
						"Type": {
							"Elem": {
								"Kind": "interface"
							},
							"Key": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "map"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#StoragePool"
			},
			"github.com/juju/juju/apiserver/params#StoragePoolFilter": {
				"Fields": [
					{
						"Name": "Names",
						"Tag": "json:\"names,omitempty\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "slice"
						}
					},
					{
						"Name": "Providers",
						"Tag": "json:\"providers,omitempty\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#StoragePoolFilter"
			},
			"github.com/juju/juju/apiserver/params#StoragePoolFilters": {
				"Fields": [
					{
						"Name": "Filters",
						"Tag": "json:\"filters,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#StoragePoolFilter"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#StoragePoolFilters"
			},
			"github.com/juju/juju/apiserver/params#StoragePoolsResult": {
				"Fields": [
					{
						"Name": "Result",
						"Tag": "json:\"storage-pools,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#StoragePool"
							},
							"Kind": "slice"
						}
					},
					{
						"Name": "Error",
						"Tag": "json:\"error,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Error"
							},
							"Kind": "ptr"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#StoragePoolsResult"
			},
			"github.com/juju/juju/apiserver/params#StoragePoolsResults": {
				"Fields": [
					{
						"Name": "Results",
						"Tag": "json:\"results,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#StoragePoolsResult"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#StoragePoolsResults"
			},
			"github.com/juju/juju/apiserver/params#StoragesAddParams": {
				"Fields": [
					{
						"Name": "Storages",
						"Tag": "json:\"storages\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#StorageAddParams"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#StoragesAddParams"
			},
			"github.com/juju/juju/apiserver/params#StringBoolResult": {
				"Fields": [
					{
						"Name": "Error",
						"Tag": "json:\"error,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Error"
							},
							"Kind": "ptr"
						}
					},
					{
						"Name": "Result",
						"Tag": "json:\"result\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Ok",
						"Tag": "json:\"ok\"",
						"Type": {
							"Kind": "bool",
							"Name": "bool"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#StringBoolResult"
			},
			"github.com/juju/juju/apiserver/params#StringBoolResults": {
				"Fields": [
					{
						"Name": "Results",
						"Tag": "json:\"results\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#StringBoolResult"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#StringBoolResults"
			},
			"github.com/juju/juju/apiserver/params#StringResult": {
				"Fields": [
					{
						"Name": "Error",
						"Tag": "json:\"error,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Error"
							},
							"Kind": "ptr"
						}
					},
					{
						"Name": "Result",
						"Tag": "json:\"result\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#StringResult"
			},
			"github.com/juju/juju/apiserver/params#StringResults": {
				"Fields": [
					{
						"Name": "Results",
						"Tag": "json:\"results\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#StringResult"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#StringResults"
			},
			"github.com/juju/juju/apiserver/params#StringsResult": {
				"Fields": [
					{
						"Name": "Error",
						"Tag": "json:\"error,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Error"
							},
							"Kind": "ptr"
						}
					},
					{
						"Name": "Result",
						"Tag": "json:\"result,omitempty\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#StringsResult"
			},
			"github.com/juju/juju/apiserver/params#StringsResults": {
				"Fields": [
					{
						"Name": "Results",
						"Tag": "json:\"results\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#StringsResult"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#StringsResults"
			},
			"github.com/juju/juju/apiserver/params#StringsWatchResult": {
				"Fields": [
					{
						"Name": "StringsWatcherId",
						"Tag": "json:\"watcher-id\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Changes",
						"Tag": "json:\"changes,omitempty\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "slice"
						}
					},
					{
						"Name": "Error",
						"Tag": "json:\"error,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Error"
							},
							"Kind": "ptr"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#StringsWatchResult"
			},
			"github.com/juju/juju/apiserver/params#StringsWatchResults": {
				"Fields": [
					{
						"Name": "Results",
						"Tag": "json:\"results\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#StringsWatchResult"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#StringsWatchResults"
			},
			"github.com/juju/juju/apiserver/params#Subnet": {
				"Fields": [
					{
						"Name": "CIDR",
						"Tag": "json:\"cidr\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "ProviderId",
						"Tag": "json:\"provider-id,omitempty\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "VLANTag",
						"Tag": "json:\"vlan-tag\"",
						"Type": {
							"Kind": "int",
							"Name": "int"
						}
					},
					{
						"Name": "Life",
						"Tag": "json:\"life\"",
						"Type": {
							"Name": "github.com/juju/juju/apiserver/params#Life"
						}
					},
					{
						"Name": "SpaceTag",
						"Tag": "json:\"space-tag\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Zones",
						"Tag": "json:\"zones\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "slice"
						}
					},
					{
						"Name": "Status",
						"Tag": "json:\"status,omitempty\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#Subnet"
			},
			"github.com/juju/juju/apiserver/params#SubnetsFilters": {
				"Fields": [
					{
						"Name": "SpaceTag",
						"Tag": "json:\"space-tag,omitempty\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Zone",
						"Tag": "json:\"zone,omitempty\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#SubnetsFilters"
			},
			"github.com/juju/juju/apiserver/params#ToolsResult": {
				"Fields": [
					{
						"Name": "ToolsList",
						"Tag": "json:\"tools\"",
						"Type": {
							"Name": "github.com/juju/juju/tools#List"
						}
					},
					{
						"Name": "DisableSSLHostnameVerification",
						"Tag": "json:\"disable-ssl-hostname-verification\"",
						"Type": {
							"Kind": "bool",
							"Name": "bool"
						}
					},
					{
						"Name": "Error",
						"Tag": "json:\"error,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Error"
							},
							"Kind": "ptr"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ToolsResult"
			},
			"github.com/juju/juju/apiserver/params#ToolsResults": {
				"Fields": [
					{
						"Name": "Results",
						"Tag": "json:\"results\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#ToolsResult"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ToolsResults"
			},
			"github.com/juju/juju/apiserver/params#UndertakerModelInfo": {
				"Fields": [
					{
						"Name": "UUID",
						"Tag": "json:\"uuid\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Name",
						"Tag": "json:\"name\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "GlobalName",
						"Tag": "json:\"global-name\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "IsSystem",
						"Tag": "json:\"is-system\"",
						"Type": {
							"Kind": "bool",
							"Name": "bool"
						}
					},
					{
						"Name": "Life",
						"Tag": "json:\"life\"",
						"Type": {
							"Name": "github.com/juju/juju/apiserver/params#Life"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#UndertakerModelInfo"
			},
			"github.com/juju/juju/apiserver/params#UndertakerModelInfoResult": {
				"Fields": [
					{
						"Name": "Error",
						"Tag": "json:\"error,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Error"
							},
							"Kind": "ptr"
						}
					},
					{
						"Name": "Result",
						"Tag": "json:\"result\"",
						"Type": {
							"Name": "github.com/juju/juju/apiserver/params#UndertakerModelInfo"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#UndertakerModelInfoResult"
			},
			"github.com/juju/juju/apiserver/params#UnitNetworkConfig": {
				"Fields": [
					{
						"Name": "UnitTag",
						"Tag": "json:\"unit-tag\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "BindingName",
						"Tag": "json:\"binding-name\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#UnitNetworkConfig"
			},
			"github.com/juju/juju/apiserver/params#UnitNetworkConfigResult": {
				"Fields": [
					{
						"Name": "Error",
						"Tag": "json:\"error,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Error"
							},
							"Kind": "ptr"
						}
					},
					{
						"Name": "Config",
						"Tag": "json:\"info\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#NetworkConfig"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#UnitNetworkConfigResult"
			},
			"github.com/juju/juju/apiserver/params#UnitNetworkConfigResults": {
				"Fields": [
					{
						"Name": "Results",
						"Tag": "json:\"results\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#UnitNetworkConfigResult"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#UnitNetworkConfigResults"
			},
			"github.com/juju/juju/apiserver/params#UnitSettings": {
				"Fields": [
					{
						"Name": "Version",
						"Tag": "json:\"version\"",
						"Type": {
							"Kind": "int64",
							"Name": "int64"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#UnitSettings"
			},
			"github.com/juju/juju/apiserver/params#UnitStatus": {
				"Fields": [
					{
						"Name": "AgentStatus",
						"Tag": "json:\"agent-status\"",
						"Type": {
							"Name": "github.com/juju/juju/apiserver/params#DetailedStatus"
						}
					},
					{
						"Name": "WorkloadStatus",
						"Tag": "json:\"workload-status\"",
						"Type": {
							"Name": "github.com/juju/juju/apiserver/params#DetailedStatus"
						}
					},
					{
						"Name": "WorkloadVersion",
						"Tag": "json:\"workload-version\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Machine",
						"Tag": "json:\"machine\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "OpenedPorts",
						"Tag": "json:\"opened-ports\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "slice"
						}
					},
					{
						"Name": "PublicAddress",
						"Tag": "json:\"public-address\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Charm",
						"Tag": "json:\"charm\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Subordinates",
						"Tag": "json:\"subordinates\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#UnitStatus"
							},
							"Key": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "map"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#UnitStatus"
			},
			"github.com/juju/juju/apiserver/params#UnitsNetworkConfig": {
				"Fields": [
					{
						"Name": "Args",
						"Tag": "json:\"args\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#UnitNetworkConfig"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#UnitsNetworkConfig"
			},
			"github.com/juju/juju/apiserver/params#UpdateBehavior": {
				"Fields": [
					{
						"Name": "EnableOSRefreshUpdate",
						"Tag": "json:\"enable-os-refresh-update\"",
						"Type": {
							"Kind": "bool",
							"Name": "bool"
						}
					},
					{
						"Name": "EnableOSUpgrade",
						"Tag": "json:\"enable-os-upgrade\"",
						"Type": {
							"Kind": "bool",
							"Name": "bool"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#UpdateBehavior"
			},
			"github.com/juju/juju/apiserver/params#UpgradeMongoParams": {
				"Fields": [
					{
						"Name": "Target",
						"Tag": "json:\"target\"",
						"Type": {
							"Name": "github.com/juju/juju/mongo#Version"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#UpgradeMongoParams"
			},
			"github.com/juju/juju/apiserver/params#UserCloud": {
				"Fields": [
					{
						"Name": "UserTag",
						"Tag": "json:\"user-tag\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "CloudTag",
						"Tag": "json:\"cloud-tag\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#UserCloud"
			},
			"github.com/juju/juju/apiserver/params#UserCloudCredentials": {
				"Fields": [
					{
						"Name": "UserTag",
						"Tag": "json:\"user-tag\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "CloudTag",
						"Tag": "json:\"cloud-tag\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Credentials",
						"Tag": "json:\"credentials\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#CloudCredential"
							},
							"Key": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "map"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#UserCloudCredentials"
			},
			"github.com/juju/juju/apiserver/params#UserClouds": {
				"Fields": [
					{
						"Name": "UserClouds",
						"Tag": "json:\"user-clouds,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#UserCloud"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#UserClouds"
			},
			"github.com/juju/juju/apiserver/params#UserInfo": {
				"Fields": [
					{
						"Name": "Username",
						"Tag": "json:\"username\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "DisplayName",
						"Tag": "json:\"display-name\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "CreatedBy",
						"Tag": "json:\"created-by\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "DateCreated",
						"Tag": "json:\"date-created\"",
						"Type": {
							"Name": "time#Time"
						}
					},
					{
						"Name": "LastConnection",
						"Tag": "json:\"last-connection,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "time#Time"
							},
							"Kind": "ptr"
						}
					},
					{
						"Name": "Disabled",
						"Tag": "json:\"disabled\"",
						"Type": {
							"Kind": "bool",
							"Name": "bool"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#UserInfo"
			},
			"github.com/juju/juju/apiserver/params#UserInfoRequest": {
				"Fields": [
					{
						"Name": "Entities",
						"Tag": "json:\"entities\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Entity"
							},
							"Kind": "slice"
						}
					},
					{
						"Name": "IncludeDisabled",
						"Tag": "json:\"include-disabled\"",
						"Type": {
							"Kind": "bool",
							"Name": "bool"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#UserInfoRequest"
			},
			"github.com/juju/juju/apiserver/params#UserInfoResult": {
				"Fields": [
					{
						"Name": "Result",
						"Tag": "json:\"result,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#UserInfo"
							},
							"Kind": "ptr"
						}
					},
					{
						"Name": "Error",
						"Tag": "json:\"error,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Error"
							},
							"Kind": "ptr"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#UserInfoResult"
			},
			"github.com/juju/juju/apiserver/params#UserInfoResults": {
				"Fields": [
					{
						"Name": "Results",
						"Tag": "json:\"results\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#UserInfoResult"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#UserInfoResults"
			},
			"github.com/juju/juju/apiserver/params#UserModel": {
				"Fields": [
					{
						"Anonymous": true,
						"Name": "Model",
						"Tag": "json:\"model\"",
						"Type": {
							"Name": "github.com/juju/juju/apiserver/params#Model"
						}
					},
					{
						"Name": "LastConnection",
						"Tag": "json:\"last-connection\"",
						"Type": {
							"Elem": {
								"Name": "time#Time"
							},
							"Kind": "ptr"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#UserModel"
			},
			"github.com/juju/juju/apiserver/params#UserModelList": {
				"Fields": [
					{
						"Name": "UserModels",
						"Tag": "json:\"user-models\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#UserModel"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#UserModelList"
			},
			"github.com/juju/juju/apiserver/params#UsersCloudCredentials": {
				"Fields": [
					{
						"Name": "Users",
						"Tag": "json:\"users\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#UserCloudCredentials"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#UsersCloudCredentials"
			},
			"github.com/juju/juju/apiserver/params#Version": {
				"Fields": [
					{
						"Name": "Version",
						"Tag": "json:\"version\"",
						"Type": {
							"Name": "github.com/juju/version#Binary"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#Version"
			},
			"github.com/juju/juju/apiserver/params#VersionResult": {
				"Fields": [
					{
						"Name": "Version",
						"Tag": "json:\"version,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/version#Number"
							},
							"Kind": "ptr"
						}
					},
					{
						"Name": "Error",
						"Tag": "json:\"error,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Error"
							},
							"Kind": "ptr"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#VersionResult"
			},
			"github.com/juju/juju/apiserver/params#VersionResults": {
				"Fields": [
					{
						"Name": "Results",
						"Tag": "json:\"results\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#VersionResult"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#VersionResults"
			},
			"github.com/juju/juju/apiserver/params#Volume": {
				"Fields": [
					{
						"Name": "VolumeTag",
						"Tag": "json:\"volume-tag\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Info",
						"Tag": "json:\"info\"",
						"Type": {
							"Name": "github.com/juju/juju/apiserver/params#VolumeInfo"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#Volume"
			},
			"github.com/juju/juju/apiserver/params#VolumeAttachment": {
				"Fields": [
					{
						"Name": "VolumeTag",
						"Tag": "json:\"volume-tag\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "MachineTag",
						"Tag": "json:\"machine-tag\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Info",
						"Tag": "json:\"info\"",
						"Type": {
							"Name": "github.com/juju/juju/apiserver/params#VolumeAttachmentInfo"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#VolumeAttachment"
			},
			"github.com/juju/juju/apiserver/params#VolumeAttachmentInfo": {
				"Fields": [
					{
						"Name": "DeviceName",
						"Tag": "json:\"device-name,omitempty\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "DeviceLink",
						"Tag": "json:\"device-link,omitempty\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "BusAddress",
						"Tag": "json:\"bus-address,omitempty\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "ReadOnly",
						"Tag": "json:\"read-only,omitempty\"",
						"Type": {
							"Kind": "bool",
							"Name": "bool"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#VolumeAttachmentInfo"
			},
			"github.com/juju/juju/apiserver/params#VolumeAttachmentParams": {
				"Fields": [
					{
						"Name": "VolumeTag",
						"Tag": "json:\"volume-tag\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "MachineTag",
						"Tag": "json:\"machine-tag\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "VolumeId",
						"Tag": "json:\"volume-id,omitempty\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "InstanceId",
						"Tag": "json:\"instance-id,omitempty\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Provider",
						"Tag": "json:\"provider\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "ReadOnly",
						"Tag": "json:\"read-only,omitempty\"",
						"Type": {
							"Kind": "bool",
							"Name": "bool"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#VolumeAttachmentParams"
			},
			"github.com/juju/juju/apiserver/params#VolumeAttachmentParamsResult": {
				"Fields": [
					{
						"Name": "Result",
						"Tag": "json:\"result\"",
						"Type": {
							"Name": "github.com/juju/juju/apiserver/params#VolumeAttachmentParams"
						}
					},
					{
						"Name": "Error",
						"Tag": "json:\"error,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Error"
							},
							"Kind": "ptr"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#VolumeAttachmentParamsResult"
			},
			"github.com/juju/juju/apiserver/params#VolumeAttachmentParamsResults": {
				"Fields": [
					{
						"Name": "Results",
						"Tag": "json:\"results,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#VolumeAttachmentParamsResult"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#VolumeAttachmentParamsResults"
			},
			"github.com/juju/juju/apiserver/params#VolumeAttachmentResult": {
				"Fields": [
					{
						"Name": "Result",
						"Tag": "json:\"result\"",
						"Type": {
							"Name": "github.com/juju/juju/apiserver/params#VolumeAttachment"
						}
					},
					{
						"Name": "Error",
						"Tag": "json:\"error,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Error"
							},
							"Kind": "ptr"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#VolumeAttachmentResult"
			},
			"github.com/juju/juju/apiserver/params#VolumeAttachmentResults": {
				"Fields": [
					{
						"Name": "Results",
						"Tag": "json:\"results,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#VolumeAttachmentResult"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#VolumeAttachmentResults"
			},
			"github.com/juju/juju/apiserver/params#VolumeAttachments": {
				"Fields": [
					{
						"Name": "VolumeAttachments",
						"Tag": "json:\"volume-attachments\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#VolumeAttachment"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#VolumeAttachments"
			},
			"github.com/juju/juju/apiserver/params#VolumeDetails": {
				"Fields": [
					{
						"Name": "VolumeTag",
						"Tag": "json:\"volume-tag\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Info",
						"Tag": "json:\"info\"",
						"Type": {
							"Name": "github.com/juju/juju/apiserver/params#VolumeInfo"
						}
					},
					{
						"Name": "Status",
						"Tag": "json:\"status\"",
						"Type": {
							"Name": "github.com/juju/juju/apiserver/params#EntityStatus"
						}
					},
					{
						"Name": "MachineAttachments",
						"Tag": "json:\"machine-attachments,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#VolumeAttachmentInfo"
							},
							"Key": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "map"
						}
					},
					{
						"Name": "Storage",
						"Tag": "json:\"storage,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#StorageDetails"
							},
							"Kind": "ptr"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#VolumeDetails"
			},
			"github.com/juju/juju/apiserver/params#VolumeDetailsListResult": {
				"Fields": [
					{
						"Name": "Result",
						"Tag": "json:\"result,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#VolumeDetails"
							},
							"Kind": "slice"
						}
					},
					{
						"Name": "Error",
						"Tag": "json:\"error,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Error"
							},
							"Kind": "ptr"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#VolumeDetailsListResult"
			},
			"github.com/juju/juju/apiserver/params#VolumeDetailsListResults": {
				"Fields": [
					{
						"Name": "Results",
						"Tag": "json:\"results,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#VolumeDetailsListResult"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#VolumeDetailsListResults"
			},
			"github.com/juju/juju/apiserver/params#VolumeFilter": {
				"Fields": [
					{
						"Name": "Machines",
						"Tag": "json:\"machines,omitempty\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Methods": {
					"IsEmpty": {
						"Name": "IsEmpty",
						"PtrReceiver": true,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Kind": "bool",
									"Name": "bool"
								}
							]
						}
					}
				},
				"Name": "github.com/juju/juju/apiserver/params#VolumeFilter"
			},
			"github.com/juju/juju/apiserver/params#VolumeFilters": {
				"Fields": [
					{
						"Name": "Filters",
						"Tag": "json:\"filters,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#VolumeFilter"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#VolumeFilters"
			},
			"github.com/juju/juju/apiserver/params#VolumeInfo": {
				"Fields": [
					{
						"Name": "VolumeId",
						"Tag": "json:\"volume-id\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "HardwareId",
						"Tag": "json:\"hardware-id,omitempty\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Size",
						"Tag": "json:\"size\"",
						"Type": {
							"Kind": "uint64",
							"Name": "uint64"
						}
					},
					{
						"Name": "Persistent",
						"Tag": "json:\"persistent\"",
						"Type": {
							"Kind": "bool",
							"Name": "bool"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#VolumeInfo"
			},
			"github.com/juju/juju/apiserver/params#VolumeParams": {
				"Fields": [
					{
						"Name": "VolumeTag",
						"Tag": "json:\"volume-tag\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Size",
						"Tag": "json:\"size\"",
						"Type": {
							"Kind": "uint64",
							"Name": "uint64"
						}
					},
					{
						"Name": "Provider",
						"Tag": "json:\"provider\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Attributes",
						"Tag": "json:\"attributes,omitempty\"",
						"Type": {
							"Elem": {
								"Kind": "interface"
							},
							"Key": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "map"
						}
					},
					{
						"Name": "Tags",
						"Tag": "json:\"tags,omitempty\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Key": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "map"
						}
					},
					{
						"Name": "Attachment",
						"Tag": "json:\"attachment,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#VolumeAttachmentParams"
							},
							"Kind": "ptr"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#VolumeParams"
			},
			"github.com/juju/juju/apiserver/params#VolumeParamsResult": {
				"Fields": [
					{
						"Name": "Result",
						"Tag": "json:\"result\"",
						"Type": {
							"Name": "github.com/juju/juju/apiserver/params#VolumeParams"
						}
					},
					{
						"Name": "Error",
						"Tag": "json:\"error,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Error"
							},
							"Kind": "ptr"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#VolumeParamsResult"
			},
			"github.com/juju/juju/apiserver/params#VolumeParamsResults": {
				"Fields": [
					{
						"Name": "Results",
						"Tag": "json:\"results,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#VolumeParamsResult"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#VolumeParamsResults"
			},
			"github.com/juju/juju/apiserver/params#VolumeResult": {
				"Fields": [
					{
						"Name": "Result",
						"Tag": "json:\"result\"",
						"Type": {
							"Name": "github.com/juju/juju/apiserver/params#Volume"
						}
					},
					{
						"Name": "Error",
						"Tag": "json:\"error,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Error"
							},
							"Kind": "ptr"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#VolumeResult"
			},
			"github.com/juju/juju/apiserver/params#VolumeResults": {
				"Fields": [
					{
						"Name": "Results",
						"Tag": "json:\"results,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#VolumeResult"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#VolumeResults"
			},
			"github.com/juju/juju/apiserver/params#Volumes": {
				"Fields": [
					{
						"Name": "Volumes",
						"Tag": "json:\"volumes\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Volume"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#Volumes"
			},
			"github.com/juju/juju/apiserver/params#WatchContainer": {
				"Fields": [
					{
						"Name": "MachineTag",
						"Tag": "json:\"machine-tag\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "ContainerType",
						"Tag": "json:\"container-type\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#WatchContainer"
			},
			"github.com/juju/juju/apiserver/params#WatchContainers": {
				"Fields": [
					{
						"Name": "Params",
						"Tag": "json:\"params\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#WatchContainer"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#WatchContainers"
			},
			"github.com/juju/juju/apiserver/params#ZoneResult": {
				"Fields": [
					{
						"Name": "Error",
						"Tag": "json:\"error,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#Error"
							},
							"Kind": "ptr"
						}
					},
					{
						"Name": "Name",
						"Tag": "json:\"name\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Available",
						"Tag": "json:\"available\"",
						"Type": {
							"Kind": "bool",
							"Name": "bool"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ZoneResult"
			},
			"github.com/juju/juju/apiserver/params#ZoneResults": {
				"Fields": [
					{
						"Name": "Results",
						"Tag": "json:\"results\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/apiserver/params#ZoneResult"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/apiserver/params#ZoneResults"
			},
			"github.com/juju/juju/constraints#Value": {
				"Fields": [
					{
						"Name": "Arch",
						"Tag": "json:\"arch,omitempty\" yaml:\"arch,omitempty\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "ptr"
						}
					},
					{
						"Name": "Container",
						"Tag": "json:\"container,omitempty\" yaml:\"container,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "github.com/juju/juju/instance#ContainerType"
							},
							"Kind": "ptr"
						}
					},
					{
						"Name": "CpuCores",
						"Tag": "json:\"cpu-cores,omitempty\" yaml:\"cpu-cores,omitempty\"",
						"Type": {
							"Elem": {
								"Kind": "uint64",
								"Name": "uint64"
							},
							"Kind": "ptr"
						}
					},
					{
						"Name": "CpuPower",
						"Tag": "json:\"cpu-power,omitempty\" yaml:\"cpu-power,omitempty\"",
						"Type": {
							"Elem": {
								"Kind": "uint64",
								"Name": "uint64"
							},
							"Kind": "ptr"
						}
					},
					{
						"Name": "Mem",
						"Tag": "json:\"mem,omitempty\" yaml:\"mem,omitempty\"",
						"Type": {
							"Elem": {
								"Kind": "uint64",
								"Name": "uint64"
							},
							"Kind": "ptr"
						}
					},
					{
						"Name": "RootDisk",
						"Tag": "json:\"root-disk,omitempty\" yaml:\"root-disk,omitempty\"",
						"Type": {
							"Elem": {
								"Kind": "uint64",
								"Name": "uint64"
							},
							"Kind": "ptr"
						}
					},
					{
						"Name": "Tags",
						"Tag": "json:\"tags,omitempty\" yaml:\"tags,omitempty\"",
						"Type": {
							"Elem": {
								"Elem": {
									"Kind": "string",
									"Name": "string"
								},
								"Kind": "slice"
							},
							"Kind": "ptr"
						}
					},
					{
						"Name": "InstanceType",
						"Tag": "json:\"instance-type,omitempty\" yaml:\"instance-type,omitempty\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "ptr"
						}
					},
					{
						"Name": "Spaces",
						"Tag": "json:\"spaces,omitempty\" yaml:\"spaces,omitempty\"",
						"Type": {
							"Elem": {
								"Elem": {
									"Kind": "string",
									"Name": "string"
								},
								"Kind": "slice"
							},
							"Kind": "ptr"
						}
					},
					{
						"Name": "VirtType",
						"Tag": "json:\"virt-type,omitempty\" yaml:\"virt-type,omitempty\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "ptr"
						}
					}
				],
				"Kind": "struct",
				"Methods": {
					"ExcludeSpaces": {
						"Name": "ExcludeSpaces",
						"PtrReceiver": true,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Elem": {
										"Kind": "string",
										"Name": "string"
									},
									"Kind": "slice"
								}
							]
						}
					},
					"GoString": {
						"Name": "GoString",
						"PtrReceiver": false,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Kind": "string",
									"Name": "string"
								}
							]
						}
					},
					"HasArch": {
						"Name": "HasArch",
						"PtrReceiver": true,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Kind": "bool",
									"Name": "bool"
								}
							]
						}
					},
					"HasContainer": {
						"Name": "HasContainer",
						"PtrReceiver": true,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Kind": "bool",
									"Name": "bool"
								}
							]
						}
					},
					"HasInstanceType": {
						"Name": "HasInstanceType",
						"PtrReceiver": true,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Kind": "bool",
									"Name": "bool"
								}
							]
						}
					},
					"HasVirtType": {
						"Name": "HasVirtType",
						"PtrReceiver": true,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Kind": "bool",
									"Name": "bool"
								}
							]
						}
					},
					"HaveSpaces": {
						"Name": "HaveSpaces",
						"PtrReceiver": true,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Kind": "bool",
									"Name": "bool"
								}
							]
						}
					},
					"IncludeSpaces": {
						"Name": "IncludeSpaces",
						"PtrReceiver": true,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Elem": {
										"Kind": "string",
										"Name": "string"
									},
									"Kind": "slice"
								}
							]
						}
					},
					"String": {
						"Name": "String",
						"PtrReceiver": false,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Kind": "string",
									"Name": "string"
								}
							]
						}
					},
					"UnmarshalYAML": {
						"Name": "UnmarshalYAML",
						"PtrReceiver": true,
						"Type": {
							"In": [
								{
									"In": [
										{
											"Kind": "interface"
										}
									],
									"Kind": "func",
									"Out": [
										{
											"Kind": "interface",
											"Methods": {
												"Error": {
													"Name": "Error",
													"PtrReceiver": false,
													"Type": {
														"Kind": "func",
														"Out": [
															{
																"Kind": "string",
																"Name": "string"
															}
														]
													}
												}
											},
											"Name": "error"
										}
									]
								}
							],
							"Kind": "func",
							"Out": [
								{
									"Kind": "interface",
									"Methods": {
										"Error": {
											"Name": "Error",
											"PtrReceiver": false,
											"Type": {
												"Kind": "func",
												"Out": [
													{
														"Kind": "string",
														"Name": "string"
													}
												]
											}
										}
									},
									"Name": "error"
								}
							]
						}
					}
				},
				"Name": "github.com/juju/juju/constraints#Value"
			},
			"github.com/juju/juju/instance#ContainerType": {
				"Kind": "string",
				"Name": "github.com/juju/juju/instance#ContainerType"
			},
			"github.com/juju/juju/instance#HardwareCharacteristics": {
				"Fields": [
					{
						"Name": "Arch",
						"Tag": "json:\"arch,omitempty\" yaml:\"arch,omitempty\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "ptr"
						}
					},
					{
						"Name": "Mem",
						"Tag": "json:\"mem,omitempty\" yaml:\"mem,omitempty\"",
						"Type": {
							"Elem": {
								"Kind": "uint64",
								"Name": "uint64"
							},
							"Kind": "ptr"
						}
					},
					{
						"Name": "RootDisk",
						"Tag": "json:\"root-disk,omitempty\" yaml:\"rootdisk,omitempty\"",
						"Type": {
							"Elem": {
								"Kind": "uint64",
								"Name": "uint64"
							},
							"Kind": "ptr"
						}
					},
					{
						"Name": "CpuCores",
						"Tag": "json:\"cpu-cores,omitempty\" yaml:\"cpucores,omitempty\"",
						"Type": {
							"Elem": {
								"Kind": "uint64",
								"Name": "uint64"
							},
							"Kind": "ptr"
						}
					},
					{
						"Name": "CpuPower",
						"Tag": "json:\"cpu-power,omitempty\" yaml:\"cpupower,omitempty\"",
						"Type": {
							"Elem": {
								"Kind": "uint64",
								"Name": "uint64"
							},
							"Kind": "ptr"
						}
					},
					{
						"Name": "Tags",
						"Tag": "json:\"tags,omitempty\" yaml:\"tags,omitempty\"",
						"Type": {
							"Elem": {
								"Elem": {
									"Kind": "string",
									"Name": "string"
								},
								"Kind": "slice"
							},
							"Kind": "ptr"
						}
					},
					{
						"Name": "AvailabilityZone",
						"Tag": "json:\"availability-zone,omitempty\" yaml:\"availabilityzone,omitempty\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "ptr"
						}
					}
				],
				"Kind": "struct",
				"Methods": {
					"Set": {
						"Name": "Set",
						"PtrReceiver": true,
						"Type": {
							"In": [
								{
									"Kind": "string",
									"Name": "string"
								}
							],
							"Kind": "func",
							"Out": [
								{
									"Kind": "interface",
									"Methods": {
										"Error": {
											"Name": "Error",
											"PtrReceiver": false,
											"Type": {
												"Kind": "func",
												"Out": [
													{
														"Kind": "string",
														"Name": "string"
													}
												]
											}
										}
									},
									"Name": "error"
								}
							]
						}
					},
					"String": {
						"Name": "String",
						"PtrReceiver": false,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Kind": "string",
									"Name": "string"
								}
							]
						}
					}
				},
				"Name": "github.com/juju/juju/instance#HardwareCharacteristics"
			},
			"github.com/juju/juju/instance#Id": {
				"Kind": "string",
				"Name": "github.com/juju/juju/instance#Id"
			},
			"github.com/juju/juju/instance#Placement": {
				"Fields": [
					{
						"Name": "Scope",
						"Tag": "json:\"scope\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Directive",
						"Tag": "json:\"directive\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Methods": {
					"String": {
						"Name": "String",
						"PtrReceiver": true,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Kind": "string",
									"Name": "string"
								}
							]
						}
					}
				},
				"Name": "github.com/juju/juju/instance#Placement"
			},
			"github.com/juju/juju/mongo#StorageEngine": {
				"Kind": "string",
				"Name": "github.com/juju/juju/mongo#StorageEngine"
			},
			"github.com/juju/juju/mongo#Version": {
				"Fields": [
					{
						"Name": "Major",
						"Type": {
							"Kind": "int",
							"Name": "int"
						}
					},
					{
						"Name": "Minor",
						"Type": {
							"Kind": "int",
							"Name": "int"
						}
					},
					{
						"Name": "Patch",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "StorageEngine",
						"Type": {
							"Name": "github.com/juju/juju/mongo#StorageEngine"
						}
					}
				],
				"Kind": "struct",
				"Methods": {
					"NewerThan": {
						"Name": "NewerThan",
						"PtrReceiver": false,
						"Type": {
							"In": [
								{
									"Name": "github.com/juju/juju/mongo#Version"
								}
							],
							"Kind": "func",
							"Out": [
								{
									"Kind": "int",
									"Name": "int"
								}
							]
						}
					},
					"String": {
						"Name": "String",
						"PtrReceiver": false,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Kind": "string",
									"Name": "string"
								}
							]
						}
					}
				},
				"Name": "github.com/juju/juju/mongo#Version"
			},
			"github.com/juju/juju/network#Address": {
				"Fields": [
					{
						"Name": "Value",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Type",
						"Type": {
							"Name": "github.com/juju/juju/network#AddressType"
						}
					},
					{
						"Anonymous": true,
						"Name": "Scope",
						"Type": {
							"Name": "github.com/juju/juju/network#Scope"
						}
					},
					{
						"Anonymous": true,
						"Name": "SpaceName",
						"Type": {
							"Name": "github.com/juju/juju/network#SpaceName"
						}
					},
					{
						"Name": "SpaceProviderId",
						"Type": {
							"Name": "github.com/juju/juju/network#Id"
						}
					}
				],
				"Kind": "struct",
				"Methods": {
					"GoString": {
						"Name": "GoString",
						"PtrReceiver": false,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Kind": "string",
									"Name": "string"
								}
							]
						}
					},
					"String": {
						"Name": "String",
						"PtrReceiver": false,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Kind": "string",
									"Name": "string"
								}
							]
						}
					}
				},
				"Name": "github.com/juju/juju/network#Address"
			},
			"github.com/juju/juju/network#AddressType": {
				"Kind": "string",
				"Name": "github.com/juju/juju/network#AddressType"
			},
			"github.com/juju/juju/network#HostPort": {
				"Fields": [
					{
						"Anonymous": true,
						"Name": "Address",
						"Type": {
							"Name": "github.com/juju/juju/network#Address"
						}
					},
					{
						"Name": "Port",
						"Type": {
							"Kind": "int",
							"Name": "int"
						}
					}
				],
				"Kind": "struct",
				"Methods": {
					"GoString": {
						"Name": "GoString",
						"PtrReceiver": false,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Kind": "string",
									"Name": "string"
								}
							]
						}
					},
					"NetAddr": {
						"Name": "NetAddr",
						"PtrReceiver": false,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Kind": "string",
									"Name": "string"
								}
							]
						}
					},
					"String": {
						"Name": "String",
						"PtrReceiver": false,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Kind": "string",
									"Name": "string"
								}
							]
						}
					}
				},
				"Name": "github.com/juju/juju/network#HostPort"
			},
			"github.com/juju/juju/network#Id": {
				"Kind": "string",
				"Name": "github.com/juju/juju/network#Id"
			},
			"github.com/juju/juju/network#PortRange": {
				"Fields": [
					{
						"Name": "FromPort",
						"Type": {
							"Kind": "int",
							"Name": "int"
						}
					},
					{
						"Name": "ToPort",
						"Type": {
							"Kind": "int",
							"Name": "int"
						}
					},
					{
						"Name": "Protocol",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Methods": {
					"ConflictsWith": {
						"Name": "ConflictsWith",
						"PtrReceiver": false,
						"Type": {
							"In": [
								{
									"Name": "github.com/juju/juju/network#PortRange"
								}
							],
							"Kind": "func",
							"Out": [
								{
									"Kind": "bool",
									"Name": "bool"
								}
							]
						}
					},
					"GoString": {
						"Name": "GoString",
						"PtrReceiver": false,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Kind": "string",
									"Name": "string"
								}
							]
						}
					},
					"String": {
						"Name": "String",
						"PtrReceiver": false,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Kind": "string",
									"Name": "string"
								}
							]
						}
					},
					"Validate": {
						"Name": "Validate",
						"PtrReceiver": false,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Kind": "interface",
									"Methods": {
										"Error": {
											"Name": "Error",
											"PtrReceiver": false,
											"Type": {
												"Kind": "func",
												"Out": [
													{
														"Kind": "string",
														"Name": "string"
													}
												]
											}
										}
									},
									"Name": "error"
								}
							]
						}
					}
				},
				"Name": "github.com/juju/juju/network#PortRange"
			},
			"github.com/juju/juju/network#Scope": {
				"Kind": "string",
				"Name": "github.com/juju/juju/network#Scope"
			},
			"github.com/juju/juju/network#SpaceName": {
				"Kind": "string",
				"Name": "github.com/juju/juju/network#SpaceName"
			},
			"github.com/juju/juju/state/multiwatcher#CharmRelation": {
				"Fields": [
					{
						"Name": "Name",
						"Tag": "json:\"name\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Role",
						"Tag": "json:\"role\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Interface",
						"Tag": "json:\"interface\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Optional",
						"Tag": "json:\"optional\"",
						"Type": {
							"Kind": "bool",
							"Name": "bool"
						}
					},
					{
						"Name": "Limit",
						"Tag": "json:\"limit\"",
						"Type": {
							"Kind": "int",
							"Name": "int"
						}
					},
					{
						"Name": "Scope",
						"Tag": "json:\"scope\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/state/multiwatcher#CharmRelation"
			},
			"github.com/juju/juju/state/multiwatcher#Delta": {
				"Fields": [
					{
						"Name": "Removed",
						"Tag": "json:\"removed\"",
						"Type": {
							"Kind": "bool",
							"Name": "bool"
						}
					},
					{
						"Name": "Entity",
						"Tag": "json:\"entity\"",
						"Type": {
							"Name": "github.com/juju/juju/state/multiwatcher#EntityInfo"
						}
					}
				],
				"Kind": "struct",
				"Methods": {
					"MarshalJSON": {
						"Name": "MarshalJSON",
						"PtrReceiver": true,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Elem": {
										"Kind": "uint8",
										"Name": "uint8"
									},
									"Kind": "slice"
								},
								{
									"Kind": "interface",
									"Methods": {
										"Error": {
											"Name": "Error",
											"PtrReceiver": false,
											"Type": {
												"Kind": "func",
												"Out": [
													{
														"Kind": "string",
														"Name": "string"
													}
												]
											}
										}
									},
									"Name": "error"
								}
							]
						}
					},
					"UnmarshalJSON": {
						"Name": "UnmarshalJSON",
						"PtrReceiver": true,
						"Type": {
							"In": [
								{
									"Elem": {
										"Kind": "uint8",
										"Name": "uint8"
									},
									"Kind": "slice"
								}
							],
							"Kind": "func",
							"Out": [
								{
									"Kind": "interface",
									"Methods": {
										"Error": {
											"Name": "Error",
											"PtrReceiver": false,
											"Type": {
												"Kind": "func",
												"Out": [
													{
														"Kind": "string",
														"Name": "string"
													}
												]
											}
										}
									},
									"Name": "error"
								}
							]
						}
					}
				},
				"Name": "github.com/juju/juju/state/multiwatcher#Delta"
			},
			"github.com/juju/juju/state/multiwatcher#Endpoint": {
				"Fields": [
					{
						"Name": "ApplicationName",
						"Tag": "json:\"application-name\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Relation",
						"Tag": "json:\"relation\"",
						"Type": {
							"Name": "github.com/juju/juju/state/multiwatcher#CharmRelation"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/state/multiwatcher#Endpoint"
			},
			"github.com/juju/juju/state/multiwatcher#EntityId": {
				"Fields": [
					{
						"Name": "Kind",
						"Tag": "json:\"kind\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "ModelUUID",
						"Tag": "json:\"model-uuid\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Id",
						"Tag": "json:\"id\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/state/multiwatcher#EntityId"
			},
			"github.com/juju/juju/state/multiwatcher#EntityInfo": {
				"Kind": "interface",
				"Methods": {
					"EntityId": {
						"Name": "EntityId",
						"PtrReceiver": false,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Name": "github.com/juju/juju/state/multiwatcher#EntityId"
								}
							]
						}
					}
				},
				"Name": "github.com/juju/juju/state/multiwatcher#EntityInfo"
			},
			"github.com/juju/juju/state/multiwatcher#MachineJob": {
				"Kind": "string",
				"Methods": {
					"NeedsState": {
						"Name": "NeedsState",
						"PtrReceiver": false,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Kind": "bool",
									"Name": "bool"
								}
							]
						}
					}
				},
				"Name": "github.com/juju/juju/state/multiwatcher#MachineJob"
			},
			"github.com/juju/juju/status#Status": {
				"Kind": "string",
				"Methods": {
					"KnownAgentStatus": {
						"Name": "KnownAgentStatus",
						"PtrReceiver": false,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Kind": "bool",
									"Name": "bool"
								}
							]
						}
					},
					"KnownInstanceStatus": {
						"Name": "KnownInstanceStatus",
						"PtrReceiver": false,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Kind": "bool",
									"Name": "bool"
								}
							]
						}
					},
					"KnownWorkloadStatus": {
						"Name": "KnownWorkloadStatus",
						"PtrReceiver": false,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Kind": "bool",
									"Name": "bool"
								}
							]
						}
					},
					"Matches": {
						"Name": "Matches",
						"PtrReceiver": false,
						"Type": {
							"In": [
								{
									"Name": "github.com/juju/juju/status#Status"
								}
							],
							"Kind": "func",
							"Out": [
								{
									"Kind": "bool",
									"Name": "bool"
								}
							]
						}
					},
					"String": {
						"Name": "String",
						"PtrReceiver": false,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Kind": "string",
									"Name": "string"
								}
							]
						}
					},
					"WorkloadMatches": {
						"Name": "WorkloadMatches",
						"PtrReceiver": false,
						"Type": {
							"In": [
								{
									"Name": "github.com/juju/juju/status#Status"
								}
							],
							"Kind": "func",
							"Out": [
								{
									"Kind": "bool",
									"Name": "bool"
								}
							]
						}
					}
				},
				"Name": "github.com/juju/juju/status#Status"
			},
			"github.com/juju/juju/storage#BlockDevice": {
				"Fields": [
					{
						"Name": "DeviceName",
						"Tag": "yaml:\"devicename,omitempty\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "DeviceLinks",
						"Tag": "yaml:\"devicelinks,omitempty\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "slice"
						}
					},
					{
						"Name": "Label",
						"Tag": "yaml:\"label,omitempty\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "UUID",
						"Tag": "yaml:\"uuid,omitempty\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "HardwareId",
						"Tag": "yaml:\"hardwareid,omitempty\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "BusAddress",
						"Tag": "yaml:\"busaddress,omitempty\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Size",
						"Tag": "yaml:\"size\"",
						"Type": {
							"Kind": "uint64",
							"Name": "uint64"
						}
					},
					{
						"Name": "FilesystemType",
						"Tag": "yaml:\"fstype,omitempty\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "InUse",
						"Tag": "yaml:\"inuse\"",
						"Type": {
							"Kind": "bool",
							"Name": "bool"
						}
					},
					{
						"Name": "MountPoint",
						"Tag": "yaml:\"mountpoint,omitempty\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/storage#BlockDevice"
			},
			"github.com/juju/juju/storage#Constraints": {
				"Fields": [
					{
						"Name": "Pool",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Size",
						"Type": {
							"Kind": "uint64",
							"Name": "uint64"
						}
					},
					{
						"Name": "Count",
						"Type": {
							"Kind": "uint64",
							"Name": "uint64"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/storage#Constraints"
			},
			"github.com/juju/juju/tools#Filter": {
				"Fields": [
					{
						"Name": "Number",
						"Type": {
							"Name": "github.com/juju/version#Number"
						}
					},
					{
						"Name": "Series",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Arch",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/juju/tools#Filter"
			},
			"github.com/juju/juju/tools#List": {
				"Elem": {
					"Elem": {
						"Name": "github.com/juju/juju/tools#Tools"
					},
					"Kind": "ptr"
				},
				"Kind": "slice",
				"Methods": {
					"AllSeries": {
						"Name": "AllSeries",
						"PtrReceiver": false,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Elem": {
										"Kind": "string",
										"Name": "string"
									},
									"Kind": "slice"
								}
							]
						}
					},
					"Arches": {
						"Name": "Arches",
						"PtrReceiver": false,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Elem": {
										"Kind": "string",
										"Name": "string"
									},
									"Kind": "slice"
								}
							]
						}
					},
					"Exclude": {
						"Name": "Exclude",
						"PtrReceiver": false,
						"Type": {
							"In": [
								{
									"Name": "github.com/juju/juju/tools#List"
								}
							],
							"Kind": "func",
							"Out": [
								{
									"Name": "github.com/juju/juju/tools#List"
								}
							]
						}
					},
					"Len": {
						"Name": "Len",
						"PtrReceiver": false,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Kind": "int",
									"Name": "int"
								}
							]
						}
					},
					"Less": {
						"Name": "Less",
						"PtrReceiver": false,
						"Type": {
							"In": [
								{
									"Kind": "int",
									"Name": "int"
								},
								{
									"Kind": "int",
									"Name": "int"
								}
							],
							"Kind": "func",
							"Out": [
								{
									"Kind": "bool",
									"Name": "bool"
								}
							]
						}
					},
					"Match": {
						"Name": "Match",
						"PtrReceiver": false,
						"Type": {
							"In": [
								{
									"Name": "github.com/juju/juju/tools#Filter"
								}
							],
							"Kind": "func",
							"Out": [
								{
									"Name": "github.com/juju/juju/tools#List"
								},
								{
									"Kind": "interface",
									"Methods": {
										"Error": {
											"Name": "Error",
											"PtrReceiver": false,
											"Type": {
												"Kind": "func",
												"Out": [
													{
														"Kind": "string",
														"Name": "string"
													}
												]
											}
										}
									},
									"Name": "error"
								}
							]
						}
					},
					"Newest": {
						"Name": "Newest",
						"PtrReceiver": false,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Name": "github.com/juju/version#Number"
								},
								{
									"Name": "github.com/juju/juju/tools#List"
								}
							]
						}
					},
					"NewestCompatible": {
						"Name": "NewestCompatible",
						"PtrReceiver": false,
						"Type": {
							"In": [
								{
									"Name": "github.com/juju/version#Number"
								}
							],
							"Kind": "func",
							"Out": [
								{
									"Name": "github.com/juju/version#Number"
								},
								{
									"Kind": "bool",
									"Name": "bool"
								}
							]
						}
					},
					"OneSeries": {
						"Name": "OneSeries",
						"PtrReceiver": false,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Kind": "string",
									"Name": "string"
								}
							]
						}
					},
					"String": {
						"Name": "String",
						"PtrReceiver": false,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Kind": "string",
									"Name": "string"
								}
							]
						}
					},
					"Swap": {
						"Name": "Swap",
						"PtrReceiver": false,
						"Type": {
							"In": [
								{
									"Kind": "int",
									"Name": "int"
								},
								{
									"Kind": "int",
									"Name": "int"
								}
							],
							"Kind": "func"
						}
					},
					"URLs": {
						"Name": "URLs",
						"PtrReceiver": false,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Elem": {
										"Elem": {
											"Kind": "string",
											"Name": "string"
										},
										"Kind": "slice"
									},
									"Key": {
										"Name": "github.com/juju/version#Binary"
									},
									"Kind": "map"
								}
							]
						}
					}
				},
				"Name": "github.com/juju/juju/tools#List"
			},
			"github.com/juju/juju/tools#Tools": {
				"Fields": [
					{
						"Name": "Version",
						"Tag": "json:\"version\"",
						"Type": {
							"Name": "github.com/juju/version#Binary"
						}
					},
					{
						"Name": "URL",
						"Tag": "json:\"url\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "SHA256",
						"Tag": "json:\"sha256,omitempty\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Size",
						"Tag": "json:\"size\"",
						"Type": {
							"Kind": "int64",
							"Name": "int64"
						}
					}
				],
				"Kind": "struct",
				"Methods": {
					"GetBSON": {
						"Name": "GetBSON",
						"PtrReceiver": true,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Kind": "interface"
								},
								{
									"Kind": "interface",
									"Methods": {
										"Error": {
											"Name": "Error",
											"PtrReceiver": false,
											"Type": {
												"Kind": "func",
												"Out": [
													{
														"Kind": "string",
														"Name": "string"
													}
												]
											}
										}
									},
									"Name": "error"
								}
							]
						}
					},
					"SetBSON": {
						"Name": "SetBSON",
						"PtrReceiver": true,
						"Type": {
							"In": [
								{
									"Name": "gopkg.in/mgo.v2/bson#Raw"
								}
							],
							"Kind": "func",
							"Out": [
								{
									"Kind": "interface",
									"Methods": {
										"Error": {
											"Name": "Error",
											"PtrReceiver": false,
											"Type": {
												"Kind": "func",
												"Out": [
													{
														"Kind": "string",
														"Name": "string"
													}
												]
											}
										}
									},
									"Name": "error"
								}
							]
						}
					}
				},
				"Name": "github.com/juju/juju/tools#Tools"
			},
			"github.com/juju/replicaset#Member": {
				"Fields": [
					{
						"Name": "Id",
						"Tag": "bson:\"_id\"",
						"Type": {
							"Kind": "int",
							"Name": "int"
						}
					},
					{
						"Name": "Address",
						"Tag": "bson:\"host\"",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Arbiter",
						"Tag": "bson:\"arbiterOnly,omitempty\"",
						"Type": {
							"Elem": {
								"Kind": "bool",
								"Name": "bool"
							},
							"Kind": "ptr"
						}
					},
					{
						"Name": "BuildIndexes",
						"Tag": "bson:\"buildIndexes,omitempty\"",
						"Type": {
							"Elem": {
								"Kind": "bool",
								"Name": "bool"
							},
							"Kind": "ptr"
						}
					},
					{
						"Name": "Hidden",
						"Tag": "bson:\"hidden,omitempty\"",
						"Type": {
							"Elem": {
								"Kind": "bool",
								"Name": "bool"
							},
							"Kind": "ptr"
						}
					},
					{
						"Name": "Priority",
						"Tag": "bson:\"priority,omitempty\"",
						"Type": {
							"Elem": {
								"Kind": "float64",
								"Name": "float64"
							},
							"Kind": "ptr"
						}
					},
					{
						"Name": "Tags",
						"Tag": "bson:\"tags,omitempty\"",
						"Type": {
							"Elem": {
								"Kind": "string",
								"Name": "string"
							},
							"Key": {
								"Kind": "string",
								"Name": "string"
							},
							"Kind": "map"
						}
					},
					{
						"Name": "SlaveDelay",
						"Tag": "bson:\"slaveDelay,omitempty\"",
						"Type": {
							"Elem": {
								"Name": "time#Duration"
							},
							"Kind": "ptr"
						}
					},
					{
						"Name": "Votes",
						"Tag": "bson:\"votes,omitempty\"",
						"Type": {
							"Elem": {
								"Kind": "int",
								"Name": "int"
							},
							"Kind": "ptr"
						}
					}
				],
				"Kind": "struct",
				"Name": "github.com/juju/replicaset#Member"
			},
			"github.com/juju/utils/proxy#Settings": {
				"Fields": [
					{
						"Name": "Http",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Https",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Ftp",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "NoProxy",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Methods": {
					"AsEnvironmentValues": {
						"Name": "AsEnvironmentValues",
						"PtrReceiver": true,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Elem": {
										"Kind": "string",
										"Name": "string"
									},
									"Kind": "slice"
								}
							]
						}
					},
					"AsScriptEnvironment": {
						"Name": "AsScriptEnvironment",
						"PtrReceiver": true,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Kind": "string",
									"Name": "string"
								}
							]
						}
					},
					"SetEnvironmentValues": {
						"Name": "SetEnvironmentValues",
						"PtrReceiver": true,
						"Type": {
							"Kind": "func"
						}
					}
				},
				"Name": "github.com/juju/utils/proxy#Settings"
			},
			"github.com/juju/utils/ssh#ListMode": {
				"Kind": "bool",
				"Name": "github.com/juju/utils/ssh#ListMode"
			},
			"github.com/juju/version#Binary": {
				"Fields": [
					{
						"Anonymous": true,
						"Name": "Number",
						"Type": {
							"Name": "github.com/juju/version#Number"
						}
					},
					{
						"Name": "Series",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Arch",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Methods": {
					"Compare": {
						"Name": "Compare",
						"PtrReceiver": false,
						"Type": {
							"In": [
								{
									"Name": "github.com/juju/version#Number"
								}
							],
							"Kind": "func",
							"Out": [
								{
									"Kind": "int",
									"Name": "int"
								}
							]
						}
					},
					"GetBSON": {
						"Name": "GetBSON",
						"PtrReceiver": false,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Kind": "interface"
								},
								{
									"Kind": "interface",
									"Methods": {
										"Error": {
											"Name": "Error",
											"PtrReceiver": false,
											"Type": {
												"Kind": "func",
												"Out": [
													{
														"Kind": "string",
														"Name": "string"
													}
												]
											}
										}
									},
									"Name": "error"
								}
							]
						}
					},
					"MarshalJSON": {
						"Name": "MarshalJSON",
						"PtrReceiver": false,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Elem": {
										"Kind": "uint8",
										"Name": "uint8"
									},
									"Kind": "slice"
								},
								{
									"Kind": "interface",
									"Methods": {
										"Error": {
											"Name": "Error",
											"PtrReceiver": false,
											"Type": {
												"Kind": "func",
												"Out": [
													{
														"Kind": "string",
														"Name": "string"
													}
												]
											}
										}
									},
									"Name": "error"
								}
							]
						}
					},
					"MarshalYAML": {
						"Name": "MarshalYAML",
						"PtrReceiver": false,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Kind": "interface"
								},
								{
									"Kind": "interface",
									"Methods": {
										"Error": {
											"Name": "Error",
											"PtrReceiver": false,
											"Type": {
												"Kind": "func",
												"Out": [
													{
														"Kind": "string",
														"Name": "string"
													}
												]
											}
										}
									},
									"Name": "error"
								}
							]
						}
					},
					"SetBSON": {
						"Name": "SetBSON",
						"PtrReceiver": true,
						"Type": {
							"In": [
								{
									"Name": "gopkg.in/mgo.v2/bson#Raw"
								}
							],
							"Kind": "func",
							"Out": [
								{
									"Kind": "interface",
									"Methods": {
										"Error": {
											"Name": "Error",
											"PtrReceiver": false,
											"Type": {
												"Kind": "func",
												"Out": [
													{
														"Kind": "string",
														"Name": "string"
													}
												]
											}
										}
									},
									"Name": "error"
								}
							]
						}
					},
					"String": {
						"Name": "String",
						"PtrReceiver": false,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Kind": "string",
									"Name": "string"
								}
							]
						}
					},
					"UnmarshalJSON": {
						"Name": "UnmarshalJSON",
						"PtrReceiver": true,
						"Type": {
							"In": [
								{
									"Elem": {
										"Kind": "uint8",
										"Name": "uint8"
									},
									"Kind": "slice"
								}
							],
							"Kind": "func",
							"Out": [
								{
									"Kind": "interface",
									"Methods": {
										"Error": {
											"Name": "Error",
											"PtrReceiver": false,
											"Type": {
												"Kind": "func",
												"Out": [
													{
														"Kind": "string",
														"Name": "string"
													}
												]
											}
										}
									},
									"Name": "error"
								}
							]
						}
					},
					"UnmarshalYAML": {
						"Name": "UnmarshalYAML",
						"PtrReceiver": true,
						"Type": {
							"In": [
								{
									"In": [
										{
											"Kind": "interface"
										}
									],
									"Kind": "func",
									"Out": [
										{
											"Kind": "interface",
											"Methods": {
												"Error": {
													"Name": "Error",
													"PtrReceiver": false,
													"Type": {
														"Kind": "func",
														"Out": [
															{
																"Kind": "string",
																"Name": "string"
															}
														]
													}
												}
											},
											"Name": "error"
										}
									]
								}
							],
							"Kind": "func",
							"Out": [
								{
									"Kind": "interface",
									"Methods": {
										"Error": {
											"Name": "Error",
											"PtrReceiver": false,
											"Type": {
												"Kind": "func",
												"Out": [
													{
														"Kind": "string",
														"Name": "string"
													}
												]
											}
										}
									},
									"Name": "error"
								}
							]
						}
					}
				},
				"Name": "github.com/juju/version#Binary"
			},
			"github.com/juju/version#Number": {
				"Fields": [
					{
						"Name": "Major",
						"Type": {
							"Kind": "int",
							"Name": "int"
						}
					},
					{
						"Name": "Minor",
						"Type": {
							"Kind": "int",
							"Name": "int"
						}
					},
					{
						"Name": "Tag",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Patch",
						"Type": {
							"Kind": "int",
							"Name": "int"
						}
					},
					{
						"Name": "Build",
						"Type": {
							"Kind": "int",
							"Name": "int"
						}
					}
				],
				"Kind": "struct",
				"Methods": {
					"Compare": {
						"Name": "Compare",
						"PtrReceiver": false,
						"Type": {
							"In": [
								{
									"Name": "github.com/juju/version#Number"
								}
							],
							"Kind": "func",
							"Out": [
								{
									"Kind": "int",
									"Name": "int"
								}
							]
						}
					},
					"GetBSON": {
						"Name": "GetBSON",
						"PtrReceiver": false,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Kind": "interface"
								},
								{
									"Kind": "interface",
									"Methods": {
										"Error": {
											"Name": "Error",
											"PtrReceiver": false,
											"Type": {
												"Kind": "func",
												"Out": [
													{
														"Kind": "string",
														"Name": "string"
													}
												]
											}
										}
									},
									"Name": "error"
								}
							]
						}
					},
					"MarshalJSON": {
						"Name": "MarshalJSON",
						"PtrReceiver": false,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Elem": {
										"Kind": "uint8",
										"Name": "uint8"
									},
									"Kind": "slice"
								},
								{
									"Kind": "interface",
									"Methods": {
										"Error": {
											"Name": "Error",
											"PtrReceiver": false,
											"Type": {
												"Kind": "func",
												"Out": [
													{
														"Kind": "string",
														"Name": "string"
													}
												]
											}
										}
									},
									"Name": "error"
								}
							]
						}
					},
					"MarshalYAML": {
						"Name": "MarshalYAML",
						"PtrReceiver": false,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Kind": "interface"
								},
								{
									"Kind": "interface",
									"Methods": {
										"Error": {
											"Name": "Error",
											"PtrReceiver": false,
											"Type": {
												"Kind": "func",
												"Out": [
													{
														"Kind": "string",
														"Name": "string"
													}
												]
											}
										}
									},
									"Name": "error"
								}
							]
						}
					},
					"SetBSON": {
						"Name": "SetBSON",
						"PtrReceiver": true,
						"Type": {
							"In": [
								{
									"Name": "gopkg.in/mgo.v2/bson#Raw"
								}
							],
							"Kind": "func",
							"Out": [
								{
									"Kind": "interface",
									"Methods": {
										"Error": {
											"Name": "Error",
											"PtrReceiver": false,
											"Type": {
												"Kind": "func",
												"Out": [
													{
														"Kind": "string",
														"Name": "string"
													}
												]
											}
										}
									},
									"Name": "error"
								}
							]
						}
					},
					"String": {
						"Name": "String",
						"PtrReceiver": false,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Kind": "string",
									"Name": "string"
								}
							]
						}
					},
					"UnmarshalJSON": {
						"Name": "UnmarshalJSON",
						"PtrReceiver": true,
						"Type": {
							"In": [
								{
									"Elem": {
										"Kind": "uint8",
										"Name": "uint8"
									},
									"Kind": "slice"
								}
							],
							"Kind": "func",
							"Out": [
								{
									"Kind": "interface",
									"Methods": {
										"Error": {
											"Name": "Error",
											"PtrReceiver": false,
											"Type": {
												"Kind": "func",
												"Out": [
													{
														"Kind": "string",
														"Name": "string"
													}
												]
											}
										}
									},
									"Name": "error"
								}
							]
						}
					},
					"UnmarshalYAML": {
						"Name": "UnmarshalYAML",
						"PtrReceiver": true,
						"Type": {
							"In": [
								{
									"In": [
										{
											"Kind": "interface"
										}
									],
									"Kind": "func",
									"Out": [
										{
											"Kind": "interface",
											"Methods": {
												"Error": {
													"Name": "Error",
													"PtrReceiver": false,
													"Type": {
														"Kind": "func",
														"Out": [
															{
																"Kind": "string",
																"Name": "string"
															}
														]
													}
												}
											},
											"Name": "error"
										}
									]
								}
							],
							"Kind": "func",
							"Out": [
								{
									"Kind": "interface",
									"Methods": {
										"Error": {
											"Name": "Error",
											"PtrReceiver": false,
											"Type": {
												"Kind": "func",
												"Out": [
													{
														"Kind": "string",
														"Name": "string"
													}
												]
											}
										}
									},
									"Name": "error"
								}
							]
						}
					}
				},
				"Name": "github.com/juju/version#Number"
			},
			"gopkg.in/juju/names.v2#ApplicationTag": {
				"Fields": [
					{
						"Name": "Name",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Methods": {
					"Id": {
						"Name": "Id",
						"PtrReceiver": false,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Kind": "string",
									"Name": "string"
								}
							]
						}
					},
					"Kind": {
						"Name": "Kind",
						"PtrReceiver": false,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Kind": "string",
									"Name": "string"
								}
							]
						}
					},
					"String": {
						"Name": "String",
						"PtrReceiver": false,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Kind": "string",
									"Name": "string"
								}
							]
						}
					}
				},
				"Name": "gopkg.in/juju/names.v2#ApplicationTag"
			},
			"gopkg.in/macaroon.v1#Caveat": {
				"Fields": [
					{
						"Name": "Id",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					},
					{
						"Name": "Location",
						"Type": {
							"Kind": "string",
							"Name": "string"
						}
					}
				],
				"Kind": "struct",
				"Name": "gopkg.in/macaroon.v1#Caveat"
			},
			"gopkg.in/macaroon.v1#Macaroon": {
				"Kind": "struct",
				"Methods": {
					"AddFirstPartyCaveat": {
						"Name": "AddFirstPartyCaveat",
						"PtrReceiver": true,
						"Type": {
							"In": [
								{
									"Kind": "string",
									"Name": "string"
								}
							],
							"Kind": "func",
							"Out": [
								{
									"Kind": "interface",
									"Methods": {
										"Error": {
											"Name": "Error",
											"PtrReceiver": false,
											"Type": {
												"Kind": "func",
												"Out": [
													{
														"Kind": "string",
														"Name": "string"
													}
												]
											}
										}
									},
									"Name": "error"
								}
							]
						}
					},
					"AddThirdPartyCaveat": {
						"Name": "AddThirdPartyCaveat",
						"PtrReceiver": true,
						"Type": {
							"In": [
								{
									"Elem": {
										"Kind": "uint8",
										"Name": "uint8"
									},
									"Kind": "slice"
								},
								{
									"Kind": "string",
									"Name": "string"
								},
								{
									"Kind": "string",
									"Name": "string"
								}
							],
							"Kind": "func",
							"Out": [
								{
									"Kind": "interface",
									"Methods": {
										"Error": {
											"Name": "Error",
											"PtrReceiver": false,
											"Type": {
												"Kind": "func",
												"Out": [
													{
														"Kind": "string",
														"Name": "string"
													}
												]
											}
										}
									},
									"Name": "error"
								}
							]
						}
					},
					"Bind": {
						"Name": "Bind",
						"PtrReceiver": true,
						"Type": {
							"In": [
								{
									"Elem": {
										"Kind": "uint8",
										"Name": "uint8"
									},
									"Kind": "slice"
								}
							],
							"Kind": "func"
						}
					},
					"Caveats": {
						"Name": "Caveats",
						"PtrReceiver": true,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Elem": {
										"Name": "gopkg.in/macaroon.v1#Caveat"
									},
									"Kind": "slice"
								}
							]
						}
					},
					"Clone": {
						"Name": "Clone",
						"PtrReceiver": true,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Elem": {
										"Name": "gopkg.in/macaroon.v1#Macaroon"
									},
									"Kind": "ptr"
								}
							]
						}
					},
					"Id": {
						"Name": "Id",
						"PtrReceiver": true,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Kind": "string",
									"Name": "string"
								}
							]
						}
					},
					"Location": {
						"Name": "Location",
						"PtrReceiver": true,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Kind": "string",
									"Name": "string"
								}
							]
						}
					},
					"MarshalBinary": {
						"Name": "MarshalBinary",
						"PtrReceiver": true,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Elem": {
										"Kind": "uint8",
										"Name": "uint8"
									},
									"Kind": "slice"
								},
								{
									"Kind": "interface",
									"Methods": {
										"Error": {
											"Name": "Error",
											"PtrReceiver": false,
											"Type": {
												"Kind": "func",
												"Out": [
													{
														"Kind": "string",
														"Name": "string"
													}
												]
											}
										}
									},
									"Name": "error"
								}
							]
						}
					},
					"MarshalJSON": {
						"Name": "MarshalJSON",
						"PtrReceiver": true,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Elem": {
										"Kind": "uint8",
										"Name": "uint8"
									},
									"Kind": "slice"
								},
								{
									"Kind": "interface",
									"Methods": {
										"Error": {
											"Name": "Error",
											"PtrReceiver": false,
											"Type": {
												"Kind": "func",
												"Out": [
													{
														"Kind": "string",
														"Name": "string"
													}
												]
											}
										}
									},
									"Name": "error"
								}
							]
						}
					},
					"Signature": {
						"Name": "Signature",
						"PtrReceiver": true,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Elem": {
										"Kind": "uint8",
										"Name": "uint8"
									},
									"Kind": "slice"
								}
							]
						}
					},
					"UnmarshalBinary": {
						"Name": "UnmarshalBinary",
						"PtrReceiver": true,
						"Type": {
							"In": [
								{
									"Elem": {
										"Kind": "uint8",
										"Name": "uint8"
									},
									"Kind": "slice"
								}
							],
							"Kind": "func",
							"Out": [
								{
									"Kind": "interface",
									"Methods": {
										"Error": {
											"Name": "Error",
											"PtrReceiver": false,
											"Type": {
												"Kind": "func",
												"Out": [
													{
														"Kind": "string",
														"Name": "string"
													}
												]
											}
										}
									},
									"Name": "error"
								}
							]
						}
					},
					"UnmarshalJSON": {
						"Name": "UnmarshalJSON",
						"PtrReceiver": true,
						"Type": {
							"In": [
								{
									"Elem": {
										"Kind": "uint8",
										"Name": "uint8"
									},
									"Kind": "slice"
								}
							],
							"Kind": "func",
							"Out": [
								{
									"Kind": "interface",
									"Methods": {
										"Error": {
											"Name": "Error",
											"PtrReceiver": false,
											"Type": {
												"Kind": "func",
												"Out": [
													{
														"Kind": "string",
														"Name": "string"
													}
												]
											}
										}
									},
									"Name": "error"
								}
							]
						}
					},
					"Verify": {
						"Name": "Verify",
						"PtrReceiver": true,
						"Type": {
							"In": [
								{
									"Elem": {
										"Kind": "uint8",
										"Name": "uint8"
									},
									"Kind": "slice"
								},
								{
									"In": [
										{
											"Kind": "string",
											"Name": "string"
										}
									],
									"Kind": "func",
									"Out": [
										{
											"Kind": "interface",
											"Methods": {
												"Error": {
													"Name": "Error",
													"PtrReceiver": false,
													"Type": {
														"Kind": "func",
														"Out": [
															{
																"Kind": "string",
																"Name": "string"
															}
														]
													}
												}
											},
											"Name": "error"
										}
									]
								},
								{
									"Elem": {
										"Elem": {
											"Name": "gopkg.in/macaroon.v1#Macaroon"
										},
										"Kind": "ptr"
									},
									"Kind": "slice"
								}
							],
							"Kind": "func",
							"Out": [
								{
									"Kind": "interface",
									"Methods": {
										"Error": {
											"Name": "Error",
											"PtrReceiver": false,
											"Type": {
												"Kind": "func",
												"Out": [
													{
														"Kind": "string",
														"Name": "string"
													}
												]
											}
										}
									},
									"Name": "error"
								}
							]
						}
					}
				},
				"Name": "gopkg.in/macaroon.v1#Macaroon"
			},
			"gopkg.in/macaroon.v1#Slice": {
				"Elem": {
					"Elem": {
						"Name": "gopkg.in/macaroon.v1#Macaroon"
					},
					"Kind": "ptr"
				},
				"Kind": "slice",
				"Methods": {
					"MarshalBinary": {
						"Name": "MarshalBinary",
						"PtrReceiver": false,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Elem": {
										"Kind": "uint8",
										"Name": "uint8"
									},
									"Kind": "slice"
								},
								{
									"Kind": "interface",
									"Methods": {
										"Error": {
											"Name": "Error",
											"PtrReceiver": false,
											"Type": {
												"Kind": "func",
												"Out": [
													{
														"Kind": "string",
														"Name": "string"
													}
												]
											}
										}
									},
									"Name": "error"
								}
							]
						}
					},
					"UnmarshalBinary": {
						"Name": "UnmarshalBinary",
						"PtrReceiver": true,
						"Type": {
							"In": [
								{
									"Elem": {
										"Kind": "uint8",
										"Name": "uint8"
									},
									"Kind": "slice"
								}
							],
							"Kind": "func",
							"Out": [
								{
									"Kind": "interface",
									"Methods": {
										"Error": {
											"Name": "Error",
											"PtrReceiver": false,
											"Type": {
												"Kind": "func",
												"Out": [
													{
														"Kind": "string",
														"Name": "string"
													}
												]
											}
										}
									},
									"Name": "error"
								}
							]
						}
					}
				},
				"Name": "gopkg.in/macaroon.v1#Slice"
			},
			"gopkg.in/mgo.v2/bson#Raw": {
				"Fields": [
					{
						"Name": "Kind",
						"Type": {
							"Kind": "uint8",
							"Name": "uint8"
						}
					},
					{
						"Name": "Data",
						"Type": {
							"Elem": {
								"Kind": "uint8",
								"Name": "uint8"
							},
							"Kind": "slice"
						}
					}
				],
				"Kind": "struct",
				"Methods": {
					"Unmarshal": {
						"Name": "Unmarshal",
						"PtrReceiver": false,
						"Type": {
							"In": [
								{
									"Kind": "interface"
								}
							],
							"Kind": "func",
							"Out": [
								{
									"Kind": "interface",
									"Methods": {
										"Error": {
											"Name": "Error",
											"PtrReceiver": false,
											"Type": {
												"Kind": "func",
												"Out": [
													{
														"Kind": "string",
														"Name": "string"
													}
												]
											}
										}
									},
									"Name": "error"
								}
							]
						}
					}
				},
				"Name": "gopkg.in/mgo.v2/bson#Raw"
			},
			"time#Duration": {
				"Kind": "int64",
				"Methods": {
					"Hours": {
						"Name": "Hours",
						"PtrReceiver": false,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Kind": "float64",
									"Name": "float64"
								}
							]
						}
					},
					"Minutes": {
						"Name": "Minutes",
						"PtrReceiver": false,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Kind": "float64",
									"Name": "float64"
								}
							]
						}
					},
					"Nanoseconds": {
						"Name": "Nanoseconds",
						"PtrReceiver": false,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Kind": "int64",
									"Name": "int64"
								}
							]
						}
					},
					"Seconds": {
						"Name": "Seconds",
						"PtrReceiver": false,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Kind": "float64",
									"Name": "float64"
								}
							]
						}
					},
					"String": {
						"Name": "String",
						"PtrReceiver": false,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Kind": "string",
									"Name": "string"
								}
							]
						}
					}
				},
				"Name": "time#Duration"
			},
			"time#Location": {
				"Kind": "struct",
				"Methods": {
					"String": {
						"Name": "String",
						"PtrReceiver": true,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Kind": "string",
									"Name": "string"
								}
							]
						}
					}
				},
				"Name": "time#Location"
			},
			"time#Month": {
				"Kind": "int",
				"Methods": {
					"String": {
						"Name": "String",
						"PtrReceiver": false,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Kind": "string",
									"Name": "string"
								}
							]
						}
					}
				},
				"Name": "time#Month"
			},
			"time#Time": {
				"Kind": "struct",
				"Methods": {
					"Add": {
						"Name": "Add",
						"PtrReceiver": false,
						"Type": {
							"In": [
								{
									"Name": "time#Duration"
								}
							],
							"Kind": "func",
							"Out": [
								{
									"Name": "time#Time"
								}
							]
						}
					},
					"AddDate": {
						"Name": "AddDate",
						"PtrReceiver": false,
						"Type": {
							"In": [
								{
									"Kind": "int",
									"Name": "int"
								},
								{
									"Kind": "int",
									"Name": "int"
								},
								{
									"Kind": "int",
									"Name": "int"
								}
							],
							"Kind": "func",
							"Out": [
								{
									"Name": "time#Time"
								}
							]
						}
					},
					"After": {
						"Name": "After",
						"PtrReceiver": false,
						"Type": {
							"In": [
								{
									"Name": "time#Time"
								}
							],
							"Kind": "func",
							"Out": [
								{
									"Kind": "bool",
									"Name": "bool"
								}
							]
						}
					},
					"AppendFormat": {
						"Name": "AppendFormat",
						"PtrReceiver": false,
						"Type": {
							"In": [
								{
									"Elem": {
										"Kind": "uint8",
										"Name": "uint8"
									},
									"Kind": "slice"
								},
								{
									"Kind": "string",
									"Name": "string"
								}
							],
							"Kind": "func",
							"Out": [
								{
									"Elem": {
										"Kind": "uint8",
										"Name": "uint8"
									},
									"Kind": "slice"
								}
							]
						}
					},
					"Before": {
						"Name": "Before",
						"PtrReceiver": false,
						"Type": {
							"In": [
								{
									"Name": "time#Time"
								}
							],
							"Kind": "func",
							"Out": [
								{
									"Kind": "bool",
									"Name": "bool"
								}
							]
						}
					},
					"Clock": {
						"Name": "Clock",
						"PtrReceiver": false,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Kind": "int",
									"Name": "int"
								},
								{
									"Kind": "int",
									"Name": "int"
								},
								{
									"Kind": "int",
									"Name": "int"
								}
							]
						}
					},
					"Date": {
						"Name": "Date",
						"PtrReceiver": false,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Kind": "int",
									"Name": "int"
								},
								{
									"Name": "time#Month"
								},
								{
									"Kind": "int",
									"Name": "int"
								}
							]
						}
					},
					"Day": {
						"Name": "Day",
						"PtrReceiver": false,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Kind": "int",
									"Name": "int"
								}
							]
						}
					},
					"Equal": {
						"Name": "Equal",
						"PtrReceiver": false,
						"Type": {
							"In": [
								{
									"Name": "time#Time"
								}
							],
							"Kind": "func",
							"Out": [
								{
									"Kind": "bool",
									"Name": "bool"
								}
							]
						}
					},
					"Format": {
						"Name": "Format",
						"PtrReceiver": false,
						"Type": {
							"In": [
								{
									"Kind": "string",
									"Name": "string"
								}
							],
							"Kind": "func",
							"Out": [
								{
									"Kind": "string",
									"Name": "string"
								}
							]
						}
					},
					"GobDecode": {
						"Name": "GobDecode",
						"PtrReceiver": true,
						"Type": {
							"In": [
								{
									"Elem": {
										"Kind": "uint8",
										"Name": "uint8"
									},
									"Kind": "slice"
								}
							],
							"Kind": "func",
							"Out": [
								{
									"Kind": "interface",
									"Methods": {
										"Error": {
											"Name": "Error",
											"PtrReceiver": false,
											"Type": {
												"Kind": "func",
												"Out": [
													{
														"Kind": "string",
														"Name": "string"
													}
												]
											}
										}
									},
									"Name": "error"
								}
							]
						}
					},
					"GobEncode": {
						"Name": "GobEncode",
						"PtrReceiver": false,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Elem": {
										"Kind": "uint8",
										"Name": "uint8"
									},
									"Kind": "slice"
								},
								{
									"Kind": "interface",
									"Methods": {
										"Error": {
											"Name": "Error",
											"PtrReceiver": false,
											"Type": {
												"Kind": "func",
												"Out": [
													{
														"Kind": "string",
														"Name": "string"
													}
												]
											}
										}
									},
									"Name": "error"
								}
							]
						}
					},
					"Hour": {
						"Name": "Hour",
						"PtrReceiver": false,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Kind": "int",
									"Name": "int"
								}
							]
						}
					},
					"ISOWeek": {
						"Name": "ISOWeek",
						"PtrReceiver": false,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Kind": "int",
									"Name": "int"
								},
								{
									"Kind": "int",
									"Name": "int"
								}
							]
						}
					},
					"In": {
						"Name": "In",
						"PtrReceiver": false,
						"Type": {
							"In": [
								{
									"Elem": {
										"Name": "time#Location"
									},
									"Kind": "ptr"
								}
							],
							"Kind": "func",
							"Out": [
								{
									"Name": "time#Time"
								}
							]
						}
					},
					"IsZero": {
						"Name": "IsZero",
						"PtrReceiver": false,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Kind": "bool",
									"Name": "bool"
								}
							]
						}
					},
					"Local": {
						"Name": "Local",
						"PtrReceiver": false,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Name": "time#Time"
								}
							]
						}
					},
					"Location": {
						"Name": "Location",
						"PtrReceiver": false,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Elem": {
										"Name": "time#Location"
									},
									"Kind": "ptr"
								}
							]
						}
					},
					"MarshalBinary": {
						"Name": "MarshalBinary",
						"PtrReceiver": false,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Elem": {
										"Kind": "uint8",
										"Name": "uint8"
									},
									"Kind": "slice"
								},
								{
									"Kind": "interface",
									"Methods": {
										"Error": {
											"Name": "Error",
											"PtrReceiver": false,
											"Type": {
												"Kind": "func",
												"Out": [
													{
														"Kind": "string",
														"Name": "string"
													}
												]
											}
										}
									},
									"Name": "error"
								}
							]
						}
					},
					"MarshalJSON": {
						"Name": "MarshalJSON",
						"PtrReceiver": false,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Elem": {
										"Kind": "uint8",
										"Name": "uint8"
									},
									"Kind": "slice"
								},
								{
									"Kind": "interface",
									"Methods": {
										"Error": {
											"Name": "Error",
											"PtrReceiver": false,
											"Type": {
												"Kind": "func",
												"Out": [
													{
														"Kind": "string",
														"Name": "string"
													}
												]
											}
										}
									},
									"Name": "error"
								}
							]
						}
					},
					"MarshalText": {
						"Name": "MarshalText",
						"PtrReceiver": false,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Elem": {
										"Kind": "uint8",
										"Name": "uint8"
									},
									"Kind": "slice"
								},
								{
									"Kind": "interface",
									"Methods": {
										"Error": {
											"Name": "Error",
											"PtrReceiver": false,
											"Type": {
												"Kind": "func",
												"Out": [
													{
														"Kind": "string",
														"Name": "string"
													}
												]
											}
										}
									},
									"Name": "error"
								}
							]
						}
					},
					"Minute": {
						"Name": "Minute",
						"PtrReceiver": false,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Kind": "int",
									"Name": "int"
								}
							]
						}
					},
					"Month": {
						"Name": "Month",
						"PtrReceiver": false,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Name": "time#Month"
								}
							]
						}
					},
					"Nanosecond": {
						"Name": "Nanosecond",
						"PtrReceiver": false,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Kind": "int",
									"Name": "int"
								}
							]
						}
					},
					"Round": {
						"Name": "Round",
						"PtrReceiver": false,
						"Type": {
							"In": [
								{
									"Name": "time#Duration"
								}
							],
							"Kind": "func",
							"Out": [
								{
									"Name": "time#Time"
								}
							]
						}
					},
					"Second": {
						"Name": "Second",
						"PtrReceiver": false,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Kind": "int",
									"Name": "int"
								}
							]
						}
					},
					"String": {
						"Name": "String",
						"PtrReceiver": false,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Kind": "string",
									"Name": "string"
								}
							]
						}
					},
					"Sub": {
						"Name": "Sub",
						"PtrReceiver": false,
						"Type": {
							"In": [
								{
									"Name": "time#Time"
								}
							],
							"Kind": "func",
							"Out": [
								{
									"Name": "time#Duration"
								}
							]
						}
					},
					"Truncate": {
						"Name": "Truncate",
						"PtrReceiver": false,
						"Type": {
							"In": [
								{
									"Name": "time#Duration"
								}
							],
							"Kind": "func",
							"Out": [
								{
									"Name": "time#Time"
								}
							]
						}
					},
					"UTC": {
						"Name": "UTC",
						"PtrReceiver": false,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Name": "time#Time"
								}
							]
						}
					},
					"Unix": {
						"Name": "Unix",
						"PtrReceiver": false,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Kind": "int64",
									"Name": "int64"
								}
							]
						}
					},
					"UnixNano": {
						"Name": "UnixNano",
						"PtrReceiver": false,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Kind": "int64",
									"Name": "int64"
								}
							]
						}
					},
					"UnmarshalBinary": {
						"Name": "UnmarshalBinary",
						"PtrReceiver": true,
						"Type": {
							"In": [
								{
									"Elem": {
										"Kind": "uint8",
										"Name": "uint8"
									},
									"Kind": "slice"
								}
							],
							"Kind": "func",
							"Out": [
								{
									"Kind": "interface",
									"Methods": {
										"Error": {
											"Name": "Error",
											"PtrReceiver": false,
											"Type": {
												"Kind": "func",
												"Out": [
													{
														"Kind": "string",
														"Name": "string"
													}
												]
											}
										}
									},
									"Name": "error"
								}
							]
						}
					},
					"UnmarshalJSON": {
						"Name": "UnmarshalJSON",
						"PtrReceiver": true,
						"Type": {
							"In": [
								{
									"Elem": {
										"Kind": "uint8",
										"Name": "uint8"
									},
									"Kind": "slice"
								}
							],
							"Kind": "func",
							"Out": [
								{
									"Kind": "interface",
									"Methods": {
										"Error": {
											"Name": "Error",
											"PtrReceiver": false,
											"Type": {
												"Kind": "func",
												"Out": [
													{
														"Kind": "string",
														"Name": "string"
													}
												]
											}
										}
									},
									"Name": "error"
								}
							]
						}
					},
					"UnmarshalText": {
						"Name": "UnmarshalText",
						"PtrReceiver": true,
						"Type": {
							"In": [
								{
									"Elem": {
										"Kind": "uint8",
										"Name": "uint8"
									},
									"Kind": "slice"
								}
							],
							"Kind": "func",
							"Out": [
								{
									"Kind": "interface",
									"Methods": {
										"Error": {
											"Name": "Error",
											"PtrReceiver": false,
											"Type": {
												"Kind": "func",
												"Out": [
													{
														"Kind": "string",
														"Name": "string"
													}
												]
											}
										}
									},
									"Name": "error"
								}
							]
						}
					},
					"Weekday": {
						"Name": "Weekday",
						"PtrReceiver": false,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Name": "time#Weekday"
								}
							]
						}
					},
					"Year": {
						"Name": "Year",
						"PtrReceiver": false,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Kind": "int",
									"Name": "int"
								}
							]
						}
					},
					"YearDay": {
						"Name": "YearDay",
						"PtrReceiver": false,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Kind": "int",
									"Name": "int"
								}
							]
						}
					},
					"Zone": {
						"Name": "Zone",
						"PtrReceiver": false,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Kind": "string",
									"Name": "string"
								},
								{
									"Kind": "int",
									"Name": "int"
								}
							]
						}
					}
				},
				"Name": "time#Time"
			},
			"time#Weekday": {
				"Kind": "int",
				"Methods": {
					"String": {
						"Name": "String",
						"PtrReceiver": false,
						"Type": {
							"Kind": "func",
							"Out": [
								{
									"Kind": "string",
									"Name": "string"
								}
							]
						}
					}
				},
				"Name": "time#Weekday"
			}
		}
	}
}
